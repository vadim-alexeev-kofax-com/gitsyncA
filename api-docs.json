{
  "swagger" : "2.0",
  "info" : {
    "description" : "Kofax RPA Management Console REST services",
    "version" : "11.2.0.11",
    "title" : "Kofax RPA Management Console REST API",
    "termsOfService" : "https://www.kofax.com/contact-us",
    "contact" : {
      "name" : "Kofax RPA Team",
      "url" : "www.kofax.com",
      "email" : "support@kofax.com"
    },
    "license" : {
      "name" : "Commercial license",
      "url" : "https://www.kofax.com/Products/Robotic-Process-Automation/Kapow/Overview"
    }
  },
  "host" : "localhost:8080/",
  "basePath" : "ManagementConsole/api",
  "tags" : [ {
    "name" : "AboutController",
    "description" : "About Data Controller Related Endpoints"
  }, {
    "name" : "admission"
  }, {
    "name" : "BackupController"
  }, {
    "name" : "ClusterController",
    "description" : "RoboServer Cluster Related Endpoints"
  }, {
    "name" : "CyberArkSettingsController"
  }, {
    "name" : "CyberArkStoreAccessRestController"
  }, {
    "name" : "CyberArkStoreRestController"
  }, {
    "name" : "DasMessageLogController"
  }, {
    "name" : "DatabaseController",
    "description" : "Database Related Endpoints"
  }, {
    "name" : "DatabaseDriversSettingsController",
    "description" : "Management Console settings for Database drivers"
  }, {
    "name" : "DatabaseTypesSettingsController"
  }, {
    "name" : "DataViewController"
  }, {
    "name" : "DesignStudioSettingsController",
    "description" : "Management Console settings for Design studio"
  }, {
    "name" : "DeviceMappingsController"
  }, {
    "name" : "DevicesController"
  }, {
    "name" : "EmailAccountsRestController",
    "description" : "Email Server configuration management endpoints"
  }, {
    "name" : "EmailTriggersRestController",
    "description" : "End points required for Robot Trigger configurations. Currently supports Email triggers only"
  }, {
    "name" : "ErrorLookupController",
    "description" : "Provides an ability to get a list of all available error codes and their messages"
  }, {
    "name" : "GeneralSettingsController",
    "description" : "Management Console settings for general configuration, SMTP Server, Proxy Server, Robo Server Authentication, DAS Ping Interval Configuration, RFS Server"
  }, {
    "name" : "KtaSettingsController",
    "description" : "Management Console settings for KTA Configuration"
  }, {
    "name" : "LicenseController",
    "description" : "License Related Endpoints"
  }, {
    "name" : "OauthAccountMappingController",
    "description" : "OAuth Account Mapping Related Endpoints"
  }, {
    "name" : "PasswordStoreAccessController",
    "description" : "Password Store Access Controller Endpoints"
  }, {
    "name" : "PasswordStoreController",
    "description" : "Password Store Controller Endpoints"
  }, {
    "name" : "PersonalizationController",
    "description" : "Manages user's UI preferences for Management Console"
  }, {
    "name" : "ProcessDiscoverySettingsController",
    "description" : "Management Console settings for Process Discovery Analyzer and Process Discovery Groups"
  }, {
    "name" : "ProjectController",
    "description" : "Project Related Endpoints"
  }, {
    "name" : "ResourceController",
    "description" : "Resource Related Endpoints"
  }, {
    "name" : "RfsController",
    "description" : "Robot File System Related Endpoints"
  }, {
    "name" : "RoboServerLogController"
  }, {
    "name" : "RobotController"
  }, {
    "name" : "RobotMessageLogController"
  }, {
    "name" : "RobotRunLogController"
  }, {
    "name" : "RobotSummaryLogController"
  }, {
    "name" : "RobotUrlLogController"
  }, {
    "name" : "ScheduleMessageLogController"
  }, {
    "name" : "ScheduleRunLogController"
  }, {
    "name" : "SchedulesController",
    "description" : "Schedules Related Endpoints"
  }, {
    "name" : "SnippetController",
    "description" : "Robot-Snippet Related Endpoints"
  }, {
    "name" : "TaskMessageLogController"
  }, {
    "name" : "tasks"
  }, {
    "name" : "TaskViewController",
    "description" : "Task View Related Points"
  }, {
    "name" : "TriggerMappingController"
  }, {
    "name" : "TypeController",
    "description" : "Robot-Type Related Endpoints"
  }, {
    "name" : "UserController",
    "description" : "User Related Endpoints"
  }, {
    "name" : "UtilityController"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/authorize" : {
      "get" : {
        "operationId" : "authorize",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CsrfToken"
            }
          }
        }
      }
    },
    "/csrf" : {
      "get" : {
        "operationId" : "csrf",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CsrfToken"
            }
          }
        }
      }
    },
    "/mc/admission/mc/group/{groupName}" : {
      "get" : {
        "tags" : [ "admission" ],
        "summary" : "Get admissions for group",
        "description" : "",
        "operationId" : "getAdmissionsForGroup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "expandFullAdmission",
          "in" : "query",
          "description" : "List admissions for FULL_ADMISSION and SERVICE_CLUSTER_FULL_ADMISSION levels",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Group name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AdmissionsResponse"
            }
          }
        }
      }
    },
    "/mc/admission/mc/user/{userName}" : {
      "get" : {
        "tags" : [ "admission" ],
        "summary" : "Get admissions for user",
        "description" : "",
        "operationId" : "getAdmissionsForUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "expandFullAdmission",
          "in" : "query",
          "description" : "List admissions for FULL_ADMISSION and SERVICE_CLUSTER_FULL_ADMISSION levels",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "User name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AdmissionsResponse"
            }
          }
        }
      }
    },
    "/mc/applicationLogs/delete" : {
      "put" : {
        "tags" : [ "RobotUrlLogController" ],
        "summary" : "Delete application entities matched filters",
        "description" : "Delete application entities matched filters",
        "operationId" : "deleteApplicationEntityByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/applicationLogs/page" : {
      "get" : {
        "tags" : [ "RobotUrlLogController" ],
        "summary" : "Get a page of application entity log messages",
        "description" : "Get a page of application entity log messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getApplicationEntityLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "time"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/applicationLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "RobotUrlLogController" ],
        "summary" : "Delete one application entity",
        "description" : "Delete one application entity selected by id",
        "operationId" : "deleteApplicationEntity",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/backup/export" : {
      "post" : {
        "tags" : [ "BackupController" ],
        "summary" : "Export a full MC backup",
        "description" : "Export a full MC backup",
        "operationId" : "exportBackup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseString"
            }
          }
        }
      }
    },
    "/mc/backup/export/result/{exportId}" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "summary" : "Download backup file for given operation id",
        "description" : "Download backup file for given operation id",
        "operationId" : "getExportBackupResult",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "exportId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully created backup",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "404" : {
            "description" : "Requested export result was not found"
          }
        }
      }
    },
    "/mc/backup/export/status/{exportId}" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "summary" : "Get backup status",
        "description" : "",
        "operationId" : "getExportBackupStatus",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "exportId",
          "in" : "path",
          "description" : "exportId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/backup/exportProject" : {
      "post" : {
        "tags" : [ "BackupController" ],
        "summary" : "Export project backup",
        "description" : "Export project backup",
        "operationId" : "exportProjectBackup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "formData",
          "description" : "projectId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseString"
            }
          }
        }
      }
    },
    "/mc/backup/import" : {
      "post" : {
        "tags" : [ "BackupController" ],
        "summary" : "Import full MC backup",
        "description" : "import full MC backup",
        "operationId" : "importBackup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "restoreMode",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "enum" : [ "MERGE", "RESET" ]
        }, {
          "name" : "retainExistingClusters",
          "in" : "formData",
          "description" : "retainExistingClusters",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/backup/import/fullprogress" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "operationId" : "getImportProgressFull",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImportProgressDTO"
            }
          }
        }
      }
    },
    "/mc/backup/import/isRunning" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "operationId" : "getImportStatus",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/backup/import/progress" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "operationId" : "getImportProgress",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      }
    },
    "/mc/backup/importProject" : {
      "post" : {
        "tags" : [ "BackupController" ],
        "summary" : "Import project backup",
        "description" : "import project backup",
        "operationId" : "importProjectBackup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "deleteIfExists",
          "in" : "formData",
          "description" : "deleteIfExists",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "restoreEmailTriggers",
          "in" : "formData",
          "description" : "restoreEmailTriggers",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreOAuth",
          "in" : "formData",
          "description" : "restoreOAuth",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restorePermissions",
          "in" : "formData",
          "description" : "restorePermissions",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreResources",
          "in" : "formData",
          "description" : "restoreResources",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreRfsConfigurations",
          "in" : "formData",
          "description" : "restoreRfsConfigurations",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreRobotsTypesSnippets",
          "in" : "formData",
          "description" : "restoreRobotsTypesSnippets",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreSchedules",
          "in" : "formData",
          "description" : "restoreSchedules",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "restoreTriggerMappings",
          "in" : "formData",
          "description" : "restoreTriggerMappings",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/backup/restoreModes" : {
      "get" : {
        "tags" : [ "BackupController" ],
        "summary" : "Get backup restore Modes",
        "description" : "Get backup restore Modes",
        "operationId" : "getBackupRestoreModes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BackupRestoreModeDTO"
              }
            }
          }
        }
      }
    },
    "/mc/cluster/add" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Create a Cluster",
        "description" : "Create a Cluster",
        "operationId" : "addRoboServerCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddClusterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/cluster/addServer" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Create a RoboServer",
        "description" : "Create a RoboServer",
        "operationId" : "addRoboServer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddRoboServerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/cluster/applyClusterSettings" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Apply Cluster Settings",
        "description" : "Apply Cluster Settings",
        "operationId" : "applyClusterSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClusterStateApplyModeDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/checkDbConnection" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Check Database Connection",
        "description" : "Check Database Connection",
        "operationId" : "checkDatabaseConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClusterDatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/cluster/clusters" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Clusters",
        "description" : "Get Clusters",
        "operationId" : "getRoboServerClusters",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseClusterDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/clusters/short" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get list of clusters id and names",
        "description" : "Get list of clusters permitted to assign to database mapping or for robot API generation for the project",
        "operationId" : "getClustersShortInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterInfo"
              }
            }
          }
        }
      }
    },
    "/mc/cluster/delete/{clusterId}" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Delete a Cluster",
        "description" : "Delete a Cluster",
        "operationId" : "deleteCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/deleteServer/{roboServerId}" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Delete a RoboServer",
        "description" : "Delete a RoboServer",
        "operationId" : "deleteRoboServer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "roboServerId",
          "in" : "path",
          "description" : "roboServerId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/getDatabasesFromFile" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Imported Databases From File",
        "description" : "Get Imported Databases From File",
        "operationId" : "getDatabasesFromFile",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "content",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterDatabaseSettingsDTO"
              }
            }
          }
        }
      }
    },
    "/mc/cluster/getDocumentationAwareServers" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Documentation Aware Servers",
        "description" : "Get Servers application for documentation requests",
        "operationId" : "getDocumentationAwareServers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RoboServerBriefDTO"
              }
            }
          }
        }
      }
    },
    "/mc/cluster/getLicenseData" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get License Assignment Data",
        "description" : "Get License Assignment Data",
        "operationId" : "getLicenseAssignmentData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LicenseAssignmentDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/getProxyServerFromFile" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Imported Proxy Servers From File",
        "description" : "Get Imported Proxy Servers From File",
        "operationId" : "getProxyServerFromFile ",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "content",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterProxyServerSettingsDTO"
              }
            }
          }
        }
      }
    },
    "/mc/cluster/getRoboRuntimeDataPage" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get a page of Robot Runtime DTOs",
        "description" : "Get page of Robot Runtime DTOs",
        "operationId" : "getRoboRuntimeDataPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RobotRuntimeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotRuntimeDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/isCRE" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Information if MC in CRE mode",
        "description" : "Information if MC in CRE mode",
        "operationId" : "isCRE",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/cluster/isJMS" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Information if MC in JMS mode",
        "description" : "Information if MC in JMS mode",
        "operationId" : "isJMS",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/cluster/schedules/{clusterId}" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Number of Schedules for a Cluster",
        "description" : "Get Number of Schedules for a Cluster",
        "operationId" : "getNumberOfSchedulesForCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "/mc/cluster/servers" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get RoboServers",
        "description" : "Get RoboServers",
        "operationId" : "getRoboServers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRoboServerDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/setClusterSettings" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Set Cluster Settings",
        "description" : "Set Cluster Settings",
        "operationId" : "setClusterSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClusterSettingsDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/setClusterState" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Set Cluster State",
        "description" : "Set Cluster State",
        "operationId" : "setClusterState",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClusterStateEditDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/setLicenseData" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Set License Assignment Data",
        "description" : "Set License Assignment Data",
        "operationId" : "setLicenseData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SimpleLicenseAssigmentDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/cluster/shutdown" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Shutdown RoboServer",
        "description" : "Shutdown RoboServer",
        "operationId" : "shutdownRoboServer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShutdownRoboServerRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/stop" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Robot Execution Id to stop",
        "description" : "Robot Execution Id to stop",
        "operationId" : "stopRobot",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StopRobotRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/threadDump/{serverId}" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get a Thread Dump for a RoboServer",
        "description" : "Get a Thread Dump for a RoboServer",
        "operationId" : "getThreadDump_1",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "serverId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/cluster/toggleProfiling" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "enable Profiling for Cluster",
        "description" : "enable Profiling for Cluster",
        "operationId" : "toggleProfiling",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ToggleProfilingRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/{clusterId}/getClusterSettings" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Cluster Settings",
        "description" : "Get Cluster Settings",
        "operationId" : "getClusterSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/{clusterId}/rename" : {
      "put" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Rename RoboServer Cluster",
        "description" : "Rename RoboServer Cluster",
        "operationId" : "renameRoboServerCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "newName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/{clusterId}/servers/" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get RoboServers in Cluster",
        "description" : "Get RoboServers in Cluster",
        "operationId" : "getRoboServersInCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRoboServerDTO"
            }
          }
        }
      }
    },
    "/mc/cluster/{clusterId}/stopAllRobotsOnCluster" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Stop all robots on Cluster",
        "description" : "Stop all robots on Cluster",
        "operationId" : "stopAllRobotsOnCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cluster/{id}/getNumberOfDbMapping" : {
      "get" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Get Number of Database Mapping",
        "description" : "Get Number of Database Mapping",
        "operationId" : "getNumberOfDbMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "/mc/cluster/{serverId}/stopAllRobotsOnServer" : {
      "post" : {
        "tags" : [ "ClusterController" ],
        "summary" : "Stop all robots on RoboServer",
        "description" : "Stop all robots on RoboServer",
        "operationId" : "stopAllRobotsOnServer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "serverId",
          "in" : "path",
          "description" : "serverId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cyberArkStore" : {
      "put" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Update CyberArk Store Entry",
        "description" : "Update CyberArk Store Entry",
        "operationId" : "updateStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CyberArkStoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CyberArkEntryDTO"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/add" : {
      "post" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Create a new CyberArk Store Entry",
        "description" : "Create a new CyberArk Store Entry",
        "operationId" : "addCyberArkStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CyberArkStoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/delete" : {
      "put" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Delete CyberArk Store Entries",
        "description" : "Delete CyberArk Store Entries",
        "operationId" : "deleteCyberArkStoreEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusStringResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/move/{entityId}/{projectId}/{merge}" : {
      "post" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Move CyberArk Store Entry to a new project with merging relations",
        "description" : "Move CyberArk Store Entry to a new project with merging relations",
        "operationId" : "moveStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "merge",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cyberArkStore/page" : {
      "get" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Get a page of CyberArk Store Entries for all project",
        "description" : "Get a page of CyberArk Store Entries for all project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getCyberArkStoreEntriesPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Target System name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "username"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/project/{projectId}" : {
      "get" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Get a CyberArk Store Entry record by Project Id",
        "description" : "Get a CyberArk Store Entry record by Project Id",
        "operationId" : "getCyberArkStoreEntryByProjectId",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CyberArkEntryDTO"
              }
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token" : {
      "put" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Update CyberArk Store Access Entry",
        "description" : "Update CyberArk Store Access Entry",
        "operationId" : "updateCyberArkStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreAccessRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StoreAccessDTO"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/add" : {
      "post" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Create a new CyberArk Store Access Entry",
        "description" : "Create a new CyberArk Store Access Entry",
        "operationId" : "addCyberArkStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreAccessRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/delete" : {
      "put" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Delete CyberArk Store Access Entries",
        "description" : "Delete CyberArk Store Access Entries",
        "operationId" : "deleteCyberArkStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/page" : {
      "get" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Get a page of CyberArk Store Access Entries",
        "description" : "Get a page of CyberArk Store Access Entries, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getCyberArkStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "token"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/{accessId}" : {
      "get" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Get CyberArk Store Access Entry",
        "description" : "Get CyberArk Store Access Entry",
        "operationId" : "getCyberArkStoreAccessEntryInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StoreAccessDTO"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/{accessId}/delete" : {
      "put" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Delete CyberArk Store Access Entry",
        "description" : "Delete CyberArk Store Access Entry",
        "operationId" : "deleteCyberArkStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/cyberArkStore/token/{accessId}/{projectId}" : {
      "get" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Get CyberArk Store Entries",
        "description" : "Get CyberArk Store Entries",
        "operationId" : "getPSAccessTokenEntries_1",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/token/{projectId}/page" : {
      "get" : {
        "tags" : [ "CyberArkStoreAccessRestController" ],
        "summary" : "Get a page of CyberArk Store Access Entries of the given project",
        "description" : "Get a page of CyberArk Store Access Entries of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfCyberArkStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "token"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/{entityId}" : {
      "get" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Get a CyberArk Store Entry record by id",
        "description" : "Get a CyberArk Store Entry record by id",
        "operationId" : "getCyberArkStoreEntryById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CyberArkEntryDTO"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/{projectId}/page" : {
      "get" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Get a page of CyberArk Store Entries of the given project",
        "description" : "Get a page of CyberArk Store Entries of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getCyberArkStoreEntriesPageForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Target System name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "username"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/cyberArkStore/{storeId}/delete" : {
      "post" : {
        "tags" : [ "CyberArkStoreRestController" ],
        "summary" : "Delete CyberArk Store Entry",
        "description" : "Delete CyberArk Store Entry",
        "operationId" : "deleteCyberArkStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "storeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/dasMessageLogs/delete" : {
      "put" : {
        "tags" : [ "DasMessageLogController" ],
        "summary" : "Delete DAS log messages matching the specified filters",
        "description" : "Delete DAS log messages matching the specified filters",
        "operationId" : "deleteDasLogsByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/dasMessageLogs/page" : {
      "get" : {
        "tags" : [ "DasMessageLogController" ],
        "summary" : "Get a page of Das Messages",
        "description" : "Get a page of Das Messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getDasMessageLogs",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/dasMessageLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "DasMessageLogController" ],
        "summary" : "Delete one DAS log message",
        "description" : "Delete one DAS log message selected by id",
        "operationId" : "deleteDasLog",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/dataView/columns" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Column Definition",
        "description" : "Get Column Definition",
        "operationId" : "getColumnDefinition",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "catalogName",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dbMappingName",
          "in" : "query",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "description" : "Current project id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "schemaName",
          "in" : "query",
          "description" : "Schema name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tableName",
          "in" : "query",
          "description" : "Table name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TableColumnDefinitionDTO"
              }
            }
          }
        }
      }
    },
    "/mc/dataView/export/start/{exportParam}" : {
      "post" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Start Background Export",
        "description" : "Start Background Export",
        "operationId" : "startBackgroundExport",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "exportParam",
          "in" : "path",
          "description" : "exportFormat",
          "required" : true,
          "type" : "string",
          "enum" : [ "CSV", "XML", "EXCEL", "TSV" ]
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TableRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/dataView/export/{id}/delete" : {
      "put" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Delete Data View Export",
        "description" : "DeleteData View Export",
        "operationId" : "deleteDataViewExport",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/dataView/export/{id}/progress" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Export Progress",
        "description" : "Get Export Progress",
        "operationId" : "getExportProgress",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataViewExportProgressDTO"
            }
          }
        }
      }
    },
    "/mc/dataView/getDBStructure/{projectId}" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Database Structure Data",
        "description" : "Get a page of Database Structure Data of all accessible projects",
        "operationId" : "dbTreeData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseStructureDTO"
              }
            }
          }
        }
      }
    },
    "/mc/dataView/getDBStructure/{projectId}/{name}" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Database Structure Data by Mapping Name",
        "description" : "Get a page of Database Structure Data of all accessible projects",
        "operationId" : "dbTreeDataByMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseStructureDTO"
              }
            }
          }
        }
      }
    },
    "/mc/dataView/getExportFormats" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get export formats",
        "description" : "Get export formats",
        "operationId" : "getExportFormats",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExportFormatDTO"
              }
            }
          }
        }
      }
    },
    "/mc/dataView/getExportedDocuments" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Exported Documents",
        "description" : "Get Exported Documents",
        "operationId" : "getExportedDocuments",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order. ",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseExportDataDTO"
            }
          }
        }
      }
    },
    "/mc/dataView/getExportedDocuments/{id}" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Exported Document",
        "description" : "Get Exported Document",
        "operationId" : "getExportedDocument",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/mc/dataView/getTableData" : {
      "get" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Get Table Data",
        "description" : "Get Table Data",
        "operationId" : "getTableData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "catalogName",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dbMappingName",
          "in" : "query",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "query",
          "description" : "Current project id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "schemaName",
          "in" : "query",
          "description" : "Schema name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "tableName",
          "in" : "query",
          "description" : "Table name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTableRowDTO"
            }
          }
        }
      }
    },
    "/mc/dataView/rows/delete" : {
      "put" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Delete Data Row",
        "description" : "Delete Data Row",
        "operationId" : "deleteDataRow",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteRowsTableRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/dataView/rows/deleteAll" : {
      "put" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Delete All Data Rows",
        "description" : "Delete All Data Rows",
        "operationId" : "deleteAllRows",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteRowsTableRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/dataView/rows/deleteByFilter" : {
      "put" : {
        "tags" : [ "DataViewController" ],
        "summary" : "Delete Data Rows By Filter",
        "description" : "Delete Data Rows By Filter",
        "operationId" : "deleteRowsByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteRowsTableRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/database" : {
      "put" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Update a Database Mapping",
        "description" : "",
        "operationId" : "updateDatabaseMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabaseMappingDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/database/add" : {
      "put" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Add a Database Mapping",
        "description" : "",
        "operationId" : "addDatabaseMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabaseMappingDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/mc/database/databases" : {
      "get" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Get a list of Databases",
        "description" : "Get a list of  Databases",
        "operationId" : "getDatabases",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseData"
              }
            }
          }
        }
      }
    },
    "/mc/database/delete" : {
      "put" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Delete Database mappings with given ids",
        "description" : "",
        "operationId" : "deleteDatabaseMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusStringResponse"
            }
          }
        }
      }
    },
    "/mc/database/page" : {
      "get" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Get a page of Database Mapping of all accessible projects",
        "description" : "Get a page of  Database Mappings of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfDatabaseMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/database/project/{projectId}" : {
      "get" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Get Database Mappings of the given project",
        "description" : "Get a list of  Database Mappings of of the given project.",
        "operationId" : "getListOfDatabaseMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/mc/database/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "DatabaseController" ],
        "summary" : "Get a page of Database Mapping of the given project",
        "description" : "Get a page of  Database Mappings of of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfDatabaseMappingsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/devicemappings/" : {
      "put" : {
        "tags" : [ "DeviceMappingsController" ],
        "summary" : "Update a device mapping",
        "description" : "",
        "operationId" : "updateDeviceMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeviceMappingDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/devicemappings/add" : {
      "post" : {
        "tags" : [ "DeviceMappingsController" ],
        "summary" : "Create a device mapping",
        "description" : "",
        "operationId" : "addDeviceMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeviceMappingDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/devicemappings/delete" : {
      "put" : {
        "tags" : [ "DeviceMappingsController" ],
        "summary" : "Delete device mappings with given ids",
        "description" : "",
        "operationId" : "deleteDeviceMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/devicemappings/page" : {
      "get" : {
        "tags" : [ "DeviceMappingsController" ],
        "summary" : "Get a page of device mappings",
        "description" : "Input parameters specify paging, sorting and filtering",
        "operationId" : "getPageOfDeviceMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/devices" : {
      "get" : {
        "tags" : [ "DevicesController" ],
        "summary" : "Get Remote Hubs",
        "description" : "Get Remote Hubs",
        "operationId" : "getRemoteHubs",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRemoteHubDTO"
            }
          }
        }
      }
    },
    "/mc/devices/search/{hubPrefix}" : {
      "get" : {
        "tags" : [ "DevicesController" ],
        "summary" : "Get Remote Hubs in Cluster",
        "description" : "Get Remote Hubs in Cluster",
        "operationId" : "getRemoteHubsInCluster",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "hubPrefix",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRemoteHubDTO"
            }
          }
        }
      }
    },
    "/mc/devices/{clusterId}" : {
      "get" : {
        "tags" : [ "DevicesController" ],
        "summary" : "Get Remote Hubs in Cluster",
        "description" : "Get Remote Hubs in Cluster",
        "operationId" : "getRemoteHubsInCluster_1",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRemoteHubDTO"
            }
          }
        }
      }
    },
    "/mc/errors" : {
      "get" : {
        "tags" : [ "ErrorLookupController" ],
        "summary" : "Get a list of supported error messages with their default message and error code",
        "description" : "Get a list of supported error messages with their default message and error code",
        "operationId" : "getAllErrors",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApiErrorResponse"
              }
            }
          }
        }
      }
    },
    "/mc/license/" : {
      "get" : {
        "tags" : [ "LicenseController" ],
        "summary" : "Get License Information",
        "description" : "Get License Information",
        "operationId" : "getLicense",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LicenseInformationDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "LicenseController" ],
        "summary" : "Create a License",
        "description" : "Create a License",
        "operationId" : "saveLicense",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "licenseRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LicenseInformationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LicensePropertiesDTO"
            }
          }
        }
      }
    },
    "/mc/license/mc/licenseDetails" : {
      "get" : {
        "tags" : [ "LicenseController" ],
        "summary" : "Get License Details",
        "description" : "Get License Details",
        "operationId" : "getLicenseDetails",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LicenseDetailsDTO"
            }
          }
        }
      }
    },
    "/mc/license/users/page" : {
      "get" : {
        "tags" : [ "LicenseController" ],
        "summary" : "Get a page of License Assignment list",
        "description" : "Get a page of License Assignment list.",
        "operationId" : "getUserLicenseAssignmentsPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "userName"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get Mail Accounts",
        "description" : "Get Mail Accounts, if projectId is not passed or if it equals -1, then ail accounts for all projects will be retrieved, if projectId is positive, only mail accounts for given project ID will be retrieved.",
        "operationId" : "getMailAccounts",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MailAccountDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Save a Mail Account",
        "description" : "Save a Mail Account. If ID is null then new email account will be created, if ID is positive, then existing email account will be updated.",
        "operationId" : "saveMailAccount",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "mailAccountDTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MailAccountDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MailAccountDTO"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/delete" : {
      "put" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Delete mail accounts by their ids",
        "description" : "Delete mail accounts by their ids",
        "operationId" : "deleteMailAccounts",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "ids",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/page" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get a page of Mail Accounts",
        "description" : "Get a page of Mail Accounts, if projectId is not passed or if it equals -1, then ail accounts for all projects will be retrieved, if projectId is positive, only mail accounts for given project ID will be retrieved.",
        "operationId" : "getPageOfMailAccounts",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by mail account name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/templates" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get Supported Mail server templates",
        "description" : "Get Supported Mail server templates",
        "operationId" : "getMailAccountTemplates",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MailAccountTemplateDTO"
              }
            }
          }
        }
      }
    },
    "/mc/mailAccounts/templates/{id}" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get supported mail account template by id",
        "description" : "Get supported mail account template by id",
        "operationId" : "getMailAccountTemplate",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MailAccountTemplateDTO"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/testConnection" : {
      "post" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Test mail account, expect a complete template as the input",
        "description" : "Test mail account",
        "operationId" : "testMailAccount",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "mailAccountDTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MailAccountDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/testConnection/{id}" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Test mail account by id",
        "description" : "Test mail account by id",
        "operationId" : "testMailAccountById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/{id}" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get a Mail Server By Id",
        "description" : "Get a Mail Server By Id",
        "operationId" : "getMailAccountById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MailAccountDTO"
            }
          }
        }
      }
    },
    "/mc/mailAccounts/{id}/delete" : {
      "put" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Delete mail account by id",
        "description" : "Delete mail account by id",
        "operationId" : "deleteMailAccount",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/mailAccounts/{id}/folders" : {
      "get" : {
        "tags" : [ "EmailAccountsRestController" ],
        "summary" : "Get a Mail Server Folders By Id",
        "description" : "Get a Mail Server Folders By Id",
        "operationId" : "getMailAccountFolders",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/misc/getServerTime" : {
      "get" : {
        "tags" : [ "AboutController" ],
        "summary" : "serverTime",
        "description" : "serverTime",
        "operationId" : "serverTime",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ServerTimeResponse"
            }
          }
        }
      }
    },
    "/mc/misc/getVersion" : {
      "get" : {
        "tags" : [ "AboutController" ],
        "summary" : "version",
        "description" : "version",
        "operationId" : "version",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VersionResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/OAuthServiceProviders" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "get OAuth Service Providers",
        "description" : "get OAuth Service Providers",
        "operationId" : "getOAuthServiceProviders",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/add" : {
      "post" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Create a OAuth Application",
        "description" : "Create a OAuth Application",
        "operationId" : "addOAuthApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthApplicationShortDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/authorizationURL/{applicationId}" : {
      "post" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Acquire authorization URL for given OAuth application",
        "description" : "Acquire authorization URL for given OAuth application. There should not be already saved OAuth user in MC with provided username for given application ID",
        "operationId" : "acquireAuthorizationURL",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "acquireAuthorizationUrlDTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthAcquireAuthorizationUrlDTO"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "description" : "applicationId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OAuthAuthorizationUrlDTO"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/page" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a page of OAuth Application Data Records for all available projects",
        "description" : "Get a page of OAuth Application Data Records, input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfOAuthApplicationDataRecords",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "service provider.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "serviceProvider"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/authapp/{applicationId}/page" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a page of OAuth User Entries of the given OAuth application id",
        "description" : "Get a page of OAuth User Entries of the given OAuth application id, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getOAuthUserDataByApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "applicationId",
          "in" : "path",
          "description" : "applicationId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "user name",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/project/page" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a page of OAuth User Entries of the given  project id",
        "description" : "Get a page of OAuth User Entries of the given  project id, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfOAuthUserData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "user name",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/project/{projectId}" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a all of OAuth User Entries for the given  project id",
        "description" : "",
        "operationId" : "getOAuthUserShortDataByProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthUserShortDTO"
              }
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a page of OAuth User Entries of the given  project id",
        "description" : "Get a page of OAuth User Entries of the given  project id, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfOAuthUserDataByProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "user name",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/{entityId}/delete" : {
      "put" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Delete OAuth user",
        "description" : "Delete OAuth user record by id",
        "operationId" : "deleteOAuthUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entityId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/oauth/accountmapping/user/{userId}" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get OAuth User",
        "description" : "Get OAuth user",
        "operationId" : "getOAuthUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OAuthUserDTO"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/verifyUser/{verifier}" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Verify OAUTH user",
        "description" : "Verify OAUTH user",
        "operationId" : "verifyUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "verifier",
          "in" : "path",
          "description" : "verifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OAuthAccessTokens"
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/{entityId}" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get OAuth Application Data",
        "description" : "Get OAuth Application Data by id",
        "operationId" : "getOAuthApplicationData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entityId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OAuthApplicationDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Edit a OAuth Application",
        "description" : "Edit a OAuth Application",
        "operationId" : "editOAuthApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entityId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthApplicationShortDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/oauth/accountmapping/{entityId}/delete" : {
      "put" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Delete OAuth application",
        "description" : "Delete OAuth application record by id",
        "operationId" : "deleteOAuthApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entityId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/oauth/accountmapping/{projectId}/all" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get all OAuth Application Data Records of the given project",
        "description" : "Get all OAuth Application Data Records of the given project",
        "operationId" : "getAllOAuthApplicationDataRecordsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthApplicationDTO"
              }
            }
          }
        }
      }
    },
    "/mc/oauth/accountmapping/{projectId}/page" : {
      "get" : {
        "tags" : [ "OauthAccountMappingController" ],
        "summary" : "Get a page of OAuth Application Data Records of the given project",
        "description" : "Get a page of OAuth Application Data Records of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfOAuthApplicationDataRecordsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "service provider.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "serviceProvider"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore" : {
      "put" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Update Password Store Entry",
        "description" : "Update  Password Store Entry",
        "operationId" : "updatePasswordStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PasswordStoreEntryDTO"
            }
          }
        }
      }
    },
    "/mc/passwordstore/add" : {
      "post" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Create a new Password Store Entry",
        "description" : "Create a new Password Store Entry",
        "operationId" : "addPasswordStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/mc/passwordstore/delete" : {
      "put" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Delete Password Store Access Entries",
        "description" : "Delete Password Store Access Entries",
        "operationId" : "deletePasswordStoreEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusStringResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore/move/{entityId}/{projectId}/{merge}" : {
      "post" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Move Password Store Entry to a new project with merging relations",
        "description" : "Move Password Store Entry to a new project with merging relations",
        "operationId" : "movePasswordStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "merge",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/passwordstore/page" : {
      "get" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Get a page of Password Store Entries for all project",
        "description" : "Get a page of Password Store Entries for all project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPSEPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Target System name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "username"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore/project/{projectId}" : {
      "get" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Get a Password Store Entry record by Project Id",
        "description" : "Get a Password Store Entry record by Project Id",
        "operationId" : "getPasswordStoreEntryByProjectId",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PasswordStoreEntryDTO"
              }
            }
          }
        }
      }
    },
    "/mc/passwordstore/token" : {
      "put" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Update Password Store Access Entry",
        "description" : "Update Password Store Access Entry",
        "operationId" : "updatePasswordStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreAccessRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StoreAccessDTO"
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/add" : {
      "post" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Create a new Password Store Access Entry",
        "description" : "Create a new Password Store Access Entry",
        "operationId" : "addPasswordStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordStoreAccessRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/delete" : {
      "put" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Delete Password Store Access Entry",
        "description" : "Delete Password Store Access Entry",
        "operationId" : "deletePasswordStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/page" : {
      "get" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Get a page of Password Store Access Entries",
        "description" : "Get a page of Password Store Access Entries, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPasswordStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "token"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/{accessId}" : {
      "get" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Get Password Store Access Entry information",
        "description" : "Get Password Store Access Entry information",
        "operationId" : "getPasswordStoreAccessEntryInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StoreAccessDTO"
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/{accessId}/delete" : {
      "put" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Delete Password Store Access Entry",
        "description" : "Delete Password Store Access Entry",
        "operationId" : "deletePasswordStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/passwordstore/token/{accessId}/{projectId}" : {
      "get" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Get Password Store of given entry and project",
        "description" : "Get Password Store of given entry and project",
        "operationId" : "getPSAccessTokenEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "accessId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/mc/passwordstore/token/{projectId}/page" : {
      "get" : {
        "tags" : [ "PasswordStoreAccessController" ],
        "summary" : "Get a page of Password Store Access Entries",
        "description" : "Get a page of Password Store Access Entries, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfPasswordStoreAccessEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by description.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "token"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/passwordstore/{entityId}" : {
      "get" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Get a Password Store Entry record by  id",
        "description" : "Get a Password Store Entry record by  id",
        "operationId" : "getPasswordStoreEntryById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PasswordStoreEntryDTO"
            }
          }
        }
      }
    },
    "/mc/passwordstore/{entityId}/delete" : {
      "post" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Delete Password Store Access Entry",
        "description" : "Delete Password Store Access Entry",
        "operationId" : "deletePasswordStoreEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "entityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/passwordstore/{projectId}/page" : {
      "get" : {
        "tags" : [ "PasswordStoreController" ],
        "summary" : "Get a page of Password Store Entries of the given project",
        "description" : "Get a page of Password Store Entries of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPSEPageForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Target System name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "username"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/personalization/item" : {
      "get" : {
        "tags" : [ "PersonalizationController" ],
        "summary" : "Get personalization item with given name for currently logged in user",
        "description" : "Get personalization item with given name for currently logged in user. Name is case insensitive.",
        "operationId" : "getPersonalizationItem",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonalizationDTO"
            }
          }
        }
      }
    },
    "/mc/personalization/item/delete" : {
      "put" : {
        "tags" : [ "PersonalizationController" ],
        "summary" : "Delete personalization item with given name for currently logged in user",
        "description" : "Delete personalization item with given name for currently logged in user. Name is case insensitive.",
        "operationId" : "deletePersonalizationItem",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/personalization/items" : {
      "get" : {
        "tags" : [ "PersonalizationController" ],
        "summary" : "Get personalization items for currently logged in user",
        "description" : "Get personalization items for currently logged in user. If prefix is empty then all items are returned. If prefix is specified, only items that names start with this prefix are returned. Prefix is case insensitive.",
        "operationId" : "getPersonalizationItems",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "prefix",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PersonalizationDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PersonalizationController" ],
        "summary" : "Save personalization items for currently logged in user",
        "description" : "Save personalization items for currently logged in user",
        "operationId" : "setPersonalizationItems",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "items",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PersonalizationDTO"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/personalization/items/delete" : {
      "put" : {
        "tags" : [ "PersonalizationController" ],
        "summary" : "Delete personalization items for currently logged in user",
        "description" : "Delete personalization items for currently logged in user. If prefix is empty then all items are deleted. If prefix is specified, only items that names start with this prefix are deleted. Prefix is case insensitive.",
        "operationId" : "deletePersonalizationItems",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "prefix",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/project" : {
      "put" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Update a Project",
        "description" : "Update a project",
        "operationId" : "updateProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "projectRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/project/" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Get All Projects",
        "description" : "Get all projects",
        "operationId" : "getAllProjects",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectDTO"
              }
            }
          }
        }
      }
    },
    "/mc/project/add" : {
      "post" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Create a Project",
        "description" : "Create a project",
        "operationId" : "addProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "projectRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/project/delete" : {
      "put" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Delete Project",
        "description" : "Delete project",
        "operationId" : "deleteProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "deleteProjectRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/project/groupsForMapping" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "operationId" : "getGroupsForMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/project/names" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Get All Projects names",
        "description" : "Get all projects names",
        "operationId" : "getAllProjectsNames",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectDTO"
              }
            }
          }
        }
      }
    },
    "/mc/project/page" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "summary" : "Get Projects",
        "description" : "Get projects",
        "operationId" : "getProjects",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by project name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "A name of field for sorting by.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseProjectDTO"
            }
          }
        }
      }
    },
    "/mc/project/roleMapping/{projectId}" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "operationId" : "getRoleMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupToRoleMappingData"
              }
            }
          }
        }
      }
    },
    "/mc/project/roles" : {
      "get" : {
        "tags" : [ "ProjectController" ],
        "operationId" : "getRoles",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/resource/add" : {
      "post" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Create a resource",
        "description" : "Create a resource from the given uploaded file",
        "operationId" : "addResourceFile",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "commitMessage",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "folderName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "override",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "projectId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/resource/delete" : {
      "put" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Delete the resource files with the given ids",
        "description" : "Delete the resource files with the given ids. If deletion results in empty folders they can optionally be pruned.",
        "operationId" : "deleteResourceFile",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteItemRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/resource/download/{resourceId}" : {
      "get" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Download the resource",
        "description" : "Download the resource.",
        "operationId" : "downloadResource",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "resourceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/mc/resource/filenames/{projectId}" : {
      "get" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Finds Filenames by projectId",
        "description" : "List of filenames that are attached with the project",
        "operationId" : "getResourceFileNames",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "project Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/resource/folder/set" : {
      "put" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Set folder",
        "description" : "Move the resource file to the specified folder",
        "operationId" : "setFolder",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetFolderRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/resource/page" : {
      "get" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Get a page of resource files of all accessible projects",
        "description" : "Get a page of resource files of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfResources",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseResourceFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/resource/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "ResourceController" ],
        "summary" : "Get a page of resource files of the given project",
        "description" : "Get a page of resource files of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfResourcesForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseResourceFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/roboServerLogs/delete" : {
      "put" : {
        "tags" : [ "RoboServerLogController" ],
        "summary" : "Delete Roboserver messages matching the specified filters",
        "description" : "Delete Roboserver messages matching the specified filters",
        "operationId" : "deleteRoboserversByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/roboServerLogs/page" : {
      "get" : {
        "tags" : [ "RoboServerLogController" ],
        "summary" : "Get a page of RoboServer messages",
        "description" : "Get a page of RoboServer messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getRoboServerLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/roboServerLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "RoboServerLogController" ],
        "summary" : "Delete one Roboserver message",
        "description" : "Delete one Roboserver message selected by id",
        "operationId" : "deleteRoboserver",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robot/add" : {
      "post" : {
        "tags" : [ "RobotController" ],
        "summary" : "Create a robot",
        "description" : "Create a robot from the given uploaded file",
        "operationId" : "addRobot",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "commitMessage",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "folderName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "override",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "projectId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/robot/apicode/{robotId}/{clusterName}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Returns the information necessary to generate API code",
        "description" : "Returns the information necessary to generate API code for given robotId and projectId.",
        "operationId" : "getApiCodeGenerationResponse",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/APICodeGenerationDTO"
            }
          }
        }
      }
    },
    "/mc/robot/byPattern/{projectId}/{pattern}/{value}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "List of Robots name in a project by given pattern",
        "description" : "List of Robots name in a project by given patten",
        "operationId" : "getRobotsByPattern",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "pattern",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "value",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/robot/clusters" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get clusters for robot execution",
        "description" : "Get clusters for robot execution",
        "operationId" : "getClustersForExecution",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RunningClusterDTO"
              }
            }
          }
        }
      }
    },
    "/mc/robot/delete" : {
      "put" : {
        "tags" : [ "RobotController" ],
        "summary" : "Deletion of robots for the given ids",
        "description" : "Deletion of robots for the given ids. If deletion results in empty folders, they can optionally be pruned.\n\nResponses with status 'OK' \n 1. Successfully deletion of robots of given id's \n 2. Unable to find robots for given id's \n 3. Successful deletion of some of the robots and unable to delete others due to insufficient permissions to the project \n\nResponses with status 'Internal Server Error' when the API is unable to perform the execution",
        "operationId" : "deleteRobots",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteItemRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/download/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Download the robot",
        "description" : "Download the robot.",
        "operationId" : "downloadRobot",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "description" : "robotId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/mc/robot/folder/set" : {
      "put" : {
        "tags" : [ "RobotController" ],
        "summary" : "Set folder",
        "description" : "Move the robot to the specified folder",
        "operationId" : "setFolder_1",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetFolderRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robot/folders/{projectId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "List of folders in a project",
        "description" : "List of folders in a project",
        "operationId" : "getFoldersInProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/robot/header/info/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get robot documentation header",
        "description" : "Get robot documentation header",
        "operationId" : "getRobotDocumentationHeader",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotDocumentationHeaderDTO"
            }
          }
        }
      }
    },
    "/mc/robot/inputBy/{robotId}/{oAuth}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get Robot input structure by robot id and oAuth condition",
        "description" : "Get Robot input structure by robot id and oAuth condition",
        "operationId" : "getInputObjects",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "oAuth",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotInputConfigRobotInputAttribute"
            }
          }
        }
      }
    },
    "/mc/robot/mapping/page" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a page of robots ready for mapping of all accessible projects",
        "description" : "Get a page of robots ready for mapping of all accessible projects, other input parameters specify paging, sorting and filtering.The robots are of RL type and have triggers",
        "operationId" : "getPageOfRobotsWithTriggers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order. ",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robot/mapping/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a page of robots ready for mapping of the given project",
        "description" : "Get a page of robots ready for mapping of the given project, other input parameters specify paging, sorting and filtering.The robots are of RL type and have triggers",
        "operationId" : "getPageOfRobotsWithTriggersForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robot/missingDependencies/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get missing robot dependencies by robotId",
        "description" : "Get missing robot dependencies by robotId",
        "operationId" : "getMissingRobotDependencies",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MissingDependenciesDTO"
            }
          }
        }
      }
    },
    "/mc/robot/page" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a page of robots of all accessible projects",
        "description" : "Get a page of robots of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfRobots",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order. ",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by tag.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robot/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a page of robots of the given project",
        "description" : "Get a page of robots of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfRobotsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by tag.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robot/requestDocumentation" : {
      "post" : {
        "tags" : [ "RobotController" ],
        "summary" : "Doc request",
        "description" : "Doc request",
        "operationId" : "runDocRequest",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DocumentationResponse"
            }
          }
        }
      }
    },
    "/mc/robot/resourceAccessToken" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get Resource Access Token",
        "description" : "Get Resource Access Token",
        "operationId" : "getResourceAccessToken",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/restservice/info/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get the input configuration for a robot",
        "description" : "Get the input configuration for a robot.",
        "operationId" : "getRestServiceInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RestServiceInfo"
            }
          }
        }
      }
    },
    "/mc/robot/rfs/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a page of robots of the given project that can be RFS mapped",
        "description" : "Get a page of robots of the given project that can be RFS mapped, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfRobotsForRfs",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by tag.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robot/robot/{robotId}/passwordstore" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get a password store of the robot",
        "description" : "Get a password store of the robot. The password store will be created if it doesn't exist",
        "operationId" : "getOrCreatePasswordStoreAccessEntry",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StoreAccessDTO"
            }
          }
        }
      }
    },
    "/mc/robot/robots/{projectId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get list of robot details by project ID and eligible to be used as a schedule job",
        "description" : "Get list of robot details by project ID and eligible to be used as a schedule job",
        "operationId" : "getRobotsForSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RobotDetail"
              }
            }
          }
        }
      }
    },
    "/mc/robot/runAsync" : {
      "post" : {
        "tags" : [ "RobotController" ],
        "summary" : "Run robot",
        "description" : "Run robot",
        "operationId" : "runRobotAsync",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "clusterId",
          "in" : "formData",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        }, {
          "name" : "robotId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/runSync/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Run robot",
        "description" : "Run robot synchronously, cluster is taken from robot's project",
        "operationId" : "runRobotWithoutInputSync",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotExecutionResult"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RobotController" ],
        "summary" : "Run robot",
        "description" : "Run robot synchronously, cluster is taken from robot's project",
        "operationId" : "runRobotSync",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceRequest"
          }
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotExecutionResult"
            }
          }
        }
      }
    },
    "/mc/robot/soap/example/info/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get WSDL/SOAP information related to the specified robot (and its project)",
        "description" : "Get WSDL/SOAP information related to the specified robot (and its project).",
        "operationId" : "getSoapExampleInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SoapExampleInfo"
            }
          }
        }
      }
    },
    "/mc/robot/trigger/" : {
      "post" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Create a Robot Mail Trigger",
        "description" : "Create a Robot Mail Trigger",
        "operationId" : "saveRobotTrigger",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "emailRobotTriggerDTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EmailRobotTriggerDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmailRobotTriggerDTO"
            }
          }
        }
      }
    },
    "/mc/robot/trigger/delete" : {
      "put" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Delete Robot Trigger by id",
        "description" : "Delete Robot Trigger by id",
        "operationId" : "deleteRobotTrigger",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/robot/trigger/page" : {
      "get" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Get All Robot Mail Triggers",
        "description" : "Get All Robot Mail Triggers",
        "operationId" : "getRobotTriggers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseEmailRobotTriggerDTO"
            }
          }
        }
      }
    },
    "/mc/robot/trigger/project/{id}" : {
      "get" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Get Robots that can be used for Robot Mail Trigger",
        "description" : "Get Robots that can be used for Robot Mail Trigger",
        "operationId" : "getEmailTriggerRobots",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ItemIdDTO"
              }
            }
          }
        }
      }
    },
    "/mc/robot/trigger/testConnection/{id}" : {
      "get" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Test a Robot Trigger connection",
        "description" : "Test a Robot Trigger connection",
        "operationId" : "testRobotTrigger",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/trigger/{id}" : {
      "get" : {
        "tags" : [ "EmailTriggersRestController" ],
        "summary" : "Get a Robot Mail Trigger by Id",
        "description" : "Get a Robot Mail Trigger by Id",
        "operationId" : "getRobotTrigger",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmailRobotTriggerDTO"
            }
          }
        }
      }
    },
    "/mc/robot/triggers/activate" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Suspend triggers",
        "description" : "Suspend triggers if it is possible",
        "operationId" : "activateTriggers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/triggers/suspend" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Suspend triggers",
        "description" : "Suspend triggers if it is possible",
        "operationId" : "suspendTriggers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/ws/project" : {
      "post" : {
        "tags" : [ "RobotController" ],
        "summary" : "Test Service",
        "description" : "Test SOAP Service",
        "operationId" : "testSOAPService",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "soapRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SOAPRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/robot/{robotId}" : {
      "get" : {
        "tags" : [ "RobotController" ],
        "summary" : "Get robot by robotId",
        "description" : "Get robot by robotId",
        "operationId" : "getRobotById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "robotId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/robotMessageLogs/delete" : {
      "put" : {
        "tags" : [ "RobotMessageLogController" ],
        "summary" : "Delete RobotRun messages matched filters",
        "description" : "Delete RobotRun messages matched filters",
        "operationId" : "deleteRobotMessagesByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/robotMessageLogs/page" : {
      "get" : {
        "tags" : [ "RobotMessageLogController" ],
        "summary" : "Get a page of Robot Message messages",
        "description" : "Get a page of Robot Message messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getRobotMessageLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/robotMessageLogs/run/delete" : {
      "put" : {
        "tags" : [ "RobotMessageLogController" ],
        "summary" : "Delete all messages related to schedule runs matched to the filters",
        "description" : "Delete all messages related to schedule runs matched to the filters",
        "operationId" : "deleteRobotMessagesByRunFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/robotMessageLogs/run/{id}/delete" : {
      "put" : {
        "tags" : [ "RobotMessageLogController" ],
        "summary" : "Delete all messages that belong to the RobotRun",
        "description" : "Delete all messages that belong to the RobotRun",
        "operationId" : "deleteRobotMessagesByRunId",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robotMessageLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "RobotMessageLogController" ],
        "summary" : "Delete one RobotRun message",
        "description" : "Delete one RobotRun message selected by id",
        "operationId" : "deleteRobotMessage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robotRunLogs/delete" : {
      "put" : {
        "tags" : [ "RobotRunLogController" ],
        "summary" : "Delete RobotRuns matching the specified filters",
        "description" : "Delete RoobotRuns matching the specified filters",
        "operationId" : "deleteRobotRunsByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/robotRunLogs/page" : {
      "get" : {
        "tags" : [ "RobotRunLogController" ],
        "summary" : "Get a page of Robot Run messages",
        "description" : "Get a page of Robot Run messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getRobotRunLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/robotRunLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "RobotRunLogController" ],
        "summary" : "Delete one Robot Run log record and its messages",
        "description" : "Delete one Robot Run log record selected by id",
        "operationId" : "deleteRobotRunAndItsMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robotSummaryLogs/page" : {
      "get" : {
        "tags" : [ "RobotSummaryLogController" ],
        "summary" : "Get a page of Robot Run messages",
        "description" : "Get a page of Robot Run messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getRobotSummaryLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/robotfilesystem/add" : {
      "post" : {
        "tags" : [ "RfsController" ],
        "summary" : "Add a Robot File System configuration",
        "description" : "Add a Robot File System configuration",
        "operationId" : "addRobotFSConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RfsConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/robotfilesystem/delete" : {
      "put" : {
        "tags" : [ "RfsController" ],
        "summary" : "Delete Robot File System records",
        "description" : "Delete Robot File System records",
        "operationId" : "deleteRFSEntries",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/robotfilesystem/page" : {
      "get" : {
        "tags" : [ "RfsController" ],
        "summary" : "Get a page of Robot File System records of all accessible projects",
        "description" : "Get a page of Robot File System records of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfRFS",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/robotfilesystem/shareTypes" : {
      "get" : {
        "tags" : [ "RfsController" ],
        "summary" : "Get Robot File System share types",
        "description" : "Localized Robot File System share types",
        "operationId" : "getRobotFSShareTypes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RfsShareTypeDTO"
              }
            }
          }
        }
      }
    },
    "/mc/robotfilesystem/update" : {
      "put" : {
        "tags" : [ "RfsController" ],
        "summary" : "Update a Robot File System configuration",
        "description" : "Update a Robot File System configuration",
        "operationId" : "updateRobotFSConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RfsConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/robotfilesystem/{projectId}/page" : {
      "get" : {
        "tags" : [ "RfsController" ],
        "summary" : "Get a page of resource files of the given project",
        "description" : "Get a page of resource files of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfRFSForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by resource file name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/schedule/add" : {
      "post" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Create a Schedule",
        "description" : "Create a Schedule",
        "operationId" : "addSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ScheduleEditDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/schedule/delete" : {
      "put" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Delete Schedules with given ids",
        "description" : "Delete Schedules with given ids",
        "operationId" : "deleteSchedules",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/schedule/executionid/{executionId}" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get a schedule by execution id",
        "description" : "Get a running schedule by execution id",
        "operationId" : "getScheduleByExecutionId",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "executionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ScheduleOutputDTO"
            }
          }
        }
      }
    },
    "/mc/schedule/job/{schedulerId}" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get a single job details for given schedulerId and job scope",
        "description" : "Get a single job details for given schedulerId and job scope (which is a unique identifier of job in schedule)",
        "operationId" : "getRobotJobFromSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "jobScope",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "schedulerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SchedulerJobDTO"
            }
          }
        }
      }
    },
    "/mc/schedule/jobs/{schedulerId}" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get the list of job details for given schedulerId",
        "description" : "Get the list of job details for given schedulerId",
        "operationId" : "getRobotJobsFromSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "schedulerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SchedulerJobDTO"
              }
            }
          }
        }
      }
    },
    "/mc/schedule/page" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get a page of Schedule of all accessible projects",
        "description" : "Get a page of Schedule of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfSchedules",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order. ",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Schedule name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseScheduleOutputDTO"
            }
          }
        }
      }
    },
    "/mc/schedule/start" : {
      "post" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Start Schedules with given ids",
        "description" : "Start Schedules with given ids",
        "operationId" : "startSchedules",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/schedule/stop" : {
      "post" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Stop Schedules with given ids",
        "description" : "Stop Schedules with given ids",
        "operationId" : "stopSchedules",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/schedule/strategy" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get matching strategies",
        "description" : "Returns a list of matching strategies",
        "operationId" : "getMatchingStrategy",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MatchingStrategyDTO"
              }
            }
          }
        }
      }
    },
    "/mc/schedule/timeUnits" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get time units",
        "description" : "Returns a list of time units",
        "operationId" : "getTimeUnits",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeUnitDTO"
              }
            }
          }
        }
      }
    },
    "/mc/schedule/triggerTypes" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get trigger types",
        "description" : "Returns a list of trigger types",
        "operationId" : "getTriggerTypes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TriggerTypeDTO"
              }
            }
          }
        }
      }
    },
    "/mc/schedule/update/{active}" : {
      "post" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Change Schedule Active status of given scheduler list",
        "description" : "Change Schedule Active status of given scheduler listt",
        "operationId" : "changeScheduleActive",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "active",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByStringIdsRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/schedule/{projectId}/clusters" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get list of clusters permitted to assign to schedules for the project",
        "description" : "Get the list of clusters for given projectId",
        "operationId" : "getClustersForSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClusterInfo"
              }
            }
          }
        }
      }
    },
    "/mc/schedule/{projectId}/page" : {
      "get" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Get a page of schedulers for the given project",
        "description" : "Get a page of schedulers for the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfSchedulesForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by Schedule name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseScheduleOutputDTO"
            }
          }
        }
      }
    },
    "/mc/schedule/{schedulerId}" : {
      "put" : {
        "tags" : [ "SchedulesController" ],
        "summary" : "Update a Schedule",
        "description" : "Update a Schedule",
        "operationId" : "updateSchedule",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ScheduleEditDTO"
          }
        }, {
          "name" : "schedulerId",
          "in" : "path",
          "description" : "Scheduler Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/delete" : {
      "put" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Delete ScheduleRun messages matched filters",
        "description" : "Delete ScheduleRun messages matched filters",
        "operationId" : "deleteScheduleMessagesByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/deleteByIds" : {
      "put" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Delete multiple ScheduleMessageLogs",
        "description" : "Delete multiple ScheduleMessageLogs selected by id",
        "operationId" : "deleteScheduleMessageLogs",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/page" : {
      "get" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Get a page of ScheduleMessage messages",
        "description" : "Get a page of ScheduleMessage messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getScheduleMessageLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/run/delete" : {
      "put" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Delete all messages related to schedule runs matched to the filters",
        "description" : "Delete all messages related to schedule runs matched to the filters",
        "operationId" : "deleteScheduleMessagesByRunFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/run/{id}/delete" : {
      "put" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Delete all messages that belong to the ScheduleRun",
        "description" : "Delete all messages that belong to the ScheduleRun",
        "operationId" : "deleteScheduleMessagesByRunId",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/scheduleMessageLogs/{id}" : {
      "put" : {
        "tags" : [ "ScheduleMessageLogController" ],
        "summary" : "Delete one ScheduleRun message",
        "description" : "Delete one ScheduleRun message selected by id",
        "operationId" : "deleteScheduleMessage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/scheduleRunLogs/delete" : {
      "put" : {
        "tags" : [ "ScheduleRunLogController" ],
        "summary" : "Delete ScheduleRuns matching the specified filters",
        "description" : "Delete ScheduleRuns matching the specified filters",
        "operationId" : "deleteScheduleRunsByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleRunLogs/deleteByIds" : {
      "put" : {
        "tags" : [ "ScheduleRunLogController" ],
        "summary" : "Delete multiple ScheduleRunLogs",
        "description" : "Delete multiple ScheduleRuns",
        "operationId" : "deleteScheduleRunLogs",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleRunLogs/page" : {
      "get" : {
        "tags" : [ "ScheduleRunLogController" ],
        "summary" : "Get a page of ScheduleRun messages",
        "description" : "Get a page of ScheduleRun messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getScheduleRunLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/scheduleRunLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "ScheduleRunLogController" ],
        "summary" : "Delete one ScheduleRun and its messages",
        "description" : "Delete one ScheduleRun selected by id",
        "operationId" : "deleteScheduleRunAndItsMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/AnalyticsDatabaseSettings" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get Analytics Database Settings",
        "description" : "Get Kofax Insight (former Altosoft Insight) Analytics Database Settings, a.k.a. ANALYTICS_DATABASE settings",
        "operationId" : "getAnalyticsDatabaseSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsDatabaseSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save Analytics Database Settings",
        "description" : "Save Kofax Insight (former Altosoft Insight) Analytics Database Settings, a.k.a. ANALYTICS_DATABASE settings",
        "operationId" : "saveAnalyticsDatabaseSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "analyticsDatabaseSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsDatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsDatabaseSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/AnalyticsDatabaseSettings/test" : {
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Test Analytics Database connection",
        "description" : "Test Analytics Database connection",
        "operationId" : "testAnalyticsDatabaseConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "analyticsDatabaseSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsDatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/configuration" : {
      "get" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Get CyberArk configuration",
        "description" : "Get CyberArk configuration",
        "operationId" : "getCyberArkConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CyberArkConfigurationDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Update CyberArk configuration",
        "description" : "Update CyberArk configuration",
        "operationId" : "updateCyberArkConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CyberArkConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CyberArkConfigurationDTO"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/configuration/certificate" : {
      "post" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Add CyberArk Certificate",
        "description" : "Add CyberArk Certificate",
        "operationId" : "uploadCyberArkCertificate",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/configuration/certificate/delete" : {
      "put" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Delete CyberArk Certificate",
        "description" : "Delete a CyberArk Certificate",
        "operationId" : "deleteCyberArkCertificate",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/CyberArk/configuration/test" : {
      "post" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Check CyberArk connection",
        "description" : "Check CyberArk connection",
        "operationId" : "checkCyberArkConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CyberArkConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/keyStore" : {
      "get" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Get CyberArk Key Stores application",
        "description" : "Get CyberArk Key Stores application",
        "operationId" : "getCyberArkKeyStores",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CyberArkKeyStoreDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Add CyberArk Key Store application",
        "description" : "Add CyberArk Key Store application",
        "operationId" : "addCyberArkKeyStoreApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "applicationName",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "keyPassword",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "storePassword",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/keyStore/delete/{id}" : {
      "put" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Delete CyberArk Key Store application",
        "description" : "Delete CyberArk Key Store application",
        "operationId" : "deleteCyberArkKeyStoreApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/CyberArk/keyStore/{id}" : {
      "post" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Update CyberArk Key Store application",
        "description" : "Update CyberArk Key Store application",
        "operationId" : "updateCyberArkKeyStoreApplication",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "applicationName",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "keyPassword",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "storePassword",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CyberArkKeyStoreDTO"
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/keyStoreNames" : {
      "get" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Get CyberArk Key Stores application names",
        "description" : "Get CyberArk Key Stores application names",
        "operationId" : "getCyberArkKeyStoreNames",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CyberArkKeyStoreNameDTO"
              }
            }
          }
        }
      }
    },
    "/mc/setting/CyberArk/status" : {
      "get" : {
        "tags" : [ "CyberArkSettingsController" ],
        "summary" : "Get CyberArk Enabled status",
        "description" : "Get CyberArk Enabled status",
        "operationId" : "isCyberArkEnabled",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/mc/setting/DASPingInterval" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get DAS Ping Interval",
        "description" : "Get DAS Ping Interval",
        "operationId" : "getDASPingInterval",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/DASPingInterval/{pingInterval}" : {
      "put" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save DAS Ping Interval",
        "description" : "Save DAS Ping Interval",
        "operationId" : "saveDasPingInterval",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "pingInterval",
          "in" : "path",
          "description" : "pingInterval",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/Database/Drivers/" : {
      "get" : {
        "tags" : [ "DatabaseDriversSettingsController" ],
        "summary" : "Get DB Drivers data",
        "description" : "Get DB Drivers data",
        "operationId" : "getDatabaseDrivers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "includeBytes",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseDriverInformation"
              }
            }
          }
        }
      }
    },
    "/mc/setting/Database/Drivers/add" : {
      "post" : {
        "tags" : [ "DatabaseDriversSettingsController" ],
        "summary" : "Create a Database Driver",
        "description" : "Create a Database Driver from the given uploaded file",
        "operationId" : "addDatabaseDriver",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "override",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/Database/Drivers/delete/{id}" : {
      "put" : {
        "tags" : [ "DatabaseDriversSettingsController" ],
        "summary" : "Delete DB Driver jar by id",
        "description" : "Delete DB Driver jar by id",
        "operationId" : "deleteDBDriver",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/Database/Drivers/isUploadAllowed" : {
      "get" : {
        "tags" : [ "DatabaseDriversSettingsController" ],
        "summary" : "Check if Database Driver can be uploaded",
        "description" : "Check if Database Driver can be uploaded by security configuration",
        "operationId" : "isUploadAllowed",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/Database/SharedDsSettings/" : {
      "get" : {
        "tags" : [ "DesignStudioSettingsController" ],
        "summary" : "Get Design Studio Shared Settings",
        "description" : "Get Design Studio Shared Settings",
        "operationId" : "getDsSharedSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DsSharedSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "DesignStudioSettingsController" ],
        "summary" : "Save Design Studio Shared Settings",
        "description" : "Save Design Studio Shared Settings",
        "operationId" : "saveDsSharedSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "settingsReq",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DsSharedSettingsReqDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DsSharedSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/Database/Types/" : {
      "get" : {
        "tags" : [ "DatabaseTypesSettingsController" ],
        "summary" : "Get Database Types",
        "description" : "Get Database Types",
        "operationId" : "getDatabaseTypes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DatabaseTypeDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "DatabaseTypesSettingsController" ],
        "summary" : "Add a Database Type",
        "description" : "Add a Database Type",
        "operationId" : "saveDatabaseType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "dbTypeInfo",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabaseTypeDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DatabaseTypesSettingsController" ],
        "summary" : "Update Database Type",
        "description" : "Update Database Type",
        "operationId" : "updateDatabaseType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "dbTypeInfo",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabaseTypeDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DatabaseTypeDTO"
            }
          }
        }
      }
    },
    "/mc/setting/Database/Types/delete/{id}" : {
      "put" : {
        "tags" : [ "DatabaseTypesSettingsController" ],
        "summary" : "Delete DB Type by id",
        "description" : "Delete DB Type by id",
        "operationId" : "deleteDatabaseType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/EncryptionTypes" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get SMTP (email) encryption types",
        "description" : "Get SMTP (email) encryption types",
        "operationId" : "getEncryptionTypes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EmailEncryptionTypeDTO"
              }
            }
          }
        }
      }
    },
    "/mc/setting/KTAConfigurations/" : {
      "get" : {
        "tags" : [ "KtaSettingsController" ],
        "summary" : "Get KTA Configurations",
        "description" : "Get KTA Configurations",
        "operationId" : "getKTAConfigurations",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "KtaSettingsController" ],
        "summary" : "Create a KTA Configurations",
        "description" : "Create a KTA Configurations",
        "operationId" : "addKTAConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "ktaConfiguration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KTAConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "KtaSettingsController" ],
        "summary" : "Edit a KTA Configurations",
        "description" : "Edit a KTA Configurations",
        "operationId" : "updateKTAConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "ktaConfiguration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KTAConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KTAConfigurationDTO"
            }
          }
        }
      }
    },
    "/mc/setting/KTAConfigurations/delete/{id}" : {
      "put" : {
        "tags" : [ "KtaSettingsController" ],
        "summary" : "Delete a KTA Configuration by id",
        "description" : "Delete a KTA Configuration by id",
        "operationId" : "deleteKTAConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/KTAConfigurations/test" : {
      "post" : {
        "tags" : [ "KtaSettingsController" ],
        "summary" : "Test KTA Connection",
        "description" : "Test connection to KTA server",
        "operationId" : "testKtaConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "ktaConfiguration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KTAConfigurationDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/LogDatabaseSettings" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get Log Database Settings",
        "description" : "Get Log Database Settings",
        "operationId" : "getLogDatabaseSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LogDatabaseSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save Log Database Settings",
        "description" : "Save Log Database Settings",
        "operationId" : "saveLogDatabaseSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "logDatabaseSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LogDatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LogDatabaseSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/LogDatabaseSettings/test" : {
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Test Log Database connection",
        "description" : "Test Log Database connection",
        "operationId" : "testLogDatabaseConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "logDatabaseSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LogDatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/MCGeneral" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get MC General Settings",
        "description" : "MC base url, Local documentation enablement and url, Password recovery enablement and from address, Cluster purge enablement",
        "operationId" : "getGeneralSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BaseGeneralSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save MC General Settings",
        "description" : "Save MC base url, Local documentation enablement and url, Password recovery enablement and from address, Cluster purge enablement   ",
        "operationId" : "saveBaseGeneralSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "baseGeneralSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BaseGeneralSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BaseGeneralSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryAnalyzer" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get Process Discovery Analyzer ",
        "description" : "Get Process Discovery Analyzer",
        "operationId" : "getProcessDiscoveryAnalyzerData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryAnalyzerSettingsDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Edit a Process Discovery Analyzer",
        "description" : "Edit a Process Discovery Analyzer",
        "operationId" : "editProcessDiscoveryAnalyzerData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProcessDiscoveryAnalyzerSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryAnalyzerSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryAnalyzer/createSchema" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Create new schema for Process Discovery Analyzer",
        "description" : "Create new schema for Process Discovery Analyzer",
        "operationId" : "createSchemaForPDAnalyzer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryAnalyzer/grantAccess" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Grant access to Process Discovery Analyzer user",
        "description" : "Grant access to Process Discovery Analyzer user",
        "operationId" : "grantAccessForPDAnalyzer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryAnalyzer/testConnection" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Check database connection with administrator credentials for Process Discovery Analyzer currently saved settings.",
        "description" : "Check database connection with administrator credentials for Process Discovery Analyzer currently saved settings. Process Discovery Analyzer settings must be saved prior calling this method",
        "operationId" : "checkPDAnalyzerDatabaseConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryAnalyzer/testUserExists" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Checks non admin user exists in currently saved Process Discovery Analyzer database.",
        "description" : "Checks non admin user exists in currently saved Process Discovery Analyzer database. Process Discovery Analyzer settings must be saved prior calling this method",
        "operationId" : "checkPDAnalyzerDatabaseUserExists",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroupNames" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get Process Discovery Group names",
        "description" : "Get Process Discovery Group names",
        "operationId" : "getProcessDiscoveryGroupNames",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get Process Discovery Groups",
        "description" : "Get Process Discovery Groups",
        "operationId" : "getProcessDiscoveryGroups",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Create a Process Discovery Groups",
        "description" : "Create a Process Discovery Groups",
        "operationId" : "addProcessDiscoveryGroups",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/createSchema/{id}" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Create new schema for Process Discovery Agent",
        "description" : "Create new schema for Process Discovery Agent",
        "operationId" : "createSchemaForPDAgent",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/delete/{id}" : {
      "put" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Delete a Process Discovery Groups",
        "description" : "Delete a Process Discovery Groups",
        "operationId" : "deleteProcessDiscoveryGroup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/edit" : {
      "put" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Edit Process Discovery Groups",
        "description" : "Edit Process Discovery Groups",
        "operationId" : "editProcessDiscoveryGroups",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "updateData",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/grantAccess/{id}" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Grant access to Process Discovery Agent user",
        "description" : "Grant access to Process Discovery Agent user",
        "operationId" : "grantAccessForPDAgent",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/id/{id}" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get Process Discovery Group by its id",
        "description" : "Get Process Discovery Group by its id, returns null if no group is found",
        "operationId" : "getProcessDiscoveryGroupById",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/testConnection/{id}" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Check database connection with administrator credentials for currently saved Process Discovery Group settings with given ID.",
        "description" : "Check database connection with administrator credentials for currently saved Process Discovery Group settings with given ID. Process Discovery Group must be saved prior calling this method",
        "operationId" : "checkPDAgentDatabaseConnection",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/testUserExists/{id}" : {
      "post" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Checks non admin user exists in currently saved Process Discovery Group database with given ID.",
        "description" : "Checks non admin user exists in currently saved Process Discovery Group database with given ID. Process Discovery Group must be saved prior calling this method",
        "operationId" : "checkPDAgentDatabaseUserExists",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ProcessDiscoveryGroups/{groupName}" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get Process Discovery Group by its name",
        "description" : "Get Process Discovery Group by its name, returns null if no group is found",
        "operationId" : "getProcessDiscoveryGroupByName",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "groupName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryGroupSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/ScheduleModes" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Get ProcessDiscovery Schedule Modes",
        "description" : "Get ProcessDiscovery Schedule Modes",
        "operationId" : "getProcessDiscoveryScheduleModes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessDiscoveryScheduleDTO"
              }
            }
          }
        }
      }
    },
    "/mc/setting/ProcessDiscovery/version" : {
      "get" : {
        "tags" : [ "ProcessDiscoverySettingsController" ],
        "summary" : "Gets current version of Process Discovery API",
        "description" : "If fails to load a version, then returns ProcessDiscoveryAPIVersionDTO filled with nulls",
        "operationId" : "getCurrentVersion",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDiscoveryAPIVersionDTO"
            }
          }
        }
      }
    },
    "/mc/setting/ProxyServerSetting" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get Proxy Server Settings",
        "description" : "Get Proxy Server Settings",
        "operationId" : "getProxyServerSetting",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyServerSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save Proxy Server Settings",
        "description" : "Save Proxy Server Settings",
        "operationId" : "saveProxyServerSetting",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "proxyServerSetting",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyServerSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyServerSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/RFSServerSettings" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get RFS Server Settings",
        "description" : "Get RFS Server Settings",
        "operationId" : "getRFSServerSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RFSServerSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save RFS Server Settings",
        "description" : "Save RFS Server Settings",
        "operationId" : "saveRFSServerSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "rfsServerSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RFSServerSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RFSServerSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/RoboServerAuthenticationSettings" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get RoboServer Authentication Settings",
        "description" : "Get RoboServer Authentication Settings",
        "operationId" : "getRoboServerAuthenticationSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RoboServerAuthenticationSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save RoboServer Authentication Settings",
        "description" : "Save RoboServer Authentication Settings",
        "operationId" : "saveRoboServerAuthenticationSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "roboServerAuthenticationSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RoboServerAuthenticationSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RoboServerAuthenticationSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/setting/SMTPServerSettings" : {
      "get" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Get SMTP Server Settings",
        "description" : "Get MC General SMTP Server Settings",
        "operationId" : "getSMTPServerSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SMTPServerSettingsDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GeneralSettingsController" ],
        "summary" : "Save SMTP Server Settings",
        "description" : "Save SMTP Server Settings",
        "operationId" : "saveSMTPServerSettings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "smtpServerSettings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SMTPServerSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SMTPServerSettingsDTO"
            }
          }
        }
      }
    },
    "/mc/snippet/add" : {
      "post" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Create a Snippet",
        "description" : "Create a Snippet from the given uploaded file",
        "operationId" : "addSnippet",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "commitMessage",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "folderName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "override",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "projectId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/snippet/delete" : {
      "put" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Delete Snippets",
        "description" : "Delete Snippets",
        "operationId" : "deleteSnippet",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteItemRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/snippet/download/{snippetId}" : {
      "get" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Download the snippet",
        "description" : "Download the snippet.",
        "operationId" : "downloadSnippet",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "snippetId",
          "in" : "path",
          "description" : "snippetId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/mc/snippet/folder/set" : {
      "put" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Set folder",
        "description" : "Move the robot to the specified folder",
        "operationId" : "setSnippetFolder",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetFolderRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/snippet/page" : {
      "get" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Get a page of snippets of all accessible projects",
        "description" : "Get a page of snippets of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfSnippets",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by snippet name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseSnippetFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/snippet/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Get a page of snippets of the given project",
        "description" : "Get a page of snippets of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfSnippetsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by snippet name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseSnippetFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/snippet/references" : {
      "get" : {
        "tags" : [ "SnippetController" ],
        "summary" : "Get information about robots or snippets that reference the specified snippets",
        "description" : "Get information about robots or snippets that reference the snippets",
        "operationId" : "getSnippetReferences",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "snippetIds",
          "in" : "query",
          "description" : "snippetIds",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReferencesDTO"
            }
          }
        }
      }
    },
    "/mc/taskMessageLogs/delete" : {
      "put" : {
        "tags" : [ "TaskMessageLogController" ],
        "summary" : "Delete Task messages matched filters",
        "description" : "Delete Task messages matched filters",
        "operationId" : "deleteTaskMessagesByFilter",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteItemCountResponse"
            }
          }
        }
      }
    },
    "/mc/taskMessageLogs/page" : {
      "get" : {
        "tags" : [ "TaskMessageLogController" ],
        "summary" : "Get a page of Task Messages",
        "description" : "Get a page of Task Messages, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getTaskMessageLogMessages",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "time"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "searchParameters",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/taskMessageLogs/{id}/delete" : {
      "put" : {
        "tags" : [ "TaskMessageLogController" ],
        "summary" : "Delete one Task message",
        "description" : "Delete one Task message selected by id",
        "operationId" : "deleteTaskMessage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/taskView/stop/{taskId}" : {
      "post" : {
        "tags" : [ "TaskViewController" ],
        "summary" : "Task Execution Id to stop",
        "description" : "Task Execution Id to stop",
        "operationId" : "stopTask",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "taskId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/taskView/{clusterId}/runningTask" : {
      "get" : {
        "tags" : [ "TaskViewController" ],
        "summary" : "Get Running Tasks",
        "description" : "Get Running Tasks",
        "operationId" : "getRunningTasks",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "clusterId",
          "in" : "path",
          "description" : "clusterId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by type name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "displayName"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRunningTaskDTO"
            }
          }
        }
      }
    },
    "/mc/taskView/{projectId}/clusters" : {
      "get" : {
        "tags" : [ "TaskViewController" ],
        "summary" : "Get Clusters for robots execution for this project when robots are invoked as RESTful services",
        "description" : "Get Clusters for robots execution for this project when robots are invoked as RESTful services",
        "operationId" : "getServiceClusters",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseRunningClusterDTO"
            }
          }
        }
      }
    },
    "/mc/tasks/getRobotOutput/{ticket}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get robot outputs starting from indices",
        "description" : "Get robot outputs with ",
        "operationId" : "getRobotOutput",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "ticket",
          "in" : "path",
          "description" : "Unique execution ticket",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/QueuedRobotExecutionResult"
            }
          }
        }
      }
    },
    "/mc/tasks/getRobotOutputLimited/{ticket}/{firstValueIndex}/{firstErrorIndex}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get robot output and errors, but limits the results by taking indexes",
        "description" : "Get robot outputs with ",
        "operationId" : "getRobotOutputLimited",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "firstErrorIndex",
          "in" : "path",
          "description" : "Limit the errors, by only sending results starting from this index, 0 is the first entry",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "firstValueIndex",
          "in" : "path",
          "description" : "Limit the output values, by only sending results starting from this index, 0 is the first entry",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "ticket",
          "in" : "path",
          "description" : "Unique execution ticket",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/QueuedRobotExecutionResult"
            }
          }
        }
      }
    },
    "/mc/tasks/queueRobot" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Queue Robot Task",
        "description" : "Queue a Robot with ",
        "operationId" : "queueRobotByName",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueuingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/QueuingResponse"
            }
          }
        }
      }
    },
    "/mc/tasks/robotInputExample" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Get robot input example",
        "description" : "Get robot input example with ",
        "operationId" : "getRobotInputExample",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "robotInfo",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RobotInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RobotInputConfigRobotInputAttributeValue"
            }
          }
        }
      }
    },
    "/mc/tasks/stop/{ticket}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Stop the task. If it is queued, it will simply be removed from the queue, if the robot is running, the robot will be stopped",
        "description" : "Stop robot with with ",
        "operationId" : "stop",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "ticket",
          "in" : "path",
          "description" : "The ticket ",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/triggermapping/label/add" : {
      "post" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Create a robot trigger-label relation",
        "description" : "Create a robot trigger-label relation",
        "operationId" : "addTriggerLabelRelations",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddTriggerMappingDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/triggermapping/label/delete" : {
      "post" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Delete the trigger label mapping with the given ids",
        "description" : "Delete the trigger label mapping with the given ids. If deletion results in empty folders they can optionally be pruned.",
        "operationId" : "deleteTriggerLabelMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/triggermapping/label/page" : {
      "get" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Get a page of trigger mappings for all accessible projects",
        "description" : "Get a page of trigger mappings of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTriggerLabelMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by label name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTriggerLabelMappingDTO"
            }
          }
        }
      }
    },
    "/mc/triggermapping/label/update" : {
      "put" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Update a robot trigger-label relation",
        "description" : "Update a robot trigger-label relation",
        "operationId" : "updateTriggerLabelRelation",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditTriggerMappingDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/triggermapping/label/{projectId}/page" : {
      "get" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Get a page of trigger mappings of the given project",
        "description" : "Get a page of trigger mappings of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTriggerLabelMappingsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by label name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTriggerLabelMappingDTO"
            }
          }
        }
      }
    },
    "/mc/triggermapping/user/add" : {
      "post" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Create a robot trigger-user relation",
        "description" : "Create a robot trigger-user relation",
        "operationId" : "addTriggerUserRelations",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddTriggerMappingDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/triggermapping/user/delete" : {
      "post" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Delete the trigger user mapping with the given ids",
        "description" : "Delete the trigger user mapping with the given ids. If deletion results in empty folders they can optionally be pruned.",
        "operationId" : "deleteTriggerUserMapping",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActionByIdsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteStatusResponse"
            }
          }
        }
      }
    },
    "/mc/triggermapping/user/page" : {
      "get" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Get a page of trigger user mappings for all accessible projects",
        "description" : "Get a page of trigger user mappings of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTriggerUserMappings",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "userName"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by user name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTriggerUserMappingDTO"
            }
          }
        }
      }
    },
    "/mc/triggermapping/user/update" : {
      "put" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Update a robot trigger-user relation",
        "description" : "Update a robot trigger-user relation",
        "operationId" : "updateTriggerUserRelation",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditTriggerMappingDTO"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/triggermapping/user/{projectId}/page" : {
      "get" : {
        "tags" : [ "TriggerMappingController" ],
        "summary" : "Get a page of trigger mappings of the given project",
        "description" : "Get a page of trigger mappings of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTriggerUserMappingsForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by robot name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "userName"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "secondFilterValue",
          "in" : "query",
          "description" : "Filtering by user name.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTriggerUserMappingDTO"
            }
          }
        }
      }
    },
    "/mc/type/add" : {
      "post" : {
        "tags" : [ "TypeController" ],
        "summary" : "Create a Type",
        "description" : "Create a Type from the given uploaded file",
        "operationId" : "addType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "commitMessage",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "file",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "folderName",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "override",
          "in" : "formData",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "projectId",
          "in" : "formData",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/type/delete" : {
      "put" : {
        "tags" : [ "TypeController" ],
        "summary" : "Delete types",
        "description" : "Delete types",
        "operationId" : "deleteType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteItemRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/type/download/{typeId}" : {
      "get" : {
        "tags" : [ "TypeController" ],
        "summary" : "Download the type",
        "description" : "Download the type.",
        "operationId" : "downloadType",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "typeId",
          "in" : "path",
          "description" : "typeId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/mc/type/folder/set" : {
      "put" : {
        "tags" : [ "TypeController" ],
        "summary" : "Set folder",
        "description" : "Move the robot to the specified folder",
        "operationId" : "setTypeFolder",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetFolderRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/type/page" : {
      "get" : {
        "tags" : [ "TypeController" ],
        "summary" : "Get a page of types of all accessible projects",
        "description" : "Get a page of types of all accessible projects, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTypes",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by type name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTypeFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/type/project/{projectId}/page" : {
      "get" : {
        "tags" : [ "TypeController" ],
        "summary" : "Get a page of types of the given project",
        "description" : "Get a page of types of the given project, other input parameters specify paging, sorting and filtering.",
        "operationId" : "getPageOfTypesForProject",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by type name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponseTypeFileDisplayDTO"
            }
          }
        }
      }
    },
    "/mc/type/references" : {
      "get" : {
        "tags" : [ "TypeController" ],
        "summary" : "Get information about robots or snippets that reference the specified types",
        "description" : "Get information about robots or snippets that reference the types",
        "operationId" : "getTypeReferences",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "typeIds",
          "in" : "query",
          "description" : "typeIds",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReferencesDTO"
            }
          }
        }
      }
    },
    "/mc/user/" : {
      "put" : {
        "tags" : [ "UserController" ],
        "summary" : "Update an existing User",
        "description" : "Update an existing User",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserDTO"
            }
          }
        }
      }
    },
    "/mc/user/add" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "Create a new User",
        "description" : "Create a new User",
        "operationId" : "createUser",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserDTO"
            }
          }
        }
      }
    },
    "/mc/user/group" : {
      "put" : {
        "tags" : [ "UserController" ],
        "summary" : "Update a user Group",
        "description" : "Update a user Group",
        "operationId" : "editGroup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserGroupRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/user/group/add" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "Create a new Group",
        "description" : "Create a new Group",
        "operationId" : "createGroup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserGroupRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/user/group/delete" : {
      "put" : {
        "tags" : [ "UserController" ],
        "summary" : "Delete Groups",
        "description" : "Delete Groups by name and return the count of groups that was removed",
        "operationId" : "deleteGroups",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteByNamesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/user/group/page" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get a page of user group",
        "description" : "Get a page of user group",
        "operationId" : "getUserGroupPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by user name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/user/group/{groupName}/users" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get users in a  group",
        "description" : "Get users in a group group",
        "operationId" : "getUsersInGroup",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "groupName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/user/group/{userGroupId}" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get user group information",
        "description" : "Get user group information",
        "operationId" : "getUserGroupInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GroupDTO"
            }
          }
        }
      }
    },
    "/mc/user/groups" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get all groups",
        "description" : "Get all groups",
        "operationId" : "getAllGroups",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GroupDTO"
              }
            }
          }
        }
      }
    },
    "/mc/user/logout" : {
      "get" : {
        "tags" : [ "UserController" ],
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/user/page" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get a page of users",
        "description" : "Get a page of users",
        "operationId" : "getUserPage",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "asc",
          "in" : "query",
          "description" : "True in case of ascending order.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filterValue",
          "in" : "query",
          "description" : "Filtering by user name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "userName"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Results page you want to retrieve (0..N)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/user/resetPassword" : {
      "put" : {
        "tags" : [ "UserController" ],
        "summary" : "Reset password of a User",
        "description" : "Reset password of a User and notify via email where requsted",
        "operationId" : "resetUserPassword",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordResetRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/user/user" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get user information",
        "description" : "Get user information",
        "operationId" : "getUserInfo",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "userName",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/mc/user/user/groups" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get user's group memberships",
        "description" : "List of users group memberships",
        "operationId" : "getGroupMemberShips",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "userName",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SelectPageResponse"
            }
          }
        }
      }
    },
    "/mc/user/users" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "Get all user names",
        "description" : "Get all user names",
        "operationId" : "getAllUsernames",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/mc/user/users/delete" : {
      "put" : {
        "tags" : [ "UserController" ],
        "summary" : "Delete Users",
        "description" : "Delete users by username and return the count of users that was removed",
        "operationId" : "deleteUsers",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteByNamesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/mc/user/whoami" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "whoami",
        "description" : "whoami",
        "operationId" : "whoami",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClientInitialData"
            }
          }
        }
      }
    },
    "/mc/utility/applicationNodes" : {
      "get" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Get Application Node Data",
        "description" : "Get Application Node Data",
        "operationId" : "getApplicationNodeData",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/mc/utility/db" : {
      "get" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Get Object Databases",
        "description" : "Get Object Databases",
        "operationId" : "getObjectDatabases",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ObjectDatabase"
              }
            }
          }
        }
      }
    },
    "/mc/utility/dbtest" : {
      "post" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Test DB Connection",
        "description" : "Test DB Connection",
        "operationId" : "doDBTest",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabaseSettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/utility/executeSQL" : {
      "post" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Execute SQL",
        "description" : "Execute SQL",
        "operationId" : "executeSQL",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExecuteSqlRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/utility/generateSQL" : {
      "post" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Generate SQL",
        "description" : "Generate SQL",
        "operationId" : "generateSQL",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "in" : "body",
          "name" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExecuteSqlRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiMessageResponse"
            }
          }
        }
      }
    },
    "/mc/utility/threadDump/{nodeName}" : {
      "get" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Get a Thread Dump for a node",
        "description" : "Get a Thread Dump for a node",
        "operationId" : "getThreadDump",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ThreadDumpDTO"
            }
          }
        }
      }
    },
    "/mc/utility/verifycron" : {
      "get" : {
        "tags" : [ "UtilityController" ],
        "summary" : "Verify that cron is legitimate due to quartz",
        "description" : "",
        "operationId" : "verifyCron",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "cron",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/sync/changes" : {
      "get" : {
        "summary" : "Data to be sent from MC to synchronizer",
        "description" : "Data to be sent from MC to synchronizer",
        "operationId" : "sendVcsChanges",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "project",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Get changes from vcs repository",
        "description" : "Get changes from vcs repository",
        "operationId" : "receiveVcsChanges",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "file"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "message",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/sync/config" : {
      "get" : {
        "summary" : "Request for a list of projects that need to be synchronized",
        "description" : "Request for a list of projects that need to be synchronized",
        "operationId" : "getVcsConfiguration",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/McVcsConfiguration"
            }
          }
        }
      }
    },
    "/sync/reset" : {
      "get" : {
        "summary" : "Reset synchronization for the project",
        "description" : "Reset synchronization for the project",
        "operationId" : "resetSynchronizer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "User Language for localization. if not specified, 'en' would be used as the default",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "project",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "APICodeGenerationDTO" : {
      "type" : "object",
      "properties" : {
        "javaCode" : {
          "type" : "string"
        },
        "csharpCode" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        }
      }
    },
    "AbstractAdmission" : {
      "type" : "object",
      "required" : [ "restrictionType" ],
      "properties" : {
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "Abstract admission"
    },
    "ActionByIdsRequest" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "ActionByStringIdsRequest" : {
      "type" : "object",
      "properties" : {
        "longIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AddClusterRequest" : {
      "type" : "object",
      "properties" : {
        "licenseDistribution" : {
          "type" : "boolean"
        },
        "production" : {
          "type" : "boolean"
        },
        "licenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "clusterName" : {
          "type" : "string"
        },
        "ssl" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a Cluster add request. "
    },
    "AddRoboServerRequest" : {
      "type" : "object",
      "properties" : {
        "hostName" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "portNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "Class representing a RoboServer add request. "
    },
    "AddTriggerMappingDTO" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "robotIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "description" : "Class representing a Trigger Label or User Mapping add request."
    },
    "AdmissionInfo" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/AbstractAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionInfoCyberArkAdmission" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/CyberArkAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionInfoDatabaseAdmission" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/DatabaseAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionInfoDesktopAutomAdmission" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/DesktopAutomAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionInfoPassStoreAdmission" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/PassStoreAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionInfoRfsAdmission" : {
      "type" : "object",
      "required" : [ "admissionMethod", "applicability", "level" ],
      "properties" : {
        "admissionMethod" : {
          "type" : "string",
          "description" : "Admission method",
          "enum" : [ "ROBOT_EXECUTION", "CLIENT_INCL_DS", "ROBOT_AND_CLIENT" ]
        },
        "applicability" : {
          "type" : "string",
          "position" : 1,
          "description" : "Admission applicability to projects",
          "enum" : [ "ALL_PROJECTS", "LIMITED_PROJECTS" ]
        },
        "projects" : {
          "type" : "array",
          "position" : 2,
          "description" : "Projects this admission is applicable to (only for LIMITED_PROJECTS applicability)",
          "items" : {
            "$ref" : "#/definitions/ProjectInfo"
          }
        },
        "level" : {
          "type" : "string",
          "position" : 3,
          "description" : "Admission level",
          "enum" : [ "FULL_ADMISSION", "FULL_ADMISSION_IN_PROJECTS", "FULL_ADMISSION_IN_CLUSTER", "ADMISSION_LIST" ]
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "Admission related cluster name (only for FULL_ADMISSION_IN_CLUSTER)"
        },
        "admissionList" : {
          "type" : "array",
          "position" : 5,
          "description" : "Admission list (for ADMISSION_LIST level or if expandFullAdmission = true)",
          "items" : {
            "$ref" : "#/definitions/RfsAdmission"
          }
        }
      },
      "description" : "Admissions information"
    },
    "AdmissionsResponse" : {
      "type" : "object",
      "properties" : {
        "rfsInfo" : {
          "type" : "array",
          "description" : "Robot file system information",
          "items" : {
            "$ref" : "#/definitions/AdmissionInfoRfsAdmission"
          }
        },
        "passStoreInfo" : {
          "type" : "array",
          "description" : "Password store admission information",
          "items" : {
            "$ref" : "#/definitions/AdmissionInfoPassStoreAdmission"
          }
        },
        "dasInfo" : {
          "type" : "array",
          "description" : "Desktop automation service information",
          "items" : {
            "$ref" : "#/definitions/AdmissionInfoDesktopAutomAdmission"
          }
        },
        "cyberArkInfo" : {
          "type" : "array",
          "description" : "CyberArk admission information",
          "items" : {
            "$ref" : "#/definitions/AdmissionInfoCyberArkAdmission"
          }
        },
        "dbInfo" : {
          "type" : "array",
          "description" : "Development database information",
          "items" : {
            "$ref" : "#/definitions/AdmissionInfoDatabaseAdmission"
          }
        }
      },
      "description" : "Admissions information response"
    },
    "AnalyticsDatabaseSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "roboServerAnalyticsDaysCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "useAnalyticsDatabase" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Analytics Database setting Data."
    },
    "ApiErrorResponse" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "GENERIC_PROCESSING_ERROR", "GENERIC_UNKNOWN_ERROR", "GENERIC_BAD_REQUEST", "GENERIC_NOT_FOUND", "GENERIC_INTERNAL_SERVER_ERROR", "IMPORT_COMPLETED_WITH_WARNING", "FOLDER_ITEM_MOVE_INVALID_LENGTH", "SEARCH_INCORRECT_PARAMETERS", "SEARCH_PARAMETER_VALUE_IS_NOT_DEFINED", "SEARCH_INCORRECT_PARAMETER_VALUE", "SEARCH_INVALID_PARAMETER", "SEARCH_UNKNOWN_PATTERN", "NO_PERMISSION_TO_ACCESS_ANY_PROJECT", "NO_PERMISSION_TO_CREATE_EXPORT", "NO_PERMISSION_TO_RESTORE_BACKUPS", "NO_PERMISSION_TO_IMPORT_PROJECTS", "NO_PERMISSION_TO_GET_BACKUP_RESULT", "NO_PERMISSION_TO_CHANGE_CLUSTERS", "NO_PERMISSION_TO_VIEW_CLUSTERS", "NO_PERMISSION_TO_ADD_ROBOSERVER_CLUSTERS", "NO_PERMISSION_TO_RENAME_CLUSTERS", "NO_PERMISSION_TO_DELETE_CLUSTERS", "NO_PERMISSION_TO_ADD_ROBOSERVERS", "NO_PERMISSION_TO_DELETE_ROBOSERVERS", "NO_PERMISSION_TO_SHUTDOWN_ROBOSERVERS", "NO_PERMISSION_TO_REQUEST_DUMP", "NO_PERMISSION_TO_ENABLE_PROFILING", "NO_PERMISSION_TO_VIEW_DATABASE_MAPPINGS", "NO_PERMISSION_TO_VIEW_DATABASE_MAPPINGS_ANY_PROJECT", "NO_PERMISSION_TO_EDIT_DATABASE_MAPPINGS", "NO_PERMISSION_TO_VIEW_DATABASE_TYPES", "NO_PERMISSION_TO_VIEW_DEVICE_MAPPINGS", "NO_PERMISSION_TO_CREATE_DEVICE_MAPPINGS", "NO_PERMISSION_TO_EDIT_DEVICE_MAPPINGS", "NO_PERMISSION_TO_DELETE_DEVICE_MAPPINGS", "NO_PERMISSION_TO_ACCESS_DESKTOP_AUTOMATION", "NO_PERMISSION_TO_FOLDER_ON_ITEM", "NO_PERMISSION_TO_ACCESS_PROJECT", "NO_PERMISSION_TO_VIEW_LICENSE", "NO_PERMISSION_TO_CHANGE_LICENSE", "NO_PERMISSION_TO_VIEW_LICENSE_DETAILS", "NO_PERMISSION_TO_DELETE_SCHEDULE_RUNS", "NO_PERMISSION_TO_VIEW_SCHEDULE_RUNS", "NO_PERMISSION_TO_DELETE_SCHEDULE_MESSAGES", "NO_PERMISSION_TO_VIEW_SCHEDULE_MESSAGES", "NO_PERMISSION_TO_DELETE_ROBOT_RUNS", "NO_PERMISSION_TO_VIEW_ROBOT_RUNS", "NO_PERMISSION_TO_DELETE_ROBOT_MESSAGES", "NO_PERMISSION_TO_VIEW_ROBOT_MESSAGES", "NO_PERMISSION_TO_VIEW_APPLICATION_LOG_MESSAGES", "NO_PERMISSION_TO_DELETE_APPLICATION_LOG_MESSAGES", "NO_PERMISSION_TO_DELETE_TASK_MESSAGES", "NO_PERMISSION_TO_VIEW_TASK_MESSAGES", "NO_PERMISSION_TO_DELETE_SERVER_MESSAGES", "NO_PERMISSION_TO_VIEW_SERVER_LOGS", "NO_PERMISSION_TO_DELETE_DAS_MESSAGES", "NO_PERMISSION_TO_VIEW_DAS_MESSAGES", "NO_PERMISSION_TO_VIEW_ROBOT_SUMMARY_MESSAGES", "NO_PERMISSION_TO_VIEW_OAUTH_APPLICATIONS", "NO_PERMISSION_TO_ADD_OAUTH_APPLICATIONS", "NO_PERMISSION_TO_EDIT_OAUTH_APPLICATIONS", "NO_PERMISSION_TO_DELETE_OAUTH_APPLICATIONS", "NO_PERMISSION_TO_VIEW_OAUTH_USERS", "NO_PERMISSION_TO_DELETE_OAUTH_USERS", "NO_PERMISSION_TO_ADD_OAUTH_USERS", "NO_PERMISSION_TO_ACCESS_PASSWORD_STORE_ENTRIES", "NO_PERMISSION_TO_ACCESS_STORE_ENTRIES_ANY_PROJECT", "NO_PERMISSION_TO_ACCESS_PASSWORD_STORE_ACCESS_ENTRIES", "NO_PERMISSION_TO_ACCESS_PASSWORD_STORE_ACCESS_ENTRIES_ANY_PROJECT", "NO_PERMISSION_TO_ADD_PASSWORD_STORE_ACCESS_ENTRIES", "NO_PERMISSION_TO_EDIT_PASSWORD_STORE_ACCESS_ENTRIES", "NO_PERMISSION_TO_DELETE_ACCESS_PASSWORD_STORE_ENTRIES", "NO_PERMISSION_TO_MOVE_ACCESS_PASSWORD_STORE_ENTRY", "NO_PERMISSION_TO_ADD_PASSWORD_STORE_ENTRY", "NO_PERMISSION_TO_EDIT_PASSWORD_STORE_ENTRIES", "NO_PERMISSION_TO_DELETE_PASSWORD_STORE_ENTRIES", "NO_PERMISSION_TO_CREATE_PROJECTS", "NO_PERMISSION_TO_VIEW_PROJECTS", "NO_PERMISSION_TO_EDIT_PROJECTS", "NO_PERMISSION_TO_DELETE_PROJECTS", "NO_PERMISSION_TO_VIEW_RESOURCES", "NO_PERMISSION_TO_VIEW_RESOURCES_ANY_PROJECT", "NO_PERMISSION_TO_ADD_RESOURCES", "NO_PERMISSION_TO_DOWNLOAD_RESOURCES", "NO_PERMISSION_TO_DELETE_RESOURCES", "NO_PERMISSION_TO_ADD_CONNECTORS", "NO_PERMISSION_TO_DELETE_CONNECTORS", "NO_PERMISSION_TO_VIEW_RFS_CONFIG", "NO_PERMISSION_TO_VIEW_RFS_CONFIG_ANY_PROJECT", "NO_PERMISSION_TO_ADD_RFS_CONFIG", "NO_PERMISSION_TO_EDIT_RFS_CONFIG", "NO_PERMISSION_TO_VIEW_ROBOTS", "NO_PERMISSION_TO_VIEW_ROBOTS_ANY_PROJECT", "NO_PERMISSION_TO_ADD_ROBOTS", "NO_PERMISSION_TO_DELETE_ROBOTS", "NO_PERMISSION_TO_RUN_ROBOTS", "NO_PERMISSION_TO_STOP_ROBOTS", "NO_PERMISSION_TO_DOWNLOAD_ROBOTS", "NO_PERMISSION_TO_GENERATE_API_CODE", "NO_PERMISSION_TO_VIEW_SCHEDULES", "NO_PERMISSION_TO_VIEW_SCHEDULES_ANY_PROJECT", "NO_PERMISSION_TO_EDIT_SCHEDULES", "NO_PERMISSION_TO_DELETE_SCHEDULES", "NO_PERMISSION_TO_STOP_ACTIVATE_SCHEDULES", "NO_PERMISSION_TO_STOP_DEACTIVATE_SCHEDULES", "NO_PERMISSION_TO_STOP_SCHEDULES", "NO_PERMISSION_TO_START_SCHEDULES", "NO_PERMISSION_TO_CHANGE_SETTINGS", "NO_PERMISSION_TO_VIEW_SNIPPETS", "NO_PERMISSION_TO_VIEW_SNIPPETS_ANY_PROJECT", "NO_PERMISSION_TO_ADD_SNIPPETS", "NO_PERMISSION_TO_DOWNLOAD_SNIPPETS", "NO_PERMISSION_TO_VIEW_TRIGGER_LABELS", "NO_PERMISSION_TO_VIEW_TRIGGER_LABELS_ANY_PROJECT", "NO_PERMISSION_TO_VIEW_TRIGGER_USERS", "NO_PERMISSION_TO_VIEW_TRIGGER_USERS_ANY_PROJECT", "NO_PERMISSION_TO_SUSPEND_AND_ACTIVATE_TRIGGERS", "NO_PERMISSION_TO_VIEW_TYPES", "NO_PERMISSION_TO_VIEW_TYPES_FOR_PROJECTS", "NO_PERMISSION_TO_ADD_TYPES", "NO_PERMISSION_TO_DOWNLOAD_TYPES", "NO_PERMISSION_TO_EXECUTE_SQL", "NO_PERMISSION_TO_GENERATE_SQL", "NO_PERMISSION_TO_REQUEST_THREAD_DUMP", "NO_PERMISSION_TO_ASSIGN_ROLES", "NO_PERMISSION_TO_VIEW_KTA_CONFIGURATIONS", "NO_PERMISSION_TO_MODIFY_KTA_CONFIGURATIONS", "NO_PERMISSION_TO_TEST_KTA_CONFIGURATIONS", "NO_PERMISSION_TO_CREATE_ROBOT_TO_USER_RELATIONS", "NO_PERMISSION_TO_CREATE_ROBOT_TO_LABEL_RELATIONS", "NO_PERMISSION_TO_VIEW_USERS", "NO_PERMISSION_TO_CREATE_USERS", "NO_PERMISSION_TO_EDIT_USERS", "NO_PERMISSION_TO_DELETE_USERS", "NO_PERMISSION_TO_RESET_PASSWORD", "NO_PERMISSION_TO_VIEW_USER_GROUPS", "NO_PERMISSION_TO_CREATE_USER_GROUPS", "NO_PERMISSION_TO_EDIT_USER_GROUPS", "NO_PERMISSION_TO_DELETE_USER_GROUPS", "NO_PERMISSION_TO_VIEW_DATA", "NO_PERMISSION_TO_EXPORT_DATA", "NO_PERMISSION_TO_GET_COLUMN_NAMES", "NO_PERMISSION_TO_DELETE_DATA_FROM_DATA_VIEW", "NO_PERMISSION_TO_VIEW_MAIL_ACCOUNT", "NO_PERMISSION_TO_CHANGE_MAIL_ACCOUNT", "NO_PERMISSION_TO_DELETE_MAIL_ACCOUNT", "NO_PERMISSION_TO_VIEW_MAIL_ACCOUNT_TEMPLATES", "NO_PERMISSION_TO_VIEW_EMAIL_TRIGGERS", "NO_PERMISSION_TO_CHANGE_EMAIL_TRIGGERS", "NO_PERMISSION_TO_DELETE_EMAIL_TRIGGERS", "NO_PERMISSION_TO_ADD_CYBER_ARK_ENTRIES", "NO_PERMISSION_TO_ACCESS_CYBER_ARK_ENTRIES", "NO_PERMISSION_TO_ACCESS_CYBER_ARK_ENTRIES_ANY_PROJECT", "NO_PERMISSION_TO_EDIT_CYBER_ARK_ENTRIES", "NO_PERMISSION_TO_DELETE_CYBER_ARK_ENTRIES", "NO_PERMISSION_TO_DELETE_CYBER_ARK_ACCESS_ENTRIES", "NO_PERMISSION_TO_MOVE_CYBER_ARK_ACCESS_STORE_ENTRY", "NO_PERMISSION_TO_ACCESS_CYBER_ARK_STORE_ENTRIES", "NO_PERMISSION_TO_EDIT_CYBER_ARK_STORE_ENTRIES", "NO_PERMISSION_TO_GET_CYBER_ARK_APPLICATIONS", "NO_PERMISSION_TO_GET_CYBER_ARK_MODE", "NO_PERMISSION_TO_ACCESS_ADMISSIONS", "NO_PERMISSIONS_TO_VIEW_HA_NODES", "KTA_CONFIGURATION_NOT_FOUND", "KTA_CONFIGURATION_INCORRECT_INTERNAL_ID", "KTA_CONFIGURATION_ID_MUST_BE_POSITIVE", "KTA_CONFIGURATION_NAME_IS_EMPTY", "KTA_CONFIGURATION_URL_IS_EMPTY", "KTA_CONFIGURATION_URL_IS_INVALID", "KTA_CONFIGURATION_USERNAME_IS_EMPTY", "KTA_CONFIGURATION_PASSWORD_IS_EMPTY", "KTA_CONFIGURATION_ALREADY_EXISTS", "KTA_CONFIGURATION_NAME_INVALID_LENGTH", "KTA_CONFIGURATION_URL_INVALID_LENGTH", "KTA_CONFIGURATION_USERNAME_INVALID_LENGTH", "KTA_INVALID_DOMAIN_OR_USERNAME", "KTA_MALFORMED_URL", "KTA_CONFIGURATION_TEST_GENERIC_ERROR", "KTA_CONFIGURATION_TEST_UNABLE_INIT_HTTP_CLIENT_ERROR", "KTA_CONFIGURATION_TEST_SOAP_ERROR", "KTA_CONFIGURATION_TEST_UNSUPPORTED_ENCODING_ERROR", "LICENSE_INVALID_TYPE", "LICENSE_INVALID_KEY", "LICENSE_ASSIGMENT_IS_NULL", "LICENSE_NO_LICENSE", "LICENSE_KEY_IS_NULL", "LICENSE_KEY_MUST_BE_24", "LICENSE_KEY_IS_INVALID", "LICENSE_HAS_EXPIRED", "LICENSE_KEY_IS_NOT_PRODUCTION", "LICENSE_PRODUCTION_KEY_IS_INVALID", "LICENSE_NON_PRODUCTION_KEY_IS_INVALID", "LICENSE_NO_STANDALONE_DEPLOYMENT", "LICENSE_NO_HIGH_AVAILABILITY", "LICENSE_NON_PRODUCTION_KEY_IS_NOT_NON_PRODUCTION", "LICENSE_NON_PRODUCTION_LICENSE_NO_STANDALONE_DEPLOYMENT", "LICENSE_NON_PRODUCTION_LICENSE_NO_HIGH_AVAILABILITY", "LICENSE_DIFFERENT_EXPIRATION_DATES", "LICENSE_KEYS_MUST_BE_SAME_EDITION", "LICENSE_KEYS_MUST_USE_SAME_LICENSE_MODEL", "LICENSE_CLUSTERS_MODEL_NAME_GREATER_THAN_ALLOWED", "LICENSE_COMPANY_NAME_DOES_NOT_MATCH_COMPANY_FROM_KEY", "LICENSE_COMPANY_NAME_IS_EMPTY", "LICENSE_PROD_KEY_AND_NON_PROD_KEY_ARE_EMPTY", "BACKUP_UNABLE_TO_GET_EXPORT", "BACKUP_UNABLE_TO_GET_EXPORT_STATUS", "BACKUP_UNABLE_TO_IMPORT_FULL", "BACKUP_UNABLE_TO_IMPORT_PROJECT", "BACKUP_EXPORT_ID_IS_EMPTY", "BACKUP_UNABLE_TO_GET_PROGRESS", "BACKUP_INVALID_PROJECT_FILE", "BACKUP_INVALID_BACKUP_FILE", "BACKUP_CLUSTER_NAMES_CLASH", "ROBOSERVER_NOT_FOUND", "ROBOSERVER_ID_IS_INVALID", "ROBOSERVER_HOST_NAME_IS_EMPTY", "ROBOSERVER_HOST_NAME_INVALID_LENGTH", "ROBOSERVER_INVALID_PORT", "ROBOSERVER_INVALID_SHUTDOWN_METHOD", "ROBOSERVER_IS_ALREADY_PART_OF_THIS_CLUSTER", "ROBOSERVER_IS_ALREADY_PART_OF_THE_CLUSTER", "ROBOSERVER_UNABLE_TO_GET_THREAD_DUMP", "CLUSTER_ID_IS_INVALID", "CLUSTER_SETTINGS_ID_IS_INVALID", "CLUSTER_ID_IS_INVALID_FOR_DS_SETTINGS", "CLUSTER_NAME_IS_EMPTY", "CLUSTER_LICENSE_UNITS_IS_INVALID", "CLUSTER_PRODUCTION_INVALID_LICENSE_UNIT", "CLUSTER_PRODUCTION_LICENSE_UNITS_INVALID_NUMBER", "CLUSTER_NON_PRODUCTION_LICENSE_UNITS_INVALID_NUMBER", "CLUSTER_NAME_INVALID_LENGTH", "CLUSTER_CANNOT_BE_DELETED", "CLUSTER_TO_BE_DELETED_HAS_SCHEDULES", "CLUSTER_TO_BE_DELETED_HAS_DB_MAPPINGS", "CLUSTER_NOT_FOUND", "CLUSTER_SETTINGS_NOT_FOUND", "CLUSTER_SETTINGS_NOT_FOUND_FOR_CLUSTER_ID", "CLUSTER_WITH_ROBOSERVER_NOT_FOUND", "CLUSTER_NOT_FOUND_BY_NAME", "CLUSTER_NAME_ALREADY_EXISTS", "CLUSTER_NAME_SPACES_ONLY", "CLUSTER_UNABLE_TO_CHANGE_STATE", "CLUSTER_STATE_IS_INVALID", "CLUSTER_UNABLE_TO_CONNECT", "CLUSTER_UNABLE_TO_ENCRYPT_DATABASE_PASSWORD", "CLUSTER_NOT_OPERATIONAL", "CLUSTER_NOT_EXIST", "CLUSTER_HAS_NOT_APPLIED_SETTINGS", "CLUSTER_HAS_INVALID_SETTINGS", "CLUSTER_IS_PAUSED", "CLUSTER_HAS_ZERO_CRE", "CLUSTER_HAS_ZERO_KCU", "CLUSTER_HAS_INVALID_LICENSE", "CLUSTER_FOR_SCHEDULE_NOT_EXIST", "CLUSTER_INCORRECT_GENERAL_SETTINGS", "CLUSTER_INCORRECT_DATABASE_SETTINGS", "CLUSTER_INCORRECT_LOGGING_SETTINGS", "CLUSTER_INCORRECT_PROFILING_SETTINGS", "CLUSTER_INCORRECT_PROXY_SERVERS_SETTINGS", "CLUSTER_INCORRECT_ROBOT_EXECUTION_SETTINGS", "CLUSTER_APPLY_MODE_IS_INVALID", "CLUSTER_CONCURRENT_ROBOTS_MUST_BE_POSITIVE", "CLUSTER_INVALID_MAX_QUEUED_ROBOTS", "CLUSTER_INVALID_THRESHOLD", "CLUSTER_UNABLE_TO_DELETE_DATABASE", "OAUTH_USER_MUST_AUTHORIZE_APPLICATION", "OAUTH_CLIENT_NOT_FOUND_IN_USER_SESSION", "OAUTH_APPLICATION_ALREADY_EXISTS", "OAUTH_APPLICATION_ID_MUST_BE_POSITIVE", "OAUTH_APPLICATION_NAME_INVALID_LENGTH", "OAUTH_USER_NAME_INVALID_LENGTH", "OAUTH_TENANT_INVALID_LENGTH", "OAUTH_APPLICATION_NAME_IS_EMPTY", "OAUTH_APPLICATION_NOT_FOUND", "OAUTH_SERVICE_PROVIDER_INVALID_LENGTH", "OAUTH_SERVICE_PROVIDER_UNKNOWN_NAME", "OAUTH_CONSUMER_KEY_INVALID_LENGTH", "OAUTH_CONSUMER_SECRET_IS_EMPTY", "OAUTH_USER_ALREADY_EXISTS", "OAUTH_USER_ACCESS_KEY_IS_EMPTY", "OAUTH_USER_ACCESS_SECRET_IS_EMPTY", "OAUTH_USER_REFRESH_TOKEN_IS_EMPTY", "OAUTH_USER_ID_MUST_BE_POSITIVE", "OAUTH_UNABLE_TO_ACQUIRE_URL_ERROR", "OAUTH_USER_NOT_FOUND", "OAUTH_USER_NOT_FOUND_BY_NAME", "PASSWORD_STORE_ENTRY_ID_MUST_BE_POSITIVE", "PASSWORD_STORE_ACCESS_ENTRY_ID_MUST_BE_POSITIVE", "PASSWORD_STORE_ACCESS_ENTRY_INVALID_ID", "PASSWORD_STORE_ENTRIES_IDS_ARE_NOT_DEFINED", "PASSWORD_STORE_ENTRIES_SOME_IDS_ARE_INCORRECT", "PASSWORD_STORE_ACCESS_ENTRIES_IDS_ARE_NOT_DEFINED", "PASSWORD_ACCESS_STORE_ENTRIES_SOME_IDS_ARE_INCORRECT", "PASSWORD_ENTRY_ALREADY_DEFINED", "PASSWORD_INVALID_LENGTH", "PASSWORD_ENTRY_ACCESS_ALREADY_EXIST", "PASSWORD_STORE_ENTRY_UNABLE_TO_MOVE_AND_MERGE", "PASSWORD_STORE_ENTRY_UNABLE_TO_MOVE", "PASSWORD_STORE_ENTRY_UNABLE_TO_MOVE_DUE_CONFLICTS", "PASSWORD_STORE_ENTRY_NOT_FOUND", "PASSWORD_STORE_ACCESS_ENTRY_NOT_FOUND", "PASSWORD_STORE_MODE_IS_OFF", "PASSWORD_STORE_ACCESS_DESCRIPTION_IS_EMPTY", "PASSWORD_STORE_ACCESS_TOKEN_IS_EMPTY", "TARGET_SYSTEM_INVALID_LENGTH", "TARGET_SYSTEM_IS_EMPTY", "CYBER_ARK_CONFIGURATION_NOT_FOUND", "CYBER_ARK_APPLICATION_NOT_FOUND", "CYBER_ARK_CERTIFICATE_NOT_FOUND", "CYBER_ARK_ILLEGAL_FILENAME", "CYBER_ARK_STORE_ENTRY_NOT_FOUND", "CYBER_ARK_STORE_ENTRY_ID_MUST_BE_POSITIVE", "CYBER_ARK_STORE_ENTRIES_IDS_ARE_NOT_DEFINED", "CYBER_ARK_STORE_ENTRIES_SOME_IDS_ARE_INCORRECT", "CYBER_ARK_STORE_ENTRY_UNABLE_TO_MOVE_DUE_CONFLICTS", "CYBER_ARK_STORE_ENTRY_UNABLE_TO_MOVE", "CYBER_ARK_STORE_ENTRY_UNABLE_TO_MOVE_AND_MERGE", "CYBER_ARK_SAFE_INVALID_LENGTH", "CYBER_ARK_ACCOUNT_NAME_INVALID_LENGTH", "CYBER_ARK_APPLICATION_NAME_INVALID_LENGTH", "CYBER_ARK_MODE_IS_OFF", "CYBER_ARK_ACCESS_ALREADY_EXIST", "CYBER_ARK_ACCESS_TOKEN_INVALID_LENGTH", "CYBER_ARK_ACCESS_DESCRIPTION_INVALID_LENGTH", "CYBER_ARK_ACCESS_ENTRIES_IDS_ARE_NOT_DEFINED", "CYBER_ARK_ACCESS_ENTRIES_SOME_IDS_ARE_INCORRECT", "CYBER_ARK_ACCESS_ENTRY_NOT_FOUND", "CYBER_ARK_ACCESS_ENTRY_ID_MUST_BE_POSITIVE", "CYBER_ARK_ACCESS_ENTRY_INVALID_ID", "CYBER_ARK_CONFIGURATION_ID_MUST_BE_POSITIVE", "CYBER_ARK_HOST_IS_EMPTY", "CYBER_ARK_CONFIGURATION_HOST_IS_EMPTY", "CYBER_ARK_CONFIGURATION_URL_IS_INVALID", "CYBER_ARK_CONFIGURATION_IIS_APPLICATION_NAME_IS_EMPTY", "CYBER_ARK_CONFIGURATION_INVALID_PORT", "CYBER_ARK_STORE_PASSWORD_IS_EMPTY", "CYBER_ARK_APPLICATION_ID_MUST_BE_POSITIVE", "CYBER_ARK_APPLICATION_NAME_IS_EMPTY", "CYBER_ARK_APPLICATION_NAME_ALREADY_EXIST", "CYBER_ARK_GENERIC_ERROR", "CYBER_ARK_IS_DISABLED", "CYBER_ARK_INVALID_KEYSTORE_ENTRIES", "CYBER_ARK_INCORRECT_CERTIFICATE", "CYBER_ARK_INCORRECT_KEYSTORE_PASSWORD", "CYBER_ARK_INCORRECT_PK_PASSWORD", "CYBER_ARK_UNSUPPORTED_KEY_STORE", "CYBER_ARK_UNSUPPORTED_CERTIFICATE", "CYBER_ARK_FILE_CONTAINS_TOO_MANY_CERTIFICATES", "CYBER_ARK_KEY_STORE_NOT_INITIALIZED", "CYBER_ARK_CERT_ENCODING_FAILED", "CYBER_ARK_ERROR_RESPONSE_RECEIVED", "CYBER_ARK_UNABLE_TO_CONNECT_UNKNOWN_HOST", "CYBER_ARK_UNABLE_TO_CONNECT_REFUSED", "CYBER_ARK_UNABLE_TO_CONNECT_SEE_MC_LOG", "CYBER_ARK_CONFIGURATION_IS_INCORRECT", "CYBER_ARK_ENTRY_ALREADY_EXISTS", "FOLDER_OR_FILE_NAME_IS_NULL", "NAME_WITH_INVALID_LENGTH", "NAME_MUST_NOT_START_OR_END_WITH_DOT", "NAME_MUST_NOT_START_OR_END_WITH_SPACE", "NAME_MUST_NOT_BE_RESERVED_WORDS", "NAME_MUST_NOT_CONTAIN_ASCII_CONTROL_CHARS", "NAME_MUST_NOT_CONTAIN_INVALID_CHARACTERS", "NAME_MUST_NOT_CONTAIN_MULTI_SPACES_IN_A_ROW", "NAME_MUST_NOT_CONTAIN_ANY_SPACE", "FILE_ALREADY_EXISTS", "NAME_MUST_START_WITH_LETTER_OR_UNDERSCORE", "NAME_MUST_CONTAIN_ONLY_LETTER_DIGIT_UNDERSCORE", "FILE_RENAMED", "FILE_ALREADY_EXISTS_IN_DESTINATION_FOLDER", "ACCESS_TOKEN_GENERATION_FAILED_GENERIC", "ROBOT_NOT_FOUND", "ROBOT_NOT_FOUND_FOR_NAME", "ROBOT_NOT_FOUND_BY_NAME_AND_ID", "ROBOT_NOT_FOUND_FOR_IDS", "ROBOT_ID_MUST_BE_POSITIVE", "ROBOT_IDS_LIST_IS_EMPTY", "ROBOT_NAME_INVALID_LENGTH", "ROBOT_PATH_AND_NAME_INVALID_LENGTH", "ROBOT_REQUIRES_TYPES", "ROBOT_REQUIRES_SNIPPETS", "ROBOT_REQUIRES_ROBOTS", "ROBOT_DA_ROBOT_ALREADY_EXISTS", "ROBOT_DA_ROBOT_RESERVED_NAME", "ROBOT_FILE_DO_NOT_CONTAIN_ROBOT", "ROBOT_INVALID_ROBOTS_INPUT_NO_LOG_DB", "ROBOT_INVALID_ROBOTS_INPUT", "ROBOT_MISSING_REQUIRED_INPUT", "ROBOT_RUN_FAILED_GENERIC", "ROBOT_RUN_ABORTED", "ROBOT_RUN_FAILED_CAPACITY_EXCEEDED", "ROBOT_RUN_FAILED_NO_ROBOSERVER_AVAILABLE", "ROBOT_RUN_FAILED_NO_RESOURCE_AVAILABLE", "ROBOT_RUN_FAILED_ROBOT_TAKES_INPUT", "ROBOT_RUN_FAILED", "ROBOT_DOC_REQUEST_FAILED_NO_ROBOSERVER_AVAILABLE", "ROBOT_DOC_REQUEST_FAILED_NO_RESOURCE_AVAILABLE", "ROBOT_DOC_REQUEST_FAILED_GENERIC", "ROBOT_DOC_REQUEST_ABORTED", "ROBOT_EXECUTION_ID_IS_INVALID", "ROBOT_DOES_NOT_BELONG_TO_PROJECT", "ROBOT_SOAP_URL_IS_EMPTY", "ROBOT_SOAP_ACTION_IS_INVALID", "ROBOT_SERVICES_DISABLED_IN_PROJECT", "ROBOT_INPUT_NO_REQUIRED_OAUTH", "ROBOT_INPUT_NO_REQUIRED_ATTRIBUTE", "ROBOT_INPUT_ATTRIBUTE_INCOMPATIBLE_TYPE", "ROBOT_NAME_IS_EMPTY", "ROBOT_TYPE2_NOT_EXECUTABLE", "ROBOT_SUMMARY_READ_FAILED", "ROBOT_LIBRARY_GENERATION_FAILED", "ROBOT_UNABLE_COMPUTE_DEPENDENCIES", "DEPENDENCY_ROBOT_REQUIRES_TYPE", "DEPENDENCY_ROBOT_REQUIRES_SNIPPET", "DEPENDENCY_ROBOT_REQUIRES_ROBOT", "DEPENDENCY_SNIPPET_REQUIRES_TYPE", "DEPENDENCY_SNIPPET_REQUIRES_SNIPPET", "DEPENDENCY_SNIPPET_REQUIRES_ROBOT", "TRIGGER_ROBOT_TO_USER_RELATION_FAILED_NO_ROBOT", "TRIGGER_ROBOT_TO_USER_RELATION_FAILED_NO_USER", "TRIGGER_ROBOT_TO_LABEL_RELATION_FAILED_NO_ROBOT", "TRIGGER_ROBOT_TO_LABEL_RELATION_FAILED_NO_LABEL", "TRIGGER_ROBOT_TO_LABEL_ALREADY_EXISTS", "TRIGGER_ROBOT_TO_USER_ALREADY_EXISTS", "TRIGGER_ROBOT_TO_LABEL_SAME_LABELS_ARE_PROHIBITED", "TRIGGER_ROBOT_TO_LABEL_SAME_ROBOTS_ARE_PROHIBITED", "TRIGGER_ROBOT_TO_USER_SAME_USERS_ARE_PROHIBITED", "TRIGGER_ROBOT_TO_USER_SAME_ROBOTS_ARE_PROHIBITED", "TRIGGER_ROBOT_TO_USER_NOT_FOUND", "TRIGGER_ROBOT_TO_LABEL_NOT_FOUND", "TRIGGER_IDS_ARE_INCORRECT", "TRIGGER_CONFIGURATION_IS_INCORRECT", "TRIGGER_MAPPING_ID_MUST_BE_POSITIVE", "TRIGGER_MAPPING_USER_NAME_IS_EMPTY", "TRIGGER_LABEL_IS_EMPTY", "TRIGGER_LABELS_LIST_IS_EMPTY", "TRIGGER_SOME_IDS_ARE_INCORRECT", "SCHEDULE_NOTHING_TO_DELETE", "SCHEDULE_NOTHING_TO_ACTIVATE", "SCHEDULE_NOTHING_TO_DEACTIVATE", "SCHEDULE_NOTHING_TO_STOP", "SCHEDULE_NOTHING_TO_START", "SCHEDULE_UNABLE_TO_LOAD_JOBS", "SCHEDULE_UNABLE_TO_LOAD_JOBS_GENERIC", "SCHEDULE_UNABLE_TO_SAVE", "SCHEDULE_UNABLE_TO_SAVE_GENERIC", "SCHEDULE_NAME_ALREADY_EXISTS_IN_PROJECT", "SCHEDULE_UNSUPPORTED_BLOCK_TYPE", "SCHEDULE_UNKNOWN_JOB_TYPE", "SCHEDULE_UNABLE_TO_START", "SCHEDULE_START_IS_ABORTED", "SCHEDULE_SUPPORTED_TRIGGER_TYPES", "SCHEDULE_TRIGGER_IS_INCORRECT", "SCHEDULE_SIMPLE_TRIGGER_DATA_IS_INCORRECT", "SCHEDULE_SIMPLE_TRIGGER_TIME_UNIT_IS_INCORRECT", "SCHEDULE_SIMPLE_TRIGGER_INTERVAL_SHOULD_BE_POSITIVE", "SCHEDULE_CRON_TRIGGER_PATTERN_IS_INCORRECT", "SCHEDULE_CRON_TIME_ZONE_IS_INCORRECT", "SCHEDULE_ID_IS_INVALID", "SCHEDULE_IDS_LIST_IS_EMPTY", "SCHEDULE_DATA_IS_INCORRECT", "SCHEDULE_JOBS_LIST_IS_EMPTY", "SCHEDULE_NAME_IS_EMPTY", "SCHEDULE_NAME_INVALID_LENGTH", "SCHEDULE_EMAILS_INVALID_LENGTH", "SCHEDULE_MAX_OBJECTS_EXTRACTED_NOT_SET", "SCHEDULE_MAX_OBJECTS_EXTRACTED_IS_INVALID", "SCHEDULE_MAX_RUNTIME_NOT_SET", "SCHEDULE_MAX_RUNTIME_IS_INVALID", "SCHEDULE_PREPROCESSING_ROBOT_ID_MUST_BE_POSITIVE", "SCHEDULE_POSTPROCESSING_ROBOT_ID_MUST_BE_POSITIVE", "SCHEDULE_PRE_POSTPROCESSING_ROBOT_MUST_HAVE_NO_INPUT", "SCHEDULE_JOBS_TIMEOUT_NOT_SET", "SCHEDULE_JOBS_TIMEOUT_IS_INVALID", "SCHEDULE_JOBS_PRIORITY_NOT_SET", "SCHEDULE_JOBS_NO_REQUIRED_OAUTH", "SCHEDULE_JOBS_NO_REQUIRED_INPUT", "SCHEDULE_JOB_SCOPE_BLANK", "SCHEDULE_JOB_NOT_FOUND", "SCHEDULE_NOT_FOUND", "SCHEDULE_NOT_FOUND_FOR_ROBOT_RUN", "SCHEDULE_CONTAINS_ERRORS", "USER_CREATION_NEEDS_MANAGEMENT_ENABLED", "USER_UPDATE_NEEDS_MANAGEMENT_ENABLED", "USER_GROUP_ACTIONS_NEEDS_MANAGEMENT_ENABLED", "USER_GROUP_MEMBERSHIP_NEEDS_MANAGEMENT_ENABLED", "USER_NEW_PASSWORD_EQUALS_OLD", "USER_OLD_PASSWORD_IS_INVALID", "USER_EMAIL_NOTIFICATION_FAILED_EMPTY_ADDRESS", "USER_EMAIL_NOTIFICATION_FAILED_GENERATE_ERROR", "USER_EMAIL_NOTIFICATION_FAILED_EMPTY_FROM_ADDRESS", "USER_EMAIL_NOTIFICATION_FAILED_TO_SEND", "USERNAME_ALREADY_IN_USE", "USER_ONE_ADMIN_USER_MUST_REMAIN", "USER_GROUP_ALREADY_EXIST", "USER_GROUP_NOT_FOUND", "USER_GROUP_NOT_FOUND_BY_NAME", "USER_GROUP_UNABLE_TO_DELETE_ADMINISTRATORS", "USER_NOT_FOUND_BY_NAME", "USER_ID_MUST_BE_POSITIVE", "USER_NAME_IS_EMPTY", "USER_NAME_CONTAINS_ILLEGAL_CHARACTERS", "USER_NAME_INVALID_LENGTH", "USER_NAMES_LIST_IS_EMPTY", "USER_GROUP_MUST_BE_POSITIVE", "USER_GROUP_NAME_HAS_ILLEGAL_CHARACTERS", "USER_GROUP_NAME_INVALID_LENGTH", "USER_GROUP_NAMES_LIST_IS_EMPTY", "USER_FULLNAME_IS_EMPTY", "USER_FULLNAME_HAS_INVALID_CHARACTERS", "USER_EMAIL_ADDRESS_IS_INVALID", "USER_PASSWORD_INVALID_LENGTH", "USER_NEW_PASSWORD_INVALID_LENGTH", "USER_OLD_PASSWORD_INVALID_LENGTH", "ADMIN_GROUP_RENAME_ERROR", "UTIL_NODE_NAME_IS_EMPTY", "UTIL_THREAD_DUMP_CALL_ERROR", "UTIL_NODE_NAME_NOT_FOUND", "TASK_NO_PERMISSION_TO_VIEW", "TASK_NO_PERMISSION_TO_STOP", "TASK_ID_MUST_BE_POSITIVE", "TASK_INVALID_CLUSTER_ID_FOR_TASK_SELECTION", "TASK_NOT_FOUND_BY_ID", "TASK_ROBOT_INFO_NULL", "TASK_QUEUING_TIMEOUT_IS_INVALID", "TASK_NOT_FOUND_FOR_TICKET", "TASK_NO_DEVICE_MAPPINGS", "DATA_DB_SEVERAL_MAPPINGS_FOUND", "DATA_DB_NO_MAPPINGS_FOUND", "DATA_UNABLE_TO_LOAD_TABLE_ROWS_SQL_ERROR", "DATA_UNABLE_TO_DELETE_TABLE_ROWS_SQL_ERROR", "DATA_UNABLE_TO_LOAD_COLUMNS_DEFINITIONS_SQL_ERROR", "DATA_UNABLE_TO_LOAD_COLUMNS_DEFINITIONS", "DATA_UNABLE_TO_GET_DB_STRUCTURE", "DATA_EXPORT_UNABLE_TO_START", "DATA_EXPORT_UNABLE_TO_GET_PROGRESS", "DATA_EXPORT_NO_DATA", "DATA_EXPORT_NO_FILE_TO_DELETE", "DATA_EXPORT_NOT_FOUND", "DATA_EXPORT_FILE_NOT_FOUND", "DATA_EXPORT_UNABLE_TO_CREATE_FILE", "DATA_CATALOG_SQL_TIMEOUT_ERROR", "DATA_CATALOG_SQL_ERROR", "DATA_CATALOG_ERROR", "DATA_CATALOG_UNABLE_TO_FIND", "DATA_TABLE_SQL_ERROR", "DATA_TABLE_ERROR", "DATA_NO_PRIMARY_KEY_DEFINED", "DATA_COMPOUND_PRIMARY_KEY_DEFINED", "DATA_CATALOG_NAME_IS_EMPTY", "DATA_SCHEMA_NAME_IS_EMPTY", "DATA_TABLE_NAME_IS_EMPTY", "DATA_NO_SUITABLE_TABLES_FOUND", "DATA_NO_TABLE_ROWS_TO_DELETE", "DATA_EXPORT_ID_MUST_BE_POSITIVE", "DATABASE_MAPPING_ALREADY_EXISTS", "DATABASE_MAPPING_NOT_FOUND", "DATABASE_MAPPING_NOT_FOUND_BY_NAME", "DATABASE_MAPPING_IDS_ARE_NOT_DEFINED", "DATABASE_MAPPING_ID_IS_INVALID", "DATABASE_MAPPING_NAME_INVALID_LENGTH", "DATABASE_MAPPING_NAME_IS_EMPTY", "DATABASE_MAPPING_SOME_IDS_ARE_INCORRECT", "DEVICE_MAPPING_NAME_INVALID_LENGTH", "DEVICE_MAPPING_NAME_ALREADY_EXISTS", "DEVICE_MAPPING_NAME_IS_RESERVED", "DEVICE_MAPPING_NAME_STARTS_WITH_DOT", "DEVICE_MAPPING_NAME_IS_EMPTY", "DEVICE_MAPPING_ID_MUST_BE_POSITIVE", "DEVICE_MAPPING_IDS_ARE_NOT_DEFINED", "DEVICE_MAPPING_SOME_IDS_ARE_INCORRECT", "DEVICE_MAPPING_LABELS_ARE_NOT_DEFINED", "DEVICE_MAPPING_LABELS_INVALID_LENGTH", "DEVICE_MAPPING_LABELS_STARTS_WITH_DOT", "DEVICE_MAPPING_LABELS_CONTAIN_ILLEGAL_CHARACTERS", "DEVICE_MAPPING_NOT_FOUND", "DEVICE_MAPPING_NOT_FOUND_FOR_IDS", "PD_ANALYZER_NOT_FOUND", "PD_ANALYZER_DATA_IS_EMPTY", "PD_ANALYZER_EXECUTE_AT_SPECIFIC_TIMES_INVALID_LENGTH", "PD_ANALYZER_EXECUTE_AT_SPECIFIC_TIMES_INVALID_VALUE", "PD_ANALYZER_EXECUTION_PERIOD_MUST_BE_POSITIVE", "PD_ANALYZER_READ_BATCH_SIZE_IS_INCORRECT", "PD_ANALYZER_WRITE_BATCH_SIZE_IS_INCORRECT", "PD_ANALYZER_CLUSTER_MASTER_ADDRESS_INVALID_LENGTH", "PD_ANALYZER_CLUSTER_NETWORK_PATTERN_INVALID_LENGTH", "PD_ANALYZER_CLUSTER_MASTER_PORT_IS_INVALID", "PD_ANALYZER_CLUSTER_MASTER_WEB_UI_PORT_IS_INVALID", "PD_ANALYZER_CLUSTER_WORKER_WEB_UI_PORT_IS_INVALID", "PD_ANALYZER_CLUSTER_MASTER_MEMORY_IS_INVALID", "PD_ANALYZER_CLUSTER_WORKER_MEMORY_IS_INVALID", "PD_DATABASE_TYPE_INVALID_LENGTH", "PD_DATABASE_USERNAME_INVALID_LENGTH", "PD_DATABASE_ADMIN_NAME_INVALID_LENGTH", "PD_DATABASE_HOST_INVALID_LENGTH", "PD_DATABASE_HOST_IS_EMPTY", "PD_DATABASE_SCHEMA_IS_EMPTY", "PD_DATABASE_ADMIN_NAME_IS_EMPTY", "PD_DATABASE_USERNAME_IS_EMPTY", "PD_DATABASE_PORT_IS_INVALID", "PD_DATABASE_SCHEMA_INVALID_LENGTH", "PD_DATABASE_CONNECTION_TIMEOUT_MUST_BE_POSITIVE", "PD_GROUP_ID_MUST_BE_POSITIVE", "PD_GROUP_NAME_IS_EMPTY", "PD_GROUP_NAME_INVALID_LENGTH", "PD_GROUP_NOT_FOUND", "PD_GROUP_NOT_FOUND_BY_NAME", "PD_GROUP_ALREADY_EXISTS", "PD_GROUP_AGENT_DB_IS_NULL", "PD_GROUP_ALWAYS_IGNORE_APPS_IS_EMPTY", "PD_GROUP_ALWAYS_IGNORE_APPS_INVALID_LENGTH", "PD_GROUP_NON_UIA_APPS_IS_EMPTY", "PD_GROUP_NON_UIA_APPS_INVALID_LENGTH", "PD_GROUP_MIN_TREE_IMMUTABLE_IS_INVALID", "PD_GROUP_MAX_INSTANCES_IN_PROCESS_IS_INVALID", "PD_GROUP_MAX_INACTIVITY_INTERVAL_IS_INVALID", "PD_GROUP_MIN_UNIQUE_ACTION_COUNT_IS_INVALID", "PD_GROUP_MIN_PROCESS_INSTANCE_COUNT_IS_INVALID", "PD_GROUP_MAX_NOISE_COUNT_IN_PROCESS_IS_INVALID", "PD_GROUP_MAX_COMPUTE_SCORE_DISTANCE_IS_INVALID", "PD_GROUP_MIN_BLOCK_SCORE_IS_INVALID", "PD_GROUP_MIN_STRONG_PAIR_SCORE_IS_INVALID", "PD_GROUP_MAX_PROCESS_DISTANCE_IS_INVALID", "PD_GROUP_EVENT_COUNT_IS_INVALID", "PD_GROUP_MAX_ISA_X_POSITION_DIFF_IS_INVALID", "PD_GROUP_MAX_ISA_Y_POSITION_DIFF_IS_INVALID", "PD_CREATE_SCHEMA_GENERIC_RUNTIME_ERROR", "PD_CREATE_SCHEMA_SQL_TIMEOUT_ERROR", "PD_CREATE_SCHEMA_SQL_ERROR", "PD_GRANT_ACCESS_GENERIC_RUNTIME_ERROR", "PD_GRANT_ACCESS_SQL_TIMEOUT_ERROR", "PD_GRANT_ACCESS_SQL_ERROR", "PROJECT_NAME_ALREADY_EXISTS", "PROJECT_NOT_FOUND", "PROJECT_FILE_IS_NOT_PART_OF_PROJECT", "PROJECT_ID_MUST_BE_POSITIVE", "PROJECT_INVALID_ID", "PROJECT_IDS_ARE_NOT_DEFINED", "PROJECT_SOME_IDS_ARE_INCORRECT", "PROJECT_NAME_INVALID_LENGTH", "PROJECT_NAME_CONTAIN_ILLEGAL_CHARACTERS", "PROJECT_NAME_IS_EMPTY", "PROJECT_DESCRIPTION_INVALID_LENGTH", "PROJECT_ACCESS_CONTROL_INVALID_LENGTH", "PROJECT_IMPORTED_BY_INVALID_LENGTH", "PROJECT_VCS_SETTINGS_IS_NULL", "PROJECT_VCS_SETTINGS_BRANCH_INVALID_LENGTH", "PROJECT_VCS_SETTINGS_URL_INVALID_LENGTH", "PROJECT_DOES_NOT_HAVE_SERVICE_CLUSTER", "PROJECT_FORCE_SERVICE_CLUSTER", "PROJECT_SERVICE_CLUSTER_IS_NOT_DEFINED", "PROJECT_CANNOT_DELETE_LAST_PROJECT", "PROJECT_INCORRECT_ROLE", "PROJECT_INCORRECT_GROUP", "RESOURCE_NOT_FOUND", "RESOURCE_ALREADY_EXISTS", "RESOURCE_IDS_ARE_NOT_DEFINED", "RESOURCE_ID_IS_INVALID", "RESOURCE_SOME_IDS_ARE_INCORRECT", "RESOURCE_FOLDERS_NOT_FOUND_FOR_IDS", "RESOURCE_NAME_INVALID_LENGTH", "RESOURCE_PATH_AND_NAME_INVALID_LENGTH", "RESOURCE_NOT_FOUND_FOR_NAME", "CONNECTOR_ALREADY_EXISTS", "RFS_NAME_ALREADY_EXISTS", "RFS_NAME_INVALID_LENGTH", "RFS_PATH_INVALID_LENGTH", "RFS_USERNAME_INVALID_LENGTH", "RFS_ID_IS_INVALID", "RFS_IDS_ARE_NOT_DEFINED", "RFS_TYPE_INVALID_LENGTH", "RFS_ACCESS_TOKEN_INVALID_LENGTH", "RFS_ACCESS_TOKEN_SAME_TOKENS_ARE_PROHIBITED", "RFS_TYPE_IS_NULL", "RFS_PASSWORD_INVALID_LENGTH", "RFS_RECORDS_NOT_FOUND", "RFS_NAME_CONTAIN_ILLEGAL_CHARACTERS", "RFS_ROBOTS_FROM_DIFFERENT_PROJECTS", "LOG_DB_UNABLE_TO_CONNECT", "LOG_DB_IS_NOT_CONFIGURED", "LOG_DB_UNKNOWN_EXCEPTION", "LOGS_DAS_LOG_MESSAGE_ID_IS_INVALID", "LOGS_DAS_LOG_MESSAGE_NOT_FOUND", "LOGS_ROBOSERVER_LOG_MESSAGE_ID_IS_INVALID", "LOGS_ROBOSERVER_LOG_MESSAGE_NOT_FOUND", "LOGS_ROBOT_RUN_LOG_MESSAGE_NOT_FOUND", "LOGS_ROBOT_RUN_LOG_MESSAGE_ID_IS_INVALID", "LOGS_ROBOT_RUN_ID_IS_INVALID", "LOGS_ROBOT_RUN_MESSAGE_NOT_FOUND", "LOGS_ROBOT_RUN_MESSAGE_NOT_FOUND_BY_RUN_ID", "LOGS_SCHEDULE_MESSAGES_IDS_ARE_NOT_DEFINED", "LOGS_SCHEDULE_MESSAGE_ID_IS_INVALID", "LOGS_SCHEDULE_MESSAGE_NOT_FOUND", "LOGS_SCHEDULE_MESSAGE_SOME_IDS_ARE_INCORRECT", "LOGS_SCHEDULE_MESSAGE_NOT_FOUND_BY_RUN_ID", "LOGS_SCHEDULE_RUN_ID_IS_INVALID", "LOGS_SCHEDULE_RUNS_IDS_ARE_NOT_DEFINED", "LOGS_SCHEDULE_RUN_SOME_IDS_ARE_INCORRECT", "LOGS_SCHEDULE_RUN_NOT_FOUND", "LOGS_TASK_MESSAGE_ID_IS_INVALID", "LOGS_TASK_MESSAGE_NOT_FOUND", "LOGS_APPLICATION_LOG_MESSAGE_NOT_FOUND", "LOGS_URL_LOG_MESSAGE_NOT_FOUND", "SETTINGS_GENERAL_BASE_URL_INVALID_LENGTH", "SETTINGS_GENERAL_INVALID_FROM_EMAIL_ADDRESS", "SETTINGS_GENERAL_INVALID_TO_EMAIL_ADDRESS", "SETTINGS_SMTP_HOST_INVALID_LENGTH", "SETTINGS_SMTP_USERNAME_INVALID_LENGTH", "SETTINGS_SMTP_PORT_IS_INVALID", "SETTINGS_PROXY_HOST_IS_EMPTY", "SETTINGS_PROXY_HOST_INVALID_LENGTH", "SETTINGS_PROXY_INVALID_PORT", "SETTINGS_PROXY_USERNAME_INVALID_LENGTH", "SETTINGS_PROXY_EXCLUDED_HOSTS_INVALID_LENGTH", "SETTINGS_PROFILE_FILE_PATH_INVALID_LENGTH", "SETTINGS_PROFILE_THRESHOLD_IS_INVALID", "SETTINGS_ANALYTICS_DB_TYPE_INVALID_LENGTH", "SETTINGS_ANALYTICS_DB_USERNAME_INVALID_LENGTH", "SETTINGS_ANALYTICS_DB_PORT_IS_INVALID", "SETTINGS_ANALYTICS_DB_HOST_INVALID_LENGTH", "SETTINGS_ANALYTICS_DB_HOST_AND_PORT_INVALID_LENGTH", "SETTINGS_ANALYTICS_DB_SCHEMA_INVALID_LENGTH", "SETTINGS_ANALYTICS_DB_ROBOSERVER_ANALYTICS_DAY_COUNT_MUST_BE_POSITIVE", "SETTINGS_LOG_DB_TYPE_INVALID_LENGTH", "SETTINGS_LOG_DB_USERNAME_INVALID_LENGTH", "SETTINGS_LOG_DB_PORT_IS_INVALID", "SETTINGS_LOG_DB_HOST_INVALID_LENGTH", "SETTINGS_LOG_DB_HOST_AND_PORT_INVALID_LENGTH", "SETTINGS_LOG_DB_SCHEMA_INVALID_LENGTH", "SETTINGS_LOG_DB_RECORD_DAYS_OF_KEEP_MUST_BE_POSITIVE", "SETTINGS_LOG_DB_MAX_MESSAGES_ROBOT_RUN_THRESHOLD_MUST_BE_POSITIVE", "SETTINGS_KAPPLETS_DB_TYPE_INVALID_LENGTH", "SETTINGS_KAPPLETS_DB_USERNAME_INVALID_LENGTH", "SETTINGS_KAPPLETS_DB_PORT_IS_INVALID", "SETTINGS_KAPPLETS_DB_HOST_IS_INVALID", "SETTINGS_KAPPLETS_DB_HOST_AND_PORT_INVALID_LENGTH", "SETTINGS_KAPPLETS_DB_SCHEMA_INVALID_LENGTH", "SETTINGS_RFS_HOST_INVALID_LENGTH", "SETTINGS_RFS_HOST_IS_INVALID", "SETTINGS_RFS_USERNAME_INVALID_LENGTH", "SETTINGS_ROBOSERVER_USERNAME_INVALID_LENGTH", "SETTINGS_DAS_PING_INTERVAL_IS_INVALID", "SETTINGS_NO_DATA_ENTERED", "SNIPPET_NOT_FOUND_FOR_IDS", "SNIPPET_ALREADY_EXISTS", "SNIPPET_IDS_ARE_NOT_DEFINED", "SNIPPET_ID_IS_INVALID", "SNIPPET_NAME_INVALID_LENGTH", "SNIPPET_PATH_AND_NAME_INVALID_LENGTH", "SNIPPET_FILE_IS_INCORRECT", "SNIPPET_REQUIRES_TYPES", "SNIPPET_REQUIRES_SNIPPETS", "SNIPPET_REQUIRES_ROBOTS", "TYPE_NOT_FOUND_FOR_IDS", "TYPE_ALREADY_EXISTS", "FILE_DO_NOT_CONTAIN_TYPE", "TYPE_IDS_ARE_NOT_DEFINED", "TYPE_ID_MUST_BE_POSITIVE", "TYPE_NAME_INVALID_LENGTH", "TYPE_PATH_AND_NAME_INVALID_LENGTH", "DATABASE_NOT_FOUND", "DATABASE_NAME_INVALID_LENGTH", "DATABASE_NAME_SPACES_ONLY", "DATABASE_USERNAME_INVALID_LENGTH", "DATABASE_PASSWORD_IS_EMPTY", "DATABASE_PORT_IS_INVALID", "DATABASE_HOST_AND_PORT_INVALID_LENGTH", "DATABASE_SCHEMA_INVALID_LENGTH", "DATABASE_MAX_ACTIVE_CONNECTIONS_COUNT_IS_INVALID", "DATABASE_MAX_IDLE_CONNECTIONS_COUNT_IS_INVALID", "UNABLE_TO_CONNECT_TO_DATABASE_NAME", "DATABASE_UNABLE_TO_CONNECT", "DATABASE_UNABLE_TO_CONNECT_ACCESS_DENIED", "DATABASE_UNABLE_TO_CONNECT_UNKNOWN_DB", "DATABASE_UNABLE_TO_CONNECT_MISSING_DRIVER", "DATABASE_MISSING_JDBC_DRIVER", "DATABASE_JDBC_DRIVER_ID_MUST_BE_POSITIVE", "DATABASE_JDBC_DRIVER_NAME_INVALID_LENGTH", "DATABASE_UNABLE_TO_GET_CONNECTION", "DATABASE_UNABLE_TO_GET_CONNECTION_INFO_NO_CLUSTER", "DATABASE_UNABLE_TO_GET_CONNECTION_INFO", "DATABASE_UNABLE_TO_ACCESS_TYPE", "DATABASE_TYPE_ID_MUST_BE_POSITIVE", "DATABASE_TYPE_IS_EMPTY", "DATABASE_TYPE_ID_IS_INCORRECT", "DATABASE_TYPE_NAME_INVALID_LENGTH", "DATABASE_TYPE_INVALID_LENGTH", "DATABASE_TYPE_NOT_FOUND", "DATABASE_TYPE_NOT_FOUND_FOR_NAME", "DATABASE_TYPE_ALREADY_EXISTS", "DATABASE_TYPE_SQL_FLAVOR_IS_INVALID", "DATABASE_DRIVER_CLASS_INVALID_LENGTH", "DATABASE_DRIVER_NOT_FOUND", "DATABASE_DRIVER_NAME_ALREADY_EXISTS", "DATABASE_JAR_DRIVER_UPLOAD_FORBIDDEN", "DATABASE_JAR_DRIVER_DELETE_FORBIDDEN", "DATABASE_URL_TEMPLATE_INVALID_LENGTH", "DATABASE_ID_MUST_BE_POSITIVE", "DATABASE_GENERIC_SQL_EXCEPTION", "DATABASE_USER_NOT_EXISTS", "DATABASE_CONNECTION_SQL_TIMEOUT_ERROR", "DATABASE_CONNECTION_SQL_ERROR", "DATABASE_CONNECTION_GENERIC_RUNTIME_ERROR", "DATABASE_CONNECTION_UNKNOWN_PLATFORM", "DATABASE_CONNECTION_GENERIC_ERROR", "MAIL_ACCOUNT_NOT_FOUND", "MAIL_ACCOUNT_ID_MUST_BE_POSITIVE", "MAIL_ACCOUNT_NAME_IS_EMPTY", "MAIL_ACCOUNT_NAME_INVALID_LENGTH", "MAIL_ACCOUNT_DESCRIPTION_INVALID_LENGTH", "MAIL_ACCOUNT_UNSUPPORTED_PROTOCOL", "MAIL_ACCOUNT_USERNAME_IS_EMPTY", "MAIL_ACCOUNT_UNSUPPORTED_AUTH_TYPE", "MAIL_ACCOUNT_AUTH_TYPE_REQUIRED_ACCESS_KEY", "MAIL_ACCOUNT_IS_IN_USE", "MAIL_ACCOUNT_NAME_EXISTS", "MAIL_ACCOUNT_EXISTS", "MAIL_ACCOUNT_PROPERTIES_NOT_FOUND", "MAIL_ACCOUNT_ATTRIBUTES_IS_EMPTY", "MAIL_ACCOUNT_ATTRIBUTE_NOT_FOUND", "MAIL_ACCOUNT_ATTRIBUTE_IS_EMPTY", "MAIL_ACCOUNT_ATTRIBUTE_PROPERTY_IS_EMPTY", "MAIL_ACCOUNT_TEMPLATE_NOT_FOUND", "MAIL_ACCOUNT_TEMPLATE_ID_MUST_BE_POSITIVE", "MAIL_ACCOUNT_IDS_ARE_NOT_DEFINED", "MAIL_ACCOUNT_UNABLE_TO_DELETE", "MAIL_ACCOUNT_CONNECTION_FAILED", "MAIL_ACCOUNT_CONNECTION_FAILED_NO_REASON", "MAIL_TRIGGER_NOT_FOUND", "MAIL_TRIGGER_IDS_IS_EMPTY", "MAIL_TRIGGER_ID_MUST_BE_POSITIVE", "MAIL_TRIGGER_SOME_IDS_ARE_INCORRECT", "MAIL_TRIGGER_EMAIL_FOLDER_NOT_DEFINED", "MAIL_TRIGGER_NAME_INVALID_LENGTH", "MAIL_TRIGGER_NAME_MUST_NOT_BE_EMPTY", "MAIL_TRIGGER_ROBOT_NOT_FOUND", "MAIL_TRIGGER_ROBOT_INCOMPATIBLE", "MAIL_TRIGGER_MAIL_ACCOUNT_NO_ATTACHED", "MAIL_TRIGGER_MAIL_ACCOUNT_PROTOCOL_NOT_DEFINED", "MAIL_TRIGGER_MAIL_ACCOUNT_USERNAME_NOT_DEFINED", "MAIL_TRIGGER_MAIL_ACCOUNT_ATTRIBUTES_NOT_DEFINED", "MAIL_TRIGGER_MAIL_ACCOUNT_AUTH_NOT_DEFINED", "MAIL_TRIGGER_MAIL_ACCOUNT_AUTH_NOT_SUPPORTED", "MAIL_TRIGGER_MAIL_SERVER_AUTH_REQUIRED_ACCESS_KEY", "MAIL_TRIGGER_NOT_SUPPORTED_FEATURE", "MAIL_TRIGGER_TEST_FAILED", "MAIL_TRIGGER_TEST_FAILED_NO_REASON", "MAIL_TRIGGER_EXECUTION_NOT_FOUND", "MAIL_TRIGGER_NO_AVAILABLE_MAIL_ACCOUNT", "MAIL_TRIGGER_ALREADY_EXISTS", "MAIL_TRIGGER_TIMEOUT_INVALID", "IO_FILE_ALREADY_EXISTS_IN_DESTINATION_FOLDER", "IO_PATH_LENGTH_EXCEED_MAX_LIMIT", "PERSONALIZATION_NAME_IS_EMPTY", "PERSONALIZATION_NAME_INVALID_LENGTH", "PERSONALIZATION_NAME_NOT_EXISTS", "PERSONALIZATION_VALUE_IS_EMPTY", "PERSONALIZATION_ITEMS_ARE_NOT_DEFINED", "PERSONALIZATION_ITEM_NAMES_ARE_NOT_UNIQUE", "VALIDATION_METHOD_PARAMETER_IS_NULL", "VALIDATION_METHOD_PARAMETER_MUST_BE_POSITIVE", "VALIDATION_PAGE_REQUEST_IS_NULL", "VALIDATION_FILE_IS_INVALID", "VALIDATION_PAGE_SIZE_IS_TOO_SMALL", "VALIDATION_FIELD_HAS_ILLEGAL_LT_CHARACTER", "VALIDATION_FIELD_HAS_ILLEGAL_GT_CHARACTER", "VALIDATION_FIELD_HAS_ILLEGAL_QUOTE_CHARACTER", "VALIDATION_ILLEGAL_CHARACTERS", "VALIDATION_PREFIX_IS_EMPTY", "VALIDATION_PREFIX_TOO_SHORT", "PASSWORD_UNABLE_TO_DECRYPT", "PASSWORD_UNABLE_TO_ENCRYPT", "CONSUMER_SECRET_UNABLE_TO_DECRYPT", "CONSUMER_SECRET_UNABLE_TO_ENCRYPT", "ACCESS_TOKEN_UNABLE_TO_DECRYPT", "ACCESS_TOKEN_UNABLE_TO_ENCRYPT", "REFRESH_TOKEN_UNABLE_TO_DECRYPT", "REFRESH_TOKEN_UNABLE_TO_ENCRYPT", "ACCESS_TOKEN_SECRET_UNABLE_TO_DECRYPT", "ACCESS_TOKEN_SECRET_UNABLE_TO_ENCRYPT", "COMMIT_MESSAGE_INVALID_LENGTH", "SECURITY_UNAUTHORIZED", "SECURITY_BAD_CREDENTIALS", "SECURITY_AUTHENTICATION_FAILED", "SECURITY_AUTHENTICATION_IS_DISABLED" ]
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "parameters" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "httpCode" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "ApiMessageResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "parameters" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "reason" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PASSWORD_CHANGED", "PASSWORD_IS_MANDATORY", "ALL_CLUSTERS", "DELETED_CLUSTER", "NO_CLUSTERS", "MAPPINGS", "NO_CLUSTERS_DAS", "CLUSTER_PREFIX_DB", "CLUSTER_PREFIX_DAS", "RESOURCES_FOUND", "SUCCESSFULLY_COMPLETED", "ROBOTS_DELETED", "ROBOTS_PARTIALLY_DELETED", "ROBOT_STARTED", "TRIGGERS_USER_MAPPINGS_DELETED", "TRIGGERS_LABELS_MAPPINGS_DELETED", "TRIGGER_SUSPENDED", "TRIGGER_ACTIVATED", "FOUND_TRIGGERS_SINGLE", "FOUND_TRIGGERS", "SQL_ROLLBACK_FAILED", "SQL_STATEMENT_FAILED", "SQL_STATEMENT_SUCCESS", "SQL_SUCCESSFULLY_EXECUTED", "SQL_EXECUTION_FAILED", "SQL_PARTIALLY_EXECUTED", "TYPES_DELETED", "TYPES_PARTIALLY_DELETION", "SNIPPETS_DELETED", "SNIPPETS_PARTIALLY_DELETED", "MAIL_TRIGGERS_DELETED", "DATA_TYPE_NOT_SUPPORTED", "ROOT_FOLDER", "SU_USERNAME_CHANGED", "LICENSE_ASSIGNING_LESS_UNITS", "CLUSTER_UNITS_ASSIGMENT_HAS_BEEN_UPDATED" ]
        },
        "httpCode" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "AppPermissions" : {
      "type" : "object",
      "properties" : {
        "kappletSchedulesCreator" : {
          "type" : "boolean"
        },
        "kappletAdministrator" : {
          "type" : "boolean"
        },
        "kappletUser" : {
          "type" : "boolean"
        }
      }
    },
    "ApplicationEntityDisplayData" : {
      "type" : "object",
      "properties" : {
        "locationCode" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executable" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "executableName" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "device" : {
          "type" : "string"
        },
        "urlHost" : {
          "type" : "string"
        }
      }
    },
    "ApplicationNodeDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "local" : {
          "type" : "boolean"
        },
        "interface" : {
          "type" : "string"
        },
        "applicationNodeStatus" : {
          "type" : "string",
          "enum" : [ "RUNNING", "SHUTTING_DOWN", "SHUTDOWN", "UNKNOWN" ]
        }
      },
      "description" : "Class representing a  Application node in a Cluster."
    },
    "BackupRestoreModeDTO" : {
      "type" : "object",
      "properties" : {
        "localizedMessage" : {
          "type" : "string"
        },
        "backupRestoreModeMode" : {
          "type" : "string",
          "enum" : [ "MERGE", "RESET" ]
        }
      }
    },
    "BaseGeneralSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "passwordRecoveryEnabled" : {
          "type" : "boolean"
        },
        "localDocumentation" : {
          "type" : "boolean"
        },
        "localDocumentationBaseUrl" : {
          "type" : "string"
        },
        "clusterPurge" : {
          "type" : "boolean"
        },
        "baseUrl" : {
          "type" : "string"
        },
        "fromEmail" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a MC general settings Data"
    },
    "CatalogNavigationDTO" : {
      "type" : "object",
      "properties" : {
        "catalogName" : {
          "type" : "string"
        },
        "schemaName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Catalog data."
    },
    "ClientConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "useSamlSingleLogout" : {
          "type" : "boolean"
        },
        "authenticationMode" : {
          "type" : "string",
          "enum" : [ "INTERNAL", "LDAP", "SITE_MINDER", "WEB_SPHERE", "SAML" ]
        },
        "userCreationSupported" : {
          "type" : "boolean"
        },
        "licenseDetails" : {
          "$ref" : "#/definitions/LicenseDetailsDTO"
        },
        "embedded" : {
          "type" : "boolean"
        },
        "cyberArkMode" : {
          "type" : "boolean"
        }
      }
    },
    "ClientInitialData" : {
      "type" : "object",
      "properties" : {
        "permissionChecker" : {
          "$ref" : "#/definitions/PermissionCheckerDTO"
        },
        "clientConfiguration" : {
          "$ref" : "#/definitions/ClientConfigurationDTO"
        },
        "userInfo" : {
          "$ref" : "#/definitions/UserDTO"
        },
        "projects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectDTO"
          }
        }
      }
    },
    "ClusterDTO" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "type" : "string"
        },
        "invalidSettings" : {
          "type" : "boolean"
        },
        "profilingEnabled" : {
          "type" : "boolean"
        },
        "assignedLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numServersOnline" : {
          "type" : "integer",
          "format" : "int32"
        },
        "unAppliedSettings" : {
          "type" : "boolean"
        },
        "invalidSettingsMessage" : {
          "type" : "string"
        },
        "runtimeInfoSupportedByAllServers" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterStatus" : {
          "type" : "string",
          "enum" : [ "INIT", "SHUTTING_DOWN", "RUNNING", "PAUSE", "INVALID_SETTINGS", "SENDING_TO_ROBOSERVERS", "FINISH_SCHEDULES", "FINISH_RUNNING", "STOP_ALL", "UNKNOWN" ]
        },
        "ssl" : {
          "type" : "boolean"
        },
        "maxQueue" : {
          "type" : "string"
        },
        "uniqueKey" : {
          "type" : "string"
        },
        "reportedLicense" : {
          "type" : "string"
        },
        "queuedRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runRobotAmount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runningRobots" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "ClusterDatabaseSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "maxActiveConnections" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maxIdleConnections" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Database settings Data."
    },
    "ClusterGeneralSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "licenseDistribution" : {
          "type" : "boolean"
        },
        "versionList" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "thresholdRSVersion" : {
          "type" : "string"
        }
      }
    },
    "ClusterInfo" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Cluster name"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Cluster id"
        }
      },
      "description" : "Cluster identification information"
    },
    "ClusterLoggingSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "logToLog4j" : {
          "type" : "boolean"
        },
        "dbLogRobotInput" : {
          "type" : "boolean"
        },
        "toAddress" : {
          "type" : "string"
        },
        "fromAddress" : {
          "type" : "string"
        },
        "logToEmail" : {
          "type" : "boolean"
        },
        "logToDb" : {
          "type" : "boolean"
        },
        "log4jLogRobotInput" : {
          "type" : "boolean"
        }
      }
    },
    "ClusterProfilingSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "fileOutputTargetFile" : {
          "type" : "string"
        },
        "fileOutputTargetAppend" : {
          "type" : "boolean"
        },
        "outputTarget" : {
          "type" : "string",
          "enum" : [ "FILE", "CONSOLE", "LOG" ]
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "outputType" : {
          "type" : "string",
          "enum" : [ "DETAILED", "SUMMARY" ]
        },
        "logPageUrl" : {
          "type" : "boolean"
        }
      }
    },
    "ClusterProxyServerSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "excludedHostNames" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hostName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "portNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ClusterRobotExecutionSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "maxQueuedRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "disableMaxQueuedRobots" : {
          "type" : "boolean"
        },
        "maxConcurrentRobots" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ClusterSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "profilingSettings" : {
          "$ref" : "#/definitions/ClusterProfilingSettingsDTO"
        },
        "databaseSettings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterDatabaseSettingsDTO"
          }
        },
        "proxyServerSettings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterProxyServerSettingsDTO"
          }
        },
        "robotExecutionSettings" : {
          "$ref" : "#/definitions/ClusterRobotExecutionSettingsDTO"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "generalSettings" : {
          "$ref" : "#/definitions/ClusterGeneralSettingsDTO"
        },
        "loggingSettings" : {
          "$ref" : "#/definitions/ClusterLoggingSettingsDTO"
        }
      }
    },
    "ClusterStateApplyModeDTO" : {
      "type" : "object",
      "properties" : {
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "applyMode" : {
          "type" : "string",
          "enum" : [ "FINISH_SCHEDULES", "FINISH_RUNNING", "STOP_ALL" ]
        }
      },
      "description" : "Cluster apply settings mode request"
    },
    "ClusterStateEditDTO" : {
      "type" : "object",
      "properties" : {
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterStateId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a cluster state edit request. "
    },
    "ClusterToDSDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "selected" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a Cluster to DS Data."
    },
    "ClustersAndSettingsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "createAndDropObjectTables" : {
          "type" : "boolean"
        },
        "accessAllDesktopAutomations" : {
          "type" : "boolean"
        },
        "canEditDeviceMapping" : {
          "type" : "boolean"
        },
        "accessStudioDesktopAutomations" : {
          "type" : "boolean"
        },
        "canAddRoboServers" : {
          "type" : "boolean"
        },
        "canRetrieveProcessDiscoveryConfiguration" : {
          "type" : "boolean"
        },
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        },
        "canLogin" : {
          "type" : "boolean"
        }
      }
    },
    "CsrfToken" : {
      "type" : "object",
      "properties" : {
        "headerName" : {
          "type" : "string"
        },
        "parameterName" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "CyberArkAdmission" : {
      "type" : "object",
      "required" : [ "accountName", "applicationId", "projectId", "projectName", "restrictionType", "safe", "targetSystem", "userName" ],
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "Password store user name"
        },
        "targetSystem" : {
          "type" : "string",
          "position" : 1,
          "description" : "Password store target system"
        },
        "safe" : {
          "type" : "string",
          "position" : 2,
          "description" : "CyberArk safe name"
        },
        "accountName" : {
          "type" : "string",
          "position" : 3,
          "description" : "CyberArk account name"
        },
        "applicationId" : {
          "type" : "string",
          "position" : 4,
          "description" : "CyberArk application id"
        },
        "projectName" : {
          "type" : "string",
          "position" : 5,
          "description" : "Password store project name"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64",
          "position" : 6,
          "description" : "Password store project id",
          "minimum" : 0,
          "exclusiveMaximum" : true
        },
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "CyberArk admission"
    },
    "CyberArkConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "iisApplicationName" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "certificate" : {
          "type" : "string"
        },
        "certificateName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Cyber Ark Configuration DTO."
    },
    "CyberArkEntryDTO" : {
      "type" : "object",
      "properties" : {
        "applicationName" : {
          "type" : "string"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "safe" : {
          "type" : "string"
        },
        "accountName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetSystem" : {
          "type" : "string"
        },
        "tokenIdentifier" : {
          "type" : "string"
        },
        "assigned" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a CyberArk Store response. "
    },
    "CyberArkKeyStoreDTO" : {
      "type" : "object",
      "properties" : {
        "base64EncodedBytes" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fileName" : {
          "type" : "string"
        },
        "keyStoreName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Cyber Ark Key Store DTO."
    },
    "CyberArkKeyStoreNameDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "keyStoreName" : {
          "type" : "string"
        }
      },
      "description" : "Class containing a Cyber Ark Key Store Name."
    },
    "CyberArkStoreRequest" : {
      "type" : "object",
      "properties" : {
        "applicationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "safe" : {
          "type" : "string"
        },
        "accountName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetSystem" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Cyber Ark Store request."
    },
    "DasMessageDisplayData" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "labels" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "accountName" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "loggedTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dasId" : {
          "type" : "string"
        },
        "dasTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "logType" : {
          "type" : "string"
        }
      }
    },
    "DataViewExportProgressDTO" : {
      "type" : "object",
      "properties" : {
        "completion" : {
          "type" : "number",
          "format" : "double"
        },
        "progressMessage" : {
          "type" : "string"
        },
        "infoMessages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ImportMessage"
          }
        },
        "adminUserName" : {
          "type" : "string"
        },
        "projectsToRename" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "exception" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "done" : {
          "type" : "boolean"
        },
        "header" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Data View Export Progress data."
    },
    "DataViewPermissions" : {
      "type" : "object",
      "properties" : {
        "viewData" : {
          "type" : "boolean"
        },
        "exportData" : {
          "type" : "boolean"
        },
        "deleteData" : {
          "type" : "boolean"
        }
      }
    },
    "DatabaseAdmission" : {
      "type" : "object",
      "required" : [ "cluster", "host", "name", "restrictionType", "schema", "type", "userName" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Database name"
        },
        "host" : {
          "type" : "string",
          "position" : 1,
          "description" : "Database host"
        },
        "schema" : {
          "type" : "string",
          "position" : 2,
          "description" : "Database schema name"
        },
        "type" : {
          "type" : "string",
          "position" : 3,
          "description" : "Database type"
        },
        "userName" : {
          "type" : "string",
          "position" : 4,
          "description" : "Database user name"
        },
        "cluster" : {
          "type" : "string",
          "position" : 5,
          "description" : "Database cluster name"
        },
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "Database admission"
    },
    "DatabaseData" : {
      "type" : "object",
      "properties" : {
        "schemaName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DatabaseDriverInformation" : {
      "type" : "object",
      "properties" : {
        "jarFileUploadAllowedForUser" : {
          "type" : "boolean"
        },
        "bytes" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fileName" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "description" : "Class representing a Database Driver."
    },
    "DatabaseMappingDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "databaseId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterName" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        }
      }
    },
    "DatabaseMappingTabPermissions" : {
      "type" : "object",
      "properties" : {
        "delete" : {
          "type" : "boolean"
        },
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "DatabaseSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Database settings Data."
    },
    "DatabaseStructureDTO" : {
      "type" : "object",
      "properties" : {
        "tableName" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "mappingName" : {
          "type" : "string"
        },
        "catalog" : {
          "$ref" : "#/definitions/CatalogNavigationDTO"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Database structure data."
    },
    "DatabaseTypeDTO" : {
      "type" : "object",
      "properties" : {
        "typeName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "urlTemplate" : {
          "type" : "string"
        },
        "driverClass" : {
          "type" : "string"
        },
        "sqlFlavor" : {
          "type" : "string"
        },
        "dbOptions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Class representing a Database type Information."
    },
    "DeleteByNamesRequest" : {
      "type" : "object",
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Class representing a delete by names request."
    },
    "DeleteItemCountResponse" : {
      "type" : "object",
      "properties" : {
        "deletedItemsCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "failuresCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DeleteItemRequest" : {
      "type" : "object",
      "properties" : {
        "deleteEmptyFolders" : {
          "type" : "boolean"
        },
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "DeleteRowsTableRequest" : {
      "type" : "object",
      "properties" : {
        "keys" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dbMappingName" : {
          "type" : "string"
        },
        "catalogName" : {
          "type" : "string"
        },
        "schemaName" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "searchParameters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "secondFilterValue" : {
          "type" : "string"
        },
        "filterValue" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderBy" : {
          "type" : "string"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asc" : {
          "type" : "boolean"
        },
        "filterFieldName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Data View delete request. "
    },
    "DeleteStatusResponse" : {
      "type" : "object",
      "properties" : {
        "notFoundIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "deletedItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "notPermittedToDeleteIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "DeleteStatusStringResponse" : {
      "type" : "object",
      "properties" : {
        "notFoundIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deletedItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "notPermittedToDeleteIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DesktopAutomAdmission" : {
      "type" : "object",
      "required" : [ "cluster", "domain", "identifier", "labels", "online", "restrictionType", "userName", "version" ],
      "properties" : {
        "identifier" : {
          "type" : "string",
          "description" : "DAS url identifier"
        },
        "labels" : {
          "type" : "string",
          "position" : 1,
          "description" : "DAS labels"
        },
        "userName" : {
          "type" : "string",
          "position" : 2,
          "description" : "DAS user name"
        },
        "domain" : {
          "type" : "string",
          "position" : 3,
          "description" : "DAS user domain"
        },
        "cluster" : {
          "type" : "string",
          "position" : 4,
          "description" : "DAS cluster name"
        },
        "version" : {
          "type" : "string",
          "position" : 5,
          "description" : "DAS version"
        },
        "online" : {
          "type" : "boolean",
          "position" : 6,
          "description" : "Is DAS currently online"
        },
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "Desktop automation service admission"
    },
    "DeviceMappingDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "labels" : {
          "type" : "string"
        }
      },
      "description" : "DTO to show device mapping on client"
    },
    "DocumentationResponse" : {
      "type" : "object",
      "properties" : {
        "documentationJSON" : {
          "type" : "string"
        },
        "requestId" : {
          "type" : "string"
        },
        "robotUrl" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "DsSharedSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "dbClusterToDsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterToDSDTO"
          }
        },
        "dasClusterToDsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClusterToDSDTO"
          }
        }
      },
      "description" : "Setting of accessible to DS clusters for databases and DAS retrieval."
    },
    "DsSharedSettingsReqDTO" : {
      "type" : "object",
      "properties" : {
        "dbClusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dasClusterId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Saving request for setting of accessible to DS clusters"
    },
    "EditTriggerMappingDTO" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "string"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "triggerId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Trigger Label or User Mapping edit request."
    },
    "EmailEncryptionTypeDTO" : {
      "type" : "object",
      "properties" : {
        "encryptionType" : {
          "type" : "string",
          "enum" : [ "NONE", "TLS", "SMTPS" ]
        },
        "localizedMessage" : {
          "type" : "string"
        }
      }
    },
    "EmailRobotTriggerDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "string",
          "enum" : [ "MINIMUM", "LOW", "MEDIUM", "HIGH", "MAXIMUM" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "mailServerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        },
        "robotInputParam" : {
          "type" : "string"
        },
        "mailFolder" : {
          "type" : "string"
        }
      }
    },
    "EmailTriggersTabPermissions" : {
      "type" : "object",
      "properties" : {
        "delete" : {
          "type" : "boolean"
        },
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "ExecuteSqlRequest" : {
      "type" : "object",
      "properties" : {
        "typeIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "databaseMappingId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "generateDropTable" : {
          "type" : "boolean"
        }
      }
    },
    "ExportDataDTO" : {
      "type" : "object",
      "properties" : {
        "catalogName" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fileName" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "format" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing an Export Document data."
    },
    "ExportFormatDTO" : {
      "type" : "object",
      "properties" : {
        "exportFormat" : {
          "type" : "string",
          "enum" : [ "CSV", "XML", "EXCEL", "TSV" ]
        },
        "localizedMessage" : {
          "type" : "string"
        }
      }
    },
    "FilterRequest" : {
      "type" : "object",
      "properties" : {
        "filters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Class representing a Filter request."
    },
    "GroupDTO" : {
      "type" : "object",
      "properties" : {
        "usedInProjects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "numberOfUsers" : {
          "type" : "integer",
          "format" : "int64"
        },
        "adminGroup" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "GroupToRoleMappingData" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupName" : {
          "type" : "string"
        },
        "roleName" : {
          "type" : "string"
        }
      }
    },
    "ImportMessage" : {
      "type" : "object",
      "properties" : {
        "_heading" : {
          "type" : "string"
        },
        "_message" : {
          "type" : "string"
        },
        "_warning" : {
          "type" : "boolean"
        },
        "_size" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ImportProgressDTO" : {
      "type" : "object",
      "properties" : {
        "stepName" : {
          "type" : "string"
        },
        "completion" : {
          "type" : "number",
          "format" : "double"
        },
        "stepStatus" : {
          "type" : "string"
        },
        "projectsToRename" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "done" : {
          "type" : "boolean"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ImportProgressMessageDTO"
          }
        }
      }
    },
    "ImportProgressMessageDTO" : {
      "type" : "object",
      "properties" : {
        "heading" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "warning" : {
          "type" : "boolean"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "ItemIdDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "JsonResponse" : {
      "type" : "object",
      "properties" : {
        "resultCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        },
        "payload" : {
          "$ref" : "#/definitions/Serializable"
        },
        "success" : {
          "type" : "boolean"
        }
      }
    },
    "JsonResponseString" : {
      "type" : "object",
      "properties" : {
        "resultCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        },
        "payload" : {
          "type" : "string"
        },
        "success" : {
          "type" : "boolean"
        }
      }
    },
    "KTAConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "internalId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a KTA Configuration."
    },
    "KTAConfigurationPermissions" : {
      "type" : "object",
      "properties" : {
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "LicenseAssignmentClusterDTO" : {
      "type" : "object",
      "properties" : {
        "assignedLicenseUnit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "production" : {
          "type" : "boolean"
        },
        "clusterName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a s License Assignment Cluster details."
    },
    "LicenseAssignmentDTO" : {
      "type" : "object",
      "properties" : {
        "totalProductionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalNonProductionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "usedNonProductionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "usedProductionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasNonProduction" : {
          "type" : "boolean"
        },
        "hasProduction" : {
          "type" : "boolean"
        },
        "licenseAssignmentClusterInfos" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LicenseAssignmentClusterDTO"
          }
        },
        "licenseModelName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a License Assignment Information."
    },
    "LicenseAssignmentUserDTO" : {
      "type" : "object",
      "properties" : {
        "userName" : {
          "type" : "string"
        },
        "lastIpAddress" : {
          "type" : "string"
        }
      }
    },
    "LicenseDetailsDTO" : {
      "type" : "object",
      "properties" : {
        "licenseConfigurationSet" : {
          "type" : "boolean"
        },
        "licenseProperties" : {
          "$ref" : "#/definitions/LicensePropertiesDTO"
        },
        "licenseAgreement" : {
          "type" : "string"
        },
        "immutable" : {
          "type" : "boolean"
        },
        "licenseError" : {
          "type" : "string"
        },
        "noLicense" : {
          "type" : "boolean"
        }
      }
    },
    "LicenseInformationDTO" : {
      "type" : "object",
      "properties" : {
        "nonProductionKey" : {
          "type" : "string"
        },
        "immutable" : {
          "type" : "boolean"
        },
        "licenseCompany" : {
          "type" : "string"
        },
        "productionKey" : {
          "type" : "string"
        },
        "licenseEmail" : {
          "type" : "string"
        },
        "licenseName" : {
          "type" : "string"
        }
      }
    },
    "LicensePropertiesDTO" : {
      "type" : "object",
      "properties" : {
        "licenseModelName" : {
          "type" : "string"
        },
        "nonProductionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "productionLicenseUnits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasDeviceAutomation" : {
          "type" : "boolean"
        },
        "hasHighAvailability" : {
          "type" : "boolean"
        },
        "designStudioSeats" : {
          "type" : "integer",
          "format" : "int32"
        },
        "expirationWarning" : {
          "type" : "string"
        },
        "hasAnalytics" : {
          "type" : "boolean"
        },
        "edition" : {
          "type" : "string"
        },
        "maxRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numUniqueUsers" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requireOEMKey" : {
          "type" : "boolean"
        },
        "restartMessage" : {
          "type" : "string"
        },
        "maxSchedules" : {
          "type" : "integer",
          "format" : "int32"
        },
        "creEnabled" : {
          "type" : "boolean"
        },
        "expirationDate" : {
          "type" : "string"
        },
        "developer" : {
          "type" : "boolean"
        },
        "maxRobotsPerDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "localhostOnly" : {
          "type" : "boolean"
        }
      }
    },
    "LogDatabaseSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "maxMessagesRobotRunThreshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "recordDaysOfKeep" : {
          "type" : "integer",
          "format" : "int32"
        },
        "useLogDatabase" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Log Database setting Data."
    },
    "LogTabPermissions" : {
      "type" : "object",
      "properties" : {
        "deleteServerMessage" : {
          "type" : "boolean"
        },
        "viewOrphanProjects" : {
          "type" : "boolean"
        },
        "viewScheduleMessageLog" : {
          "type" : "boolean"
        },
        "deleteScheduleRunLog" : {
          "type" : "boolean"
        },
        "deleteRobotMessage" : {
          "type" : "boolean"
        },
        "viewRobotMessageLog" : {
          "type" : "boolean"
        },
        "deleteApplicationEntity" : {
          "type" : "boolean"
        },
        "viewTaskMessageLog" : {
          "type" : "boolean"
        },
        "viewApplicationsLog" : {
          "type" : "boolean"
        },
        "viewScheduleRunLog" : {
          "type" : "boolean"
        },
        "deleteScheduleMessageLog" : {
          "type" : "boolean"
        },
        "deleteTaskMessage" : {
          "type" : "boolean"
        },
        "viewRobotRunLog" : {
          "type" : "boolean"
        },
        "viewDASLog" : {
          "type" : "boolean"
        },
        "deleteDASLog" : {
          "type" : "boolean"
        },
        "deleteRobotRun" : {
          "type" : "boolean"
        },
        "viewRobotsLog" : {
          "type" : "boolean"
        },
        "viewServerLog" : {
          "type" : "boolean"
        }
      }
    },
    "MailAccountAttributeDTO" : {
      "type" : "object",
      "properties" : {
        "readonly" : {
          "type" : "boolean"
        },
        "required" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "BOOLEAN", "PASSWORD", "INTEGER", "NUMBER", "EMAIL", "DICTIONARY" ]
        },
        "visible" : {
          "type" : "boolean"
        }
      },
      "description" : "Mail account attribute"
    },
    "MailAccountDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MailAccountAttributeDTO"
          }
        },
        "enabled" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "A mail server object with attributes"
    },
    "MailAccountTemplateDTO" : {
      "type" : "object",
      "properties" : {
        "attributesDictionaries" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MailAccountAttributeDTO"
          }
        },
        "enabled" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "A mail server object with attributes"
    },
    "MailServerPermissions" : {
      "type" : "object",
      "properties" : {
        "delete" : {
          "type" : "boolean"
        },
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "MailTriggerPermissions" : {
      "type" : "object",
      "properties" : {
        "delete" : {
          "type" : "boolean"
        },
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "MatchingStrategyDTO" : {
      "type" : "object",
      "properties" : {
        "localizedMessage" : {
          "type" : "string"
        },
        "matchingStrategy" : {
          "type" : "string",
          "enum" : [ "START_WITH", "CONTAINS", "MATCHES" ]
        }
      }
    },
    "McVcsConfiguration" : {
      "type" : "object",
      "properties" : {
        "serverTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vcsProjectConfigurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VcsProjectConfiguration"
          }
        }
      }
    },
    "MissingDependenciesDTO" : {
      "type" : "object",
      "properties" : {
        "missedTypeNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "missedSnippetNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "missedRobotNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "OAuthAccessTokens" : {
      "type" : "object",
      "properties" : {
        "accessTokenSecret" : {
          "type" : "string"
        },
        "accessToken" : {
          "type" : "string"
        },
        "refreshToken" : {
          "type" : "string"
        }
      }
    },
    "OAuthAcquireAuthorizationUrlDTO" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "tenant" : {
          "type" : "string"
        }
      }
    },
    "OAuthApplicationDTO" : {
      "type" : "object",
      "properties" : {
        "projectName" : {
          "type" : "string"
        },
        "appId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string"
        },
        "appName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "serviceProvider" : {
          "type" : "string"
        },
        "consumerKey" : {
          "type" : "string"
        },
        "consumerSecret" : {
          "type" : "string"
        },
        "callbackURL" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a OAuth Application Data."
    },
    "OAuthApplicationShortDTO" : {
      "type" : "object",
      "properties" : {
        "commitMessage" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string"
        },
        "appName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "serviceProvider" : {
          "type" : "string"
        },
        "consumerKey" : {
          "type" : "string"
        },
        "consumerSecret" : {
          "type" : "string"
        },
        "callbackURL" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a  OAuth Application add request. "
    },
    "OAuthAuthorizationUrlDTO" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string"
        }
      }
    },
    "OAuthTabPermissions" : {
      "type" : "object",
      "properties" : {
        "oauthTab" : {
          "type" : "boolean"
        }
      }
    },
    "OAuthUserDTO" : {
      "type" : "object",
      "properties" : {
        "applicationId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accessKey" : {
          "type" : "string"
        },
        "accessSecret" : {
          "type" : "string"
        },
        "refreshToken" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "applicationName" : {
          "type" : "string"
        }
      }
    },
    "OAuthUserShortDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "applicationName" : {
          "type" : "string"
        }
      }
    },
    "ObjectDatabase" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "databaseType" : {
          "type" : "string"
        }
      }
    },
    "PassStoreAdmission" : {
      "type" : "object",
      "required" : [ "projectId", "projectName", "restrictionType", "targetSystem", "userName" ],
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "Password store user name"
        },
        "targetSystem" : {
          "type" : "string",
          "position" : 1,
          "description" : "Password store target system"
        },
        "projectName" : {
          "type" : "string",
          "position" : 5,
          "description" : "Password store project name"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64",
          "position" : 6,
          "description" : "Password store project id",
          "minimum" : 0,
          "exclusiveMaximum" : true
        },
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "Password store admission"
    },
    "PasswordResetRequest" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "newPassword" : {
          "type" : "string"
        },
        "oldPassword" : {
          "type" : "string"
        },
        "sendEmail" : {
          "type" : "boolean"
        }
      }
    },
    "PasswordStoreAccessRequest" : {
      "type" : "object",
      "properties" : {
        "entryIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cyberArk" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Password Store Access update request."
    },
    "PasswordStoreEntryDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetSystem" : {
          "type" : "string"
        },
        "tokenIdentifier" : {
          "type" : "string"
        },
        "assigned" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a Password Store response. "
    },
    "PasswordStoreRequest" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetSystem" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Password Store request."
    },
    "PasswordStoreTabPermissions" : {
      "type" : "object",
      "properties" : {
        "modify" : {
          "type" : "boolean"
        },
        "extractPassword" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "PermissionCheckerDTO" : {
      "type" : "object",
      "properties" : {
        "projectPermissions" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Permissions"
          }
        },
        "globalPermissions" : {
          "$ref" : "#/definitions/Permissions"
        },
        "version" : {
          "type" : "string"
        },
        "admin" : {
          "type" : "boolean"
        }
      }
    },
    "Permissions" : {
      "type" : "object",
      "properties" : {
        "oauthTabPermissions" : {
          "$ref" : "#/definitions/OAuthTabPermissions"
        },
        "tagMappingsTabPermissions" : {
          "$ref" : "#/definitions/TagMappingsTabPermissions"
        },
        "getoAuthTabPermissions" : {
          "$ref" : "#/definitions/OAuthTabPermissions"
        },
        "mailTriggerPermissions" : {
          "$ref" : "#/definitions/MailTriggerPermissions"
        },
        "logTabPermissions" : {
          "$ref" : "#/definitions/LogTabPermissions"
        },
        "snippetsTabPermissions" : {
          "$ref" : "#/definitions/SnippetsTabPermissions"
        },
        "schedulesTabPermissions" : {
          "$ref" : "#/definitions/SchedulesTabPermissions"
        },
        "robotsTabPermissions" : {
          "$ref" : "#/definitions/RobotsTabPermissions"
        },
        "passwordStoreTabPermissions" : {
          "$ref" : "#/definitions/PasswordStoreTabPermissions"
        },
        "dataViewPermissions" : {
          "$ref" : "#/definitions/DataViewPermissions"
        },
        "taskViewTabPermissions" : {
          "$ref" : "#/definitions/TaskViewTabPermissions"
        },
        "databaseMappingTabPermissions" : {
          "$ref" : "#/definitions/DatabaseMappingTabPermissions"
        },
        "emailTriggersTabPermissions" : {
          "$ref" : "#/definitions/EmailTriggersTabPermissions"
        },
        "typesTabPermissions" : {
          "$ref" : "#/definitions/TypesTabPermissions"
        },
        "projectsTabPermissions" : {
          "$ref" : "#/definitions/ProjectsTabPermissions"
        },
        "ktaConfigurationPermissions" : {
          "$ref" : "#/definitions/KTAConfigurationPermissions"
        },
        "resourcesTabPermissions" : {
          "$ref" : "#/definitions/ResourcesTabPermissions"
        },
        "triggerMappingsTabPermissions" : {
          "$ref" : "#/definitions/TriggerMappingsTabPermissions"
        },
        "usersTabPermissions" : {
          "$ref" : "#/definitions/UsersTabPermissions"
        },
        "mailServerPermissions" : {
          "$ref" : "#/definitions/MailServerPermissions"
        },
        "appPermissions" : {
          "$ref" : "#/definitions/AppPermissions"
        },
        "clustersAndSettingsTabPermissions" : {
          "$ref" : "#/definitions/ClustersAndSettingsTabPermissions"
        },
        "rfsPermissions" : {
          "$ref" : "#/definitions/RFSPermissions"
        }
      }
    },
    "PersonaRestriction" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Persona restriction type",
          "enum" : [ "BY_ROBOT_NAME", "BY_TOKEN" ]
        },
        "token" : {
          "type" : "string",
          "position" : 1,
          "description" : "Restriction token"
        },
        "robotInfo" : {
          "position" : 2,
          "description" : "Robot full identification information",
          "$ref" : "#/definitions/RobotFullInfo"
        }
      },
      "description" : "Persona related restriction on admission"
    },
    "PersonalizationDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ProcessDiscoveryAPIVersionDTO" : {
      "type" : "object",
      "properties" : {
        "branch" : {
          "type" : "string"
        },
        "linuxVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "winVersion" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ProcessDiscoveryAnalyzerSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "clusterNetworkPattern" : {
          "type" : "string"
        },
        "clusterMasterWebUiPort" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterMasterMemory" : {
          "type" : "number",
          "format" : "float"
        },
        "executionPeriodHours" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterWorkerWebUiPort" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executeAtSpecificTimes" : {
          "type" : "string"
        },
        "clusterMasterAddress" : {
          "type" : "string"
        },
        "clusterMasterPort" : {
          "type" : "integer",
          "format" : "int64"
        },
        "analyzerDatabaseSettings" : {
          "$ref" : "#/definitions/ProcessDiscoveryDatabaseSettingsDTO"
        },
        "clusterWorkerMemory" : {
          "type" : "number",
          "format" : "float"
        },
        "readBatchSize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "writeBatchSize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduleMode" : {
          "type" : "string",
          "enum" : [ "EXECUTE_AT_SPECIFIC_TIMES", "PERIODICALLY" ]
        }
      },
      "description" : "Class representing a Process Discovery Analyzer Data."
    },
    "ProcessDiscoveryDatabaseSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "dbConnectionTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dbAdminName" : {
          "type" : "string"
        },
        "dbAdminPassword" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "schema" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Database Setting Information for Process Discovery."
    },
    "ProcessDiscoveryGroupSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "minUiaTreeImmutabilityDurationMs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxIsaYPositionDiff" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxComputeScoreDistance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxInactivityIntervalMinutes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxSequentialNoiseEventCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "agentDatabaseSettings" : {
          "$ref" : "#/definitions/ProcessDiscoveryDatabaseSettingsDTO"
        },
        "minProcessInstanceCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxProcessDistance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minActionBlockScore" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minStrongPairScore" : {
          "type" : "integer",
          "format" : "int64"
        },
        "eventCountForBlockComparison" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxIsaXPositionDiff" : {
          "type" : "integer",
          "format" : "int64"
        },
        "analyze" : {
          "type" : "boolean"
        },
        "blurScreenshots" : {
          "type" : "boolean"
        },
        "record" : {
          "type" : "boolean"
        },
        "nonUiaApps" : {
          "type" : "string"
        },
        "maxAppCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ignoreApps" : {
          "type" : "string"
        },
        "sqliteMaxSizeMb" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minActionCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a  Process Discovery Group Data."
    },
    "ProcessDiscoveryScheduleDTO" : {
      "type" : "object",
      "properties" : {
        "localizedMessage" : {
          "type" : "string"
        },
        "scheduleMode" : {
          "type" : "string",
          "enum" : [ "EXECUTE_AT_SPECIFIC_TIMES", "PERIODICALLY" ]
        }
      }
    },
    "ProjectDTO" : {
      "type" : "object",
      "properties" : {
        "forceServiceCluster" : {
          "type" : "boolean"
        },
        "authenticateRest" : {
          "type" : "boolean"
        },
        "serviceClusterName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "importedBy" : {
          "type" : "string"
        },
        "importedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "vcsSettings" : {
          "$ref" : "#/definitions/VCSSettings"
        },
        "roleMappings" : {
          "type" : "string"
        },
        "accessControl" : {
          "type" : "string"
        },
        "mappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupToRoleMappingData"
          }
        }
      }
    },
    "ProjectInfo" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Project name"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Project id"
        }
      },
      "description" : "Admissions information"
    },
    "ProjectsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "editProject" : {
          "type" : "boolean"
        },
        "viewProjects" : {
          "type" : "boolean"
        },
        "addProject" : {
          "type" : "boolean"
        },
        "deleteProject" : {
          "type" : "boolean"
        }
      }
    },
    "ProxyServerSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "proxyHost" : {
          "type" : "string"
        },
        "useProxy" : {
          "type" : "boolean"
        },
        "proxyPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "proxyPassword" : {
          "type" : "string"
        },
        "proxyUsername" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a MC Proxy Server setting Data."
    },
    "QueuedRobotExecutionResult" : {
      "type" : "object",
      "required" : [ "errors", "executionTime", "status", "statusCode", "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "description" : "List of robot execution outputs",
          "items" : {
            "$ref" : "#/definitions/RobotOutputParam"
          }
        },
        "errors" : {
          "type" : "array",
          "description" : "List of robot execution errors",
          "items" : {
            "$ref" : "#/definitions/RobotExecutionError"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Current task status"
        },
        "statusCode" : {
          "type" : "string",
          "description" : "Current task status code",
          "enum" : [ "QUEUED", "RUNNING", "COMPLETED", "CANCELLED", "TIMED_OUT", "MC_SHUT_DOWN" ]
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "the robot id"
        },
        "executionTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Robot execution time on RS"
        },
        "executionId" : {
          "type" : "string",
          "description" : "Execution id from the RoboServer"
        }
      },
      "description" : "Queued robot execution result"
    },
    "QueuingRequest" : {
      "type" : "object",
      "required" : [ "robotInfo" ],
      "properties" : {
        "robotInputConfig" : {
          "description" : "Robot input configuration values",
          "$ref" : "#/definitions/RobotInputConfigRobotInputAttributeValue"
        },
        "priority" : {
          "type" : "string",
          "example" : "MEDIUM",
          "description" : "Robot priority",
          "enum" : [ "MINIMUM", "LOW", "MEDIUM", "HIGH", "MAXIMUM" ]
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 600,
          "description" : "Robot queue timeout in seconds"
        },
        "robotInfo" : {
          "description" : "Robot identification information",
          "$ref" : "#/definitions/RobotInfo"
        },
        "stopOnError" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If set to true, the robot will stop upon API exception"
        }
      },
      "description" : "Robot queuing request"
    },
    "QueuingResponse" : {
      "type" : "object",
      "required" : [ "ticket" ],
      "properties" : {
        "ticket" : {
          "type" : "string",
          "description" : "Robot task queue ticket"
        }
      },
      "description" : "Robot queuing response"
    },
    "RESTAttribute" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "RESTComplexType" : {
      "type" : "object",
      "properties" : {
        "variableName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "typeName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "attributes" : {
          "type" : "array",
          "xml" : {
            "name" : "attribute"
          },
          "items" : {
            "xml" : {
              "name" : "attribute"
            },
            "$ref" : "#/definitions/RESTAttribute"
          }
        }
      }
    },
    "RESTOAuthUser" : {
      "type" : "object",
      "properties" : {
        "variableName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "userName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "applicationName" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "RFSPermissions" : {
      "type" : "object",
      "properties" : {
        "view" : {
          "type" : "boolean"
        },
        "retrieve" : {
          "type" : "boolean"
        },
        "manage" : {
          "type" : "boolean"
        }
      }
    },
    "RFSServerSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "host" : {
          "type" : "string"
        },
        "useRFS" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a Robot File System Server setting Data."
    },
    "ReferencesDTO" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "totalRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalSnippets" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RemoteHubDTO" : {
      "type" : "object",
      "properties" : {
        "connectionUrl" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        },
        "remoteHubStatus" : {
          "type" : "string",
          "enum" : [ "AVAILABLE", "IN_USE", "RESERVED", "OFFLINE", "SUSPENDED", "SHUTDOWN", "RESTARTING", "UNKNOWN" ]
        },
        "executionId" : {
          "type" : "string"
        },
        "maxQueue" : {
          "type" : "string"
        },
        "uniqueKey" : {
          "type" : "string"
        },
        "reportedLicense" : {
          "type" : "string"
        },
        "queuedRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runRobotAmount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runningRobots" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "Resource" : {
      "type" : "object",
      "properties" : {
        "open" : {
          "type" : "boolean"
        },
        "file" : {
          "type" : "file"
        },
        "url" : {
          "type" : "string",
          "format" : "url"
        },
        "readable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string",
          "format" : "uri"
        },
        "filename" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        }
      }
    },
    "ResourceFileDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "importedBy" : {
          "type" : "string"
        },
        "importedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "byteSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "folder" : {
          "type" : "string"
        }
      }
    },
    "ResourcesTabPermissions" : {
      "type" : "object",
      "properties" : {
        "downloadResource" : {
          "type" : "boolean"
        },
        "addResource" : {
          "type" : "boolean"
        },
        "addConnector" : {
          "type" : "boolean"
        },
        "viewResources" : {
          "type" : "boolean"
        },
        "deleteConnector" : {
          "type" : "boolean"
        },
        "deleteResource" : {
          "type" : "boolean"
        }
      }
    },
    "RestServiceInfo" : {
      "type" : "object",
      "properties" : {
        "requiresInput" : {
          "type" : "boolean"
        },
        "json" : {
          "type" : "string"
        },
        "xml" : {
          "type" : "string"
        },
        "URL" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        }
      }
    },
    "RfsAdmission" : {
      "type" : "object",
      "required" : [ "name", "path", "projectId", "projectName", "restrictionType", "userName" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "File system name"
        },
        "userName" : {
          "type" : "string",
          "position" : 1,
          "description" : "RFS user name"
        },
        "path" : {
          "type" : "string",
          "position" : 2,
          "description" : "RFS path"
        },
        "projectName" : {
          "type" : "string",
          "position" : 3,
          "description" : "RFS project name"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64",
          "position" : 4,
          "description" : "RFS project id"
        },
        "restrictionType" : {
          "type" : "string",
          "position" : 20,
          "description" : "Admission restriction type",
          "enum" : [ "ANY_PERSONA", "RESTRICTED_PERSONAE" ]
        },
        "personae" : {
          "type" : "array",
          "position" : 21,
          "description" : "Personae restricted to (only for RESTRICTED_PERSONAE type)",
          "items" : {
            "$ref" : "#/definitions/PersonaRestriction"
          }
        }
      },
      "description" : "Robot File System admission"
    },
    "RfsConfigurationDTO" : {
      "type" : "object",
      "properties" : {
        "projectScope" : {
          "type" : "boolean"
        },
        "accessTokens" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "SMB", "TEMPORARY" ]
        },
        "path" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "RfsShareTypeDTO" : {
      "type" : "object",
      "properties" : {
        "shareType" : {
          "type" : "string",
          "enum" : [ "SMB", "TEMPORARY" ]
        },
        "localizedMessage" : {
          "type" : "string"
        }
      }
    },
    "RoboServerAuthenticationSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "useCredentials" : {
          "type" : "boolean"
        }
      },
      "description" : "Class representing a Robo Server Authentication setting Data."
    },
    "RoboServerBriefDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "host" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterName" : {
          "type" : "string"
        },
        "maxQueue" : {
          "type" : "string"
        },
        "uniqueKey" : {
          "type" : "string"
        },
        "reportedLicense" : {
          "type" : "string"
        },
        "queuedRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runRobotAmount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runningRobots" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "RoboServerDTO" : {
      "type" : "object",
      "properties" : {
        "licenseDistribution" : {
          "type" : "boolean"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string"
        },
        "cpuCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastUpdated" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tempProfiling" : {
          "type" : "boolean"
        },
        "uptime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instanceId" : {
          "type" : "string"
        },
        "currentlyAboveThreshold" : {
          "type" : "string"
        },
        "assignedLicenseUnits" : {
          "type" : "number",
          "format" : "double"
        },
        "runtimeInfoSupported" : {
          "type" : "boolean"
        },
        "aboveMemoryThresholdMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "host" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "commandLine" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxMemory" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "roboServerStatus" : {
          "type" : "string",
          "enum" : [ "ONLINE", "OFFLINE", "SHUTTING_DOWN", "DUPLICATE", "CONNECTING", "UNKNOWN" ]
        },
        "maxQueue" : {
          "type" : "string"
        },
        "uniqueKey" : {
          "type" : "string"
        },
        "reportedLicense" : {
          "type" : "string"
        },
        "queuedRobots" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runRobotAmount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runningRobots" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "RoboServerDisplayData" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "hostAddress" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messageDetails" : {
          "type" : "string"
        }
      }
    },
    "RobotDetail" : {
      "type" : "object",
      "properties" : {
        "containsReturnObject" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RobotDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "string"
        },
        "triggerActivationAllowed" : {
          "type" : "boolean"
        },
        "users" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "scheduleNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "triggers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "rl2robotsReferenced" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "inputTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "snippetsUsed" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "storedTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "returnedTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "importedBy" : {
          "type" : "string"
        },
        "importedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "missedTypes" : {
          "type" : "string"
        },
        "missedSnippets" : {
          "type" : "string"
        },
        "missedRobots" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "byteSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "folder" : {
          "type" : "string"
        }
      }
    },
    "RobotDocumentationHeaderDTO" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "inputTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "savedByVersions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "subRobotNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "triggerNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "referencedTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "outputTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "browserEngine" : {
          "type" : "string"
        },
        "remoteHubs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "browserEngineType" : {
          "type" : "string"
        },
        "storeInDatabaseTypes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "referencedSnippets" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "comment" : {
          "type" : "string"
        }
      },
      "description" : "Robot documentation header"
    },
    "RobotExecutionError" : {
      "type" : "object",
      "required" : [ "date", "errorLocation", "errorLocationCode", "errorMessage", "robotRunId", "robotUrl" ],
      "properties" : {
        "robotUrl" : {
          "type" : "string",
          "description" : "Robot url"
        },
        "robotRunId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The robot run id, if robot was started"
        },
        "errorLocation" : {
          "type" : "string",
          "description" : "Error location"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Error date"
        },
        "errorLocationCode" : {
          "type" : "string",
          "description" : "Error location code"
        }
      },
      "description" : "Robot error"
    },
    "RobotExecutionResult" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "array",
          "description" : "Robot run output",
          "items" : {
            "$ref" : "#/definitions/RobotOutputParam"
          }
        },
        "errors" : {
          "type" : "array",
          "description" : "Robot run errors",
          "items" : {
            "$ref" : "#/definitions/RobotExecutionError"
          }
        },
        "executionTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Robot execution duration in milliseconds"
        }
      },
      "description" : "Robot execution result"
    },
    "RobotFullInfo" : {
      "type" : "object",
      "required" : [ "projectName", "robotId", "robotName" ],
      "properties" : {
        "robotId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Robot id",
          "minimum" : 0,
          "exclusiveMaximum" : true
        },
        "projectName" : {
          "type" : "string",
          "example" : "Default project",
          "description" : "Project name"
        },
        "robotName" : {
          "type" : "string",
          "example" : "folder/first.robot",
          "description" : "Robot full name"
        }
      },
      "description" : "Robot full identification information"
    },
    "RobotInfo" : {
      "type" : "object",
      "required" : [ "projectName", "robotName" ],
      "properties" : {
        "projectName" : {
          "type" : "string",
          "example" : "Default project",
          "description" : "Project name"
        },
        "robotName" : {
          "type" : "string",
          "example" : "folder/first.robot",
          "description" : "Robot full name"
        }
      },
      "description" : "Robot identification information"
    },
    "RobotInputAttribute" : {
      "type" : "object",
      "required" : [ "name", "type", "value" ],
      "properties" : {
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Attribute requirement"
        },
        "defaultValue" : {
          "type" : "string",
          "description" : "Attribute default value"
        },
        "visible" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Attribute visibility"
        },
        "type" : {
          "type" : "string",
          "example" : "JSON",
          "description" : "Attribute type",
          "enum" : [ "SHORT_TEXT", "LONG_TEXT", "INTEGER", "NUMBER", "BOOLEAN", "CHARACTER", "PASSWORD", "HTML", "XML", "JSON", "EXCEL", "DATE", "BINARY", "IMAGE", "PDF", "PROPERTIES", "SESSION", "CURRENCY", "COUNTRY", "LANGUAGE", "REFIND_KEY" ]
        },
        "comment" : {
          "type" : "string",
          "description" : "Attribute comment"
        },
        "name" : {
          "type" : "string",
          "example" : "name",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "value",
          "description" : "Attribute value"
        }
      },
      "description" : "Robot input basic parameter attribute"
    },
    "RobotInputAttributeValue" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "name",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "value",
          "description" : "Attribute value"
        }
      },
      "description" : "Robot input basic parameter attribute value"
    },
    "RobotInputConfig" : {
      "type" : "object",
      "required" : [ "inputObjects" ],
      "properties" : {
        "inputObjects" : {
          "type" : "array",
          "description" : "Robot input parameters",
          "items" : {
            "$ref" : "#/definitions/RobotInputParamRobotInputAttributeValue"
          }
        }
      },
      "description" : "Robot input configuration required to run robot"
    },
    "RobotInputConfigRobotInputAttribute" : {
      "type" : "object",
      "required" : [ "inputObjects" ],
      "properties" : {
        "inputObjects" : {
          "type" : "array",
          "description" : "Robot input parameters",
          "items" : {
            "$ref" : "#/definitions/RobotInputParamRobotInputAttribute"
          }
        }
      },
      "description" : "Robot input configuration required to run robot"
    },
    "RobotInputConfigRobotInputAttributeValue" : {
      "type" : "object",
      "required" : [ "inputObjects" ],
      "properties" : {
        "inputObjects" : {
          "type" : "array",
          "description" : "Robot input parameters",
          "items" : {
            "$ref" : "#/definitions/RobotInputParamRobotInputAttributeValue"
          }
        }
      },
      "description" : "Robot input configuration required to run robot"
    },
    "RobotInputOAuth" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The OAuth user id (optional)"
        },
        "applicationName" : {
          "type" : "string",
          "description" : "The OAuth application name"
        },
        "userName" : {
          "type" : "string",
          "description" : "The OAuth user name"
        }
      },
      "description" : "Robot input OAuth user information. The OAuth user can be identified using either a user name and application name, or the id"
    },
    "RobotInputParam" : {
      "type" : "object",
      "required" : [ "type", "variableName" ],
      "properties" : {
        "variableName" : {
          "type" : "string",
          "example" : "variable",
          "description" : "Variable name"
        },
        "typeName" : {
          "type" : "string",
          "example" : "name",
          "description" : "Parameter type name (only required for BASIC type)"
        },
        "type" : {
          "type" : "string",
          "example" : "BASIC",
          "description" : "Robot input type",
          "enum" : [ "BASIC", "OAUTH" ]
        },
        "attributes" : {
          "type" : "array",
          "description" : "Parameter attributes (only required for BASIC type)",
          "items" : {
            "$ref" : "#/definitions/RobotInputAttributeValue"
          }
        },
        "oauth" : {
          "description" : "OAuth information (only required for OAUTH type)",
          "$ref" : "#/definitions/RobotInputOAuth"
        }
      },
      "description" : "Robot input parameter"
    },
    "RobotInputParamRobotInputAttribute" : {
      "type" : "object",
      "required" : [ "type", "variableName" ],
      "properties" : {
        "variableName" : {
          "type" : "string",
          "example" : "variable",
          "description" : "Variable name"
        },
        "typeName" : {
          "type" : "string",
          "example" : "name",
          "description" : "Parameter type name (only required for BASIC type)"
        },
        "type" : {
          "type" : "string",
          "example" : "BASIC",
          "description" : "Robot input type",
          "enum" : [ "BASIC", "OAUTH" ]
        },
        "attributes" : {
          "type" : "array",
          "description" : "Parameter attributes (only required for BASIC type)",
          "items" : {
            "$ref" : "#/definitions/RobotInputAttribute"
          }
        },
        "oauth" : {
          "description" : "OAuth information (only required for OAUTH type)",
          "$ref" : "#/definitions/RobotInputOAuth"
        }
      },
      "description" : "Robot input parameter"
    },
    "RobotInputParamRobotInputAttributeValue" : {
      "type" : "object",
      "required" : [ "type", "variableName" ],
      "properties" : {
        "variableName" : {
          "type" : "string",
          "example" : "variable",
          "description" : "Variable name"
        },
        "typeName" : {
          "type" : "string",
          "example" : "name",
          "description" : "Parameter type name (only required for BASIC type)"
        },
        "type" : {
          "type" : "string",
          "example" : "BASIC",
          "description" : "Robot input type",
          "enum" : [ "BASIC", "OAUTH" ]
        },
        "attributes" : {
          "type" : "array",
          "description" : "Parameter attributes (only required for BASIC type)",
          "items" : {
            "$ref" : "#/definitions/RobotInputAttributeValue"
          }
        },
        "oauth" : {
          "description" : "OAuth information (only required for OAUTH type)",
          "$ref" : "#/definitions/RobotInputOAuth"
        }
      },
      "description" : "Robot input parameter"
    },
    "RobotMessageDisplayData" : {
      "type" : "object",
      "properties" : {
        "stepName" : {
          "type" : "string"
        },
        "locationCode" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "messageDetails" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        }
      }
    },
    "RobotOutputAttribute" : {
      "type" : "object",
      "required" : [ "name", "type", "value" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Roboserver type"
        },
        "attributeType" : {
          "type" : "string",
          "description" : "Attribute type",
          "enum" : [ "SHORT_TEXT", "LONG_TEXT", "INTEGER", "NUMBER", "BOOLEAN", "CHARACTER", "PASSWORD", "HTML", "XML", "JSON", "EXCEL", "DATE", "BINARY", "IMAGE", "PDF", "PROPERTIES", "SESSION", "CURRENCY", "COUNTRY", "LANGUAGE", "REFIND_KEY" ]
        },
        "name" : {
          "type" : "string",
          "example" : "name",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "value",
          "description" : "Attribute value"
        }
      },
      "description" : "Robot output parameter attribute"
    },
    "RobotOutputParam" : {
      "type" : "object",
      "required" : [ "attributes", "robotRunId", "typeName" ],
      "properties" : {
        "robotRunId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The robot run id"
        },
        "typeName" : {
          "type" : "string",
          "example" : "name",
          "description" : "Output parameter type name"
        },
        "attributes" : {
          "type" : "array",
          "description" : "Output parameter attributes",
          "items" : {
            "$ref" : "#/definitions/RobotOutputAttribute"
          }
        }
      },
      "description" : "Robot output parameter"
    },
    "RobotRunDisplayData" : {
      "type" : "object",
      "properties" : {
        "startRequestedTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "extractedObjects" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hostAddress" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "host" : {
          "type" : "string"
        },
        "input" : {
          "type" : "string"
        },
        "clientHost" : {
          "type" : "string"
        },
        "clientAddress" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "minutesSaved" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "errorCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "warningCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executionId" : {
          "type" : "string"
        },
        "queueTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "infoCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RobotRuntimeDTO" : {
      "type" : "object",
      "properties" : {
        "maxRuntime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotUrl" : {
          "type" : "string"
        },
        "kcuPointCost" : {
          "type" : "integer",
          "format" : "int64"
        },
        "kcuWaitNanos" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startTimeClient" : {
          "type" : "integer",
          "format" : "int64"
        },
        "locationCode" : {
          "type" : "string"
        },
        "emailsSent" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stopping" : {
          "type" : "boolean"
        },
        "outputCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executedSteps" : {
          "type" : "integer",
          "format" : "int64"
        },
        "loadedBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "openLog" : {
          "type" : "string"
        },
        "stopIfConnectionLost" : {
          "type" : "boolean"
        },
        "maxExecutedSteps" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeOfLastExtractedValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stepExecutionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stopOnAPIException" : {
          "type" : "boolean"
        },
        "maxObjectsReturned" : {
          "type" : "integer",
          "format" : "int64"
        },
        "project" : {
          "type" : "string"
        },
        "server" : {
          "type" : "string"
        },
        "running" : {
          "type" : "string"
        },
        "scheduleRunId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotLibrary" : {
          "type" : "string"
        },
        "executionPath" : {
          "type" : "string"
        },
        "executionStep" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "serverId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RobotRuntimeRequest" : {
      "type" : "object",
      "properties" : {
        "selectPageRequest" : {
          "$ref" : "#/definitions/SelectPageRequest"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "serverId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "refreshMillis" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Robot runtime request. "
    },
    "RobotSummaryDisplayData" : {
      "type" : "object",
      "properties" : {
        "errors" : {
          "type" : "integer",
          "format" : "int64"
        },
        "info" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectName" : {
          "type" : "string"
        },
        "warnings" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        },
        "extractedValues" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runs" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RobotsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "viewRobots" : {
          "type" : "boolean"
        },
        "addRobot" : {
          "type" : "boolean"
        },
        "generateAPICode" : {
          "type" : "boolean"
        },
        "deleteRobot" : {
          "type" : "boolean"
        },
        "downloadRobot" : {
          "type" : "boolean"
        },
        "runRobot" : {
          "type" : "boolean"
        }
      }
    },
    "RunningClusterDTO" : {
      "type" : "object",
      "properties" : {
        "availableCapacity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalCapacity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "string"
        },
        "withCapacity" : {
          "type" : "string"
        }
      },
      "description" : "DTO to show running Cluster"
    },
    "RunningTaskDTO" : {
      "type" : "object",
      "properties" : {
        "inputString" : {
          "type" : "string"
        },
        "lastStatusChange" : {
          "type" : "string",
          "format" : "date-time"
        },
        "priority" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectName" : {
          "type" : "string"
        },
        "scheduleName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "taskStatus" : {
          "type" : "string",
          "enum" : [ "QUEUED", "ACQUIRED", "RUNNING", "COMPLETED", "UNKNOWN" ]
        },
        "taskPriority" : {
          "type" : "string",
          "enum" : [ "MINIMUM", "LOW", "MEDIUM", "HIGH", "MAXIMUM", "UNKNOWN" ]
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "clusterName" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "description" : "DTO to show running Task"
    },
    "SMTPServerSettingsDTO" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "host" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "encryption" : {
          "type" : "string",
          "enum" : [ "NONE", "TLS", "SMTPS" ]
        }
      },
      "description" : "Class representing a MC SMTP Server setting Data."
    },
    "SOAPRequest" : {
      "type" : "object",
      "properties" : {
        "requestBody" : {
          "type" : "string"
        },
        "flat" : {
          "type" : "boolean"
        },
        "requestURL" : {
          "type" : "string"
        },
        "soapAction" : {
          "type" : "string"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "DTO to return the output of the robot as a SOAP message"
    },
    "ScheduleEditDTO" : {
      "type" : "object",
      "properties" : {
        "scheduleData" : {
          "$ref" : "#/definitions/ScheduleInputDTO"
        },
        "scheduleJobs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SchedulerJobEditDTO"
          }
        }
      },
      "description" : "Class representing a Schedule Creation/Edit data."
    },
    "ScheduleInputDTO" : {
      "type" : "object",
      "properties" : {
        "runRobotsSequentially" : {
          "type" : "boolean"
        },
        "preProcessingRobotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "postProcessingRobotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxObjectsExtracted" : {
          "type" : "integer",
          "format" : "int32"
        },
        "emails" : {
          "type" : "string"
        },
        "trigger" : {
          "$ref" : "#/definitions/TriggerDTO"
        },
        "jobsPriority" : {
          "type" : "string",
          "enum" : [ "MINIMUM", "LOW", "MEDIUM", "HIGH", "MAXIMUM" ]
        },
        "maxRuntime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobsTimeout" : {
          "type" : "integer",
          "format" : "int64"
        },
        "useEmail" : {
          "type" : "boolean"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Schedule data."
    },
    "ScheduleMessageDisplayData" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "scheduleRunId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "messageDetails" : {
          "type" : "string"
        },
        "scheduleName" : {
          "type" : "string"
        }
      }
    },
    "ScheduleOutputDTO" : {
      "type" : "object",
      "properties" : {
        "robotErrorInLastRun" : {
          "type" : "integer",
          "format" : "int64"
        },
        "activeJobs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "previousRun" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalJobs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastRunId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdBy" : {
          "type" : "string"
        },
        "nextRun" : {
          "type" : "string",
          "format" : "date-time"
        },
        "schedulerId" : {
          "type" : "string"
        },
        "totalRuns" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobCount" : {
          "type" : "string"
        },
        "errorsInLastRun" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "running" : {
          "type" : "boolean"
        },
        "projectName" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "clusterName" : {
          "type" : "string"
        },
        "runRobotsSequentially" : {
          "type" : "boolean"
        },
        "preProcessingRobotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "postProcessingRobotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxObjectsExtracted" : {
          "type" : "integer",
          "format" : "int32"
        },
        "emails" : {
          "type" : "string"
        },
        "trigger" : {
          "$ref" : "#/definitions/TriggerDTO"
        },
        "jobsPriority" : {
          "type" : "string",
          "enum" : [ "MINIMUM", "LOW", "MEDIUM", "HIGH", "MAXIMUM" ]
        },
        "maxRuntime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobsTimeout" : {
          "type" : "integer",
          "format" : "int64"
        },
        "useEmail" : {
          "type" : "boolean"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Schedule response data."
    },
    "ScheduleRunDisplayData" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hostName" : {
          "type" : "string"
        },
        "result" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "scheduleId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduleName" : {
          "type" : "string"
        },
        "errorCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "warningCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "queueTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotErrorCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "triggerTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "infoCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SchedulerIntervalDTO" : {
      "type" : "object",
      "properties" : {
        "interval" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeUnit" : {
          "type" : "string",
          "enum" : [ "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ]
        }
      },
      "description" : "Class representing a time interval in given time units for Schedule."
    },
    "SchedulerJobDTO" : {
      "type" : "object",
      "properties" : {
        "robotInputConfig" : {
          "$ref" : "#/definitions/RobotInputConfigRobotInputAttribute"
        },
        "robotMatchingStrategy" : {
          "type" : "string",
          "enum" : [ "START_WITH", "CONTAINS", "MATCHES" ]
        },
        "missingDependencies" : {
          "type" : "boolean"
        },
        "scopeName" : {
          "type" : "string"
        },
        "displayOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "singleRobot" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        },
        "jobName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Schedule Job details."
    },
    "SchedulerJobEditDTO" : {
      "type" : "object",
      "properties" : {
        "robotInputConfig" : {
          "$ref" : "#/definitions/RobotInputConfigRobotInputAttributeValue"
        },
        "robotMatchingStrategy" : {
          "type" : "string",
          "enum" : [ "START_WITH", "CONTAINS", "MATCHES" ]
        },
        "missingDependencies" : {
          "type" : "boolean"
        },
        "scopeName" : {
          "type" : "string"
        },
        "displayOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "singleRobot" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        },
        "jobName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Schedule Job edit info."
    },
    "SchedulesTabPermissions" : {
      "type" : "object",
      "properties" : {
        "viewSchedules" : {
          "type" : "boolean"
        },
        "deleteSchedule" : {
          "type" : "boolean"
        },
        "startSchedules" : {
          "type" : "boolean"
        },
        "stopSchedules" : {
          "type" : "boolean"
        },
        "editSchedules" : {
          "type" : "boolean"
        }
      }
    },
    "SelectPageRequest" : {
      "type" : "object",
      "properties" : {
        "secondFilterValue" : {
          "type" : "string"
        },
        "filterValue" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderBy" : {
          "type" : "string"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asc" : {
          "type" : "boolean"
        },
        "filterFieldName" : {
          "type" : "string"
        }
      }
    },
    "SelectPageResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "type" : "object"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseApplicationEntityDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ApplicationEntityDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseClusterDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ClusterDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseCyberArkEntryDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/CyberArkEntryDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseDasMessageDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/DasMessageDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseDatabaseMappingDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/DatabaseMappingDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseDeviceMappingDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/DeviceMappingDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseEmailRobotTriggerDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/EmailRobotTriggerDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseExportDataDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ExportDataDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseGroupDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/GroupDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseLicenseAssignmentUserDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/LicenseAssignmentUserDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseMailAccountDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/MailAccountDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseOAuthApplicationDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/OAuthApplicationDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseOAuthUserDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/OAuthUserDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponsePasswordStoreEntryDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/PasswordStoreEntryDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseProjectDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ProjectDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRemoteHubDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RemoteHubDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseResourceFileDisplayDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ResourceFileDisplayDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRfsConfigurationDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RfsConfigurationDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRoboServerDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RoboServerDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRoboServerDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RoboServerDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRobotDisplayDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RobotDisplayDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRobotMessageDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RobotMessageDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRobotRunDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RobotRunDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRobotRuntimeDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RobotRuntimeDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRobotSummaryDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RobotSummaryDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRunningClusterDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RunningClusterDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseRunningTaskDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/RunningTaskDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseScheduleMessageDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ScheduleMessageDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseScheduleOutputDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ScheduleOutputDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseScheduleRunDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/ScheduleRunDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseSnippetFileDisplayDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/SnippetFileDisplayDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseStoreAccessDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/StoreAccessDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseString" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "type" : "string"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseTableRowDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/TableRowDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseTaskMessageDisplayData" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/TaskMessageDisplayData"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseTriggerLabelMappingDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/TriggerLabelMappingDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseTriggerUserMappingDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/TriggerUserMappingDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseTypeFileDisplayDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/TypeFileDisplayDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "SelectPageResponseUserExtendedDTO" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "example" : "[{\"foo\": \"bar\"}, {\"foo\": \"baz\"}]",
          "description" : "List of the requested entities",
          "items" : {
            "$ref" : "#/definitions/UserExtendedDTO"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Total number of entities"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "the current page number"
        }
      },
      "description" : "DTO to show page of entities on client"
    },
    "Serializable" : {
      "type" : "object"
    },
    "ServerTimeResponse" : {
      "type" : "object",
      "properties" : {
        "serverTime" : {
          "type" : "string"
        }
      }
    },
    "ServiceRequest" : {
      "type" : "object",
      "properties" : {
        "executionId" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "oauthUsers" : {
          "type" : "array",
          "xml" : {
            "name" : "oauth-users",
            "wrapped" : true
          },
          "items" : {
            "xml" : {
              "name" : "oauth-user"
            },
            "$ref" : "#/definitions/RESTOAuthUser"
          }
        },
        "parameters" : {
          "type" : "array",
          "xml" : {
            "wrapped" : true
          },
          "items" : {
            "xml" : {
              "name" : "variable"
            },
            "$ref" : "#/definitions/RESTComplexType"
          }
        }
      },
      "xml" : {
        "name" : "rest-request"
      }
    },
    "SetFolderRequest" : {
      "type" : "object",
      "properties" : {
        "pathName" : {
          "type" : "string"
        },
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "ShutdownRoboServerRequest" : {
      "type" : "object",
      "properties" : {
        "shutdownMethod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeoutSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "serverId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a shutdown RoboServer request. "
    },
    "SimpleLicenseAssigmentDTO" : {
      "type" : "object",
      "properties" : {
        "licenseAssignmentClusterInfos" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LicenseAssignmentClusterDTO"
          }
        },
        "licenseModelName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a base License Assignment Information."
    },
    "SnippetFileDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "rl2robotsReferenced" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "inputTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "snippetsUsed" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "storedTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "returnedTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "importedBy" : {
          "type" : "string"
        },
        "importedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "missedTypes" : {
          "type" : "string"
        },
        "missedSnippets" : {
          "type" : "string"
        },
        "missedRobots" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "byteSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "folder" : {
          "type" : "string"
        }
      }
    },
    "SnippetsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "viewSnippets" : {
          "type" : "boolean"
        },
        "downloadSnippet" : {
          "type" : "boolean"
        },
        "addSnippet" : {
          "type" : "boolean"
        },
        "deleteSnippet" : {
          "type" : "boolean"
        }
      }
    },
    "SoapExampleInfo" : {
      "type" : "object",
      "properties" : {
        "projectName" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "normalWsdlUrl" : {
          "type" : "string"
        },
        "normalRequestUrl" : {
          "type" : "string"
        },
        "normalSoapAction" : {
          "type" : "string"
        },
        "normalInput" : {
          "type" : "string"
        },
        "flatWsdlUrl" : {
          "type" : "string"
        },
        "flatRequestUrl" : {
          "type" : "string"
        },
        "flatSoapAction" : {
          "type" : "string"
        },
        "flatInput" : {
          "type" : "string"
        }
      }
    },
    "SqlGeneratedData" : {
      "type" : "object",
      "properties" : {
        "sql" : {
          "type" : "string"
        },
        "databaseName" : {
          "type" : "string"
        }
      }
    },
    "StopRobotRequest" : {
      "type" : "object",
      "properties" : {
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executionId" : {
          "type" : "string"
        },
        "serverId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Robot stop request. "
    },
    "StoreAccessDTO" : {
      "type" : "object",
      "properties" : {
        "projectName" : {
          "type" : "string"
        },
        "projectEntries" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a Password Store Access and Cyber Ark Access response. "
    },
    "TableColumnDefinitionDTO" : {
      "type" : "object",
      "properties" : {
        "sortable" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean"
        },
        "displayName" : {
          "type" : "string"
        },
        "propertyName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Column data."
    },
    "TableRequest" : {
      "type" : "object",
      "properties" : {
        "dbMappingName" : {
          "type" : "string"
        },
        "catalogName" : {
          "type" : "string"
        },
        "schemaName" : {
          "type" : "string"
        },
        "tableName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "searchParameters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "secondFilterValue" : {
          "type" : "string"
        },
        "filterValue" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderBy" : {
          "type" : "string"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asc" : {
          "type" : "boolean"
        },
        "filterFieldName" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a base table request. "
    },
    "TableRowDTO" : {
      "type" : "object",
      "properties" : {
        "dataMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "keyField" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Table data."
    },
    "TagMappingsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "canViewTagMappings" : {
          "type" : "boolean"
        },
        "canManageTagMappings" : {
          "type" : "boolean"
        }
      }
    },
    "TaskMessageDisplayData" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "messageDetails" : {
          "type" : "string"
        },
        "robotName" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        }
      }
    },
    "TaskViewTabPermissions" : {
      "type" : "object",
      "properties" : {
        "stopTask" : {
          "type" : "boolean"
        },
        "viewTasks" : {
          "type" : "boolean"
        }
      }
    },
    "ThreadDumpDTO" : {
      "type" : "object",
      "properties" : {
        "threadDamp" : {
          "type" : "string"
        }
      },
      "description" : "Class representing a Thread Dump data."
    },
    "TimeUnitDTO" : {
      "type" : "object",
      "properties" : {
        "timeUnit" : {
          "type" : "string",
          "enum" : [ "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ]
        },
        "localizedMessage" : {
          "type" : "string"
        }
      }
    },
    "ToggleProfilingRequest" : {
      "type" : "object",
      "properties" : {
        "profilingSettings" : {
          "$ref" : "#/definitions/ClusterProfilingSettingsDTO"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "serverId" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "Class representing a profiling request for turning progiling on or off. "
    },
    "TriggerDTO" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "SIMPLE", "CRON" ]
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "nextFireTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cronPattern" : {
          "type" : "string"
        },
        "kapowTimeZone" : {
          "type" : "string",
          "enum" : [ "SERVER", "GMT_M12", "GMT_M11", "ADAK", "HONOLULU", "MARQUESAS", "ANCHORAGE", "GMT_M9", "TIJUANA", "GMT_M8", "LOS_ANGELES", "PHOENIX", "CHIHUAHUA", "DENVER", "WHITEHORSE", "CHICAGO", "EASTER", "MEXICO_CITY", "REGINA", "BOGOTA", "CANCUN", "NEW_YORK", "PORT_AU_PRINCE", "HAVANA", "INDIANA", "ASUNCION", "HALIFAX", "CARACAS", "CUIABA", "LA_PAZ", "SANTIAGO", "ST_JOHNS", "ARAGUAINA", "SAO_PAULO", "CAYENNE", "BUENOS_AIRES", "NUUK", "MONTEVIDEO", "PUNTA_ARENAS", "MIQUELON", "BAHIA", "GMT_M2", "AZORES", "CAPE_VERDE", "GMT", "LONDON", "REYKJAVIK", "SAO_TOME", "CASABLANCA", "BERLIN", "BUDAPEST", "PARIS", "WARSAW", "LAGOS", "AMMAN", "ATHENS", "BEIRUT", "CAIRO", "CHISINAU", "DAMASCUS", "GAZA", "HARARE", "HELSINKI", "JERUSALEM", "JUBA", "KALININGRAD", "KHARTOUM", "TRIPOLI", "WINDHOEK", "BAGHDAD", "ISTANBUL", "RIYADH", "MINSK", "MOSCOW", "NAIROBI", "VOLGOGRAD", "TEHRAN", "DUBAI", "BAKU", "SAMARA", "MAURITIUS", "SARATOV", "TBILISI", "YEREVAN", "KABUL", "ASHGABAT", "YEKATERINBURG", "KARACHI", "QYZYLORDA", "KOLKATA", "COLOMBO", "KATMANDU", "ALMATY", "DHAKA", "OMSK", "RANGOON", "BANGKOK", "BARNAUL", "HOVD", "KRASNOYARSK", "NOVOSIBIRSK", "TOMSK", "SHANGHAI", "IRKUTSK", "SINGAPORE", "PERTH", "TAIPEI", "ULAANBAATAR", "EUCLA", "CHITA", "TOKYO", "PYONGYANG", "SEOUL", "YAKUTSK", "ADELAIDE", "DARWIN", "BRISBANE", "SYDNEY", "PORT_MORESBY", "HOBART", "VLADIVOSTOK", "LORD_HOWE", "BOUGAINVILLE", "MAGADAN", "NORFOLK", "SAKHALIN", "GUADALCANAL", "ANADYR", "AUCKLAND", "GMT_P12", "FIJI", "CHATHAM", "GMT_P13", "TONGATAPU", "APIA", "KIRITIMATI" ]
        },
        "simpleTriggerData" : {
          "$ref" : "#/definitions/SchedulerIntervalDTO"
        }
      },
      "description" : "Class representing a Schedule Trigger data."
    },
    "TriggerLabelMappingDTO" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        }
      }
    },
    "TriggerMappingsTabPermissions" : {
      "type" : "object",
      "properties" : {
        "editTriggerMappings" : {
          "type" : "boolean"
        },
        "viewTriggerMappings" : {
          "type" : "boolean"
        },
        "addTriggerMappings" : {
          "type" : "boolean"
        },
        "deleteTriggerMappings" : {
          "type" : "boolean"
        }
      }
    },
    "TriggerTypeDTO" : {
      "type" : "object",
      "properties" : {
        "triggerType" : {
          "type" : "string",
          "enum" : [ "SIMPLE", "CRON" ]
        },
        "localizedMessage" : {
          "type" : "string"
        }
      }
    },
    "TriggerUserMappingDTO" : {
      "type" : "object",
      "properties" : {
        "triggers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "userName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "robotName" : {
          "type" : "string"
        }
      }
    },
    "TypeFileDisplayDTO" : {
      "type" : "object",
      "properties" : {
        "importedBy" : {
          "type" : "string"
        },
        "importedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "byteSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commitMessage" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "revisionNumber" : {
          "type" : "string"
        },
        "folder" : {
          "type" : "string"
        }
      }
    },
    "TypesTabPermissions" : {
      "type" : "object",
      "properties" : {
        "downloadType" : {
          "type" : "boolean"
        },
        "viewTypes" : {
          "type" : "boolean"
        },
        "deleteType" : {
          "type" : "boolean"
        },
        "addType" : {
          "type" : "boolean"
        }
      }
    },
    "UserDTO" : {
      "type" : "object",
      "properties" : {
        "fullName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "emailAddress" : {
          "type" : "string"
        },
        "groupNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "admin" : {
          "type" : "boolean"
        }
      }
    },
    "UserExtendedDTO" : {
      "type" : "object",
      "properties" : {
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastLogin" : {
          "type" : "string",
          "format" : "date-time"
        },
        "loginCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastIpAddress" : {
          "type" : "string"
        },
        "fullName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "emailAddress" : {
          "type" : "string"
        },
        "groupNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "admin" : {
          "type" : "boolean"
        }
      }
    },
    "UserGroupRequest" : {
      "type" : "object",
      "properties" : {
        "userNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "UsersTabPermissions" : {
      "type" : "object",
      "properties" : {
        "modify" : {
          "type" : "boolean"
        },
        "view" : {
          "type" : "boolean"
        }
      }
    },
    "VCSSettings" : {
      "type" : "object",
      "properties" : {
        "syncRobotsTypesSnippets" : {
          "type" : "boolean"
        },
        "readOnly" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "branch" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "syncSchedules" : {
          "type" : "boolean"
        },
        "syncResources" : {
          "type" : "boolean"
        },
        "syncOAuth" : {
          "type" : "boolean"
        }
      }
    },
    "VcsProjectConfiguration" : {
      "type" : "object",
      "properties" : {
        "projectName" : {
          "type" : "string"
        },
        "vcsUrl" : {
          "type" : "string"
        },
        "branch" : {
          "type" : "string"
        },
        "readOnly" : {
          "type" : "string"
        },
        "syncs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VcsSync"
          }
        }
      }
    },
    "VcsSync" : {
      "type" : "object",
      "properties" : {
        "fileType" : {
          "type" : "string",
          "enum" : [ "ROBOT", "TYPE", "SNIPPET", "SCHEDULE", "RESOURCE", "OAUTH", "CONNECTOR", "ROBOT2" ]
        },
        "commitId" : {
          "type" : "string"
        }
      }
    },
    "VersionResponse" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string"
        }
      }
    }
  }
}